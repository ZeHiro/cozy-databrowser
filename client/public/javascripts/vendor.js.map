{"version":3,"sources":["vendor/scripts/jquery-2.0.3.min.js","vendor/scripts/underscore-1.5.2.min.js","vendor/scripts/bootstrap.min.js","vendor/scripts/backbone-1.1.0.min.js","node_modules/jade-brunch/node_modules/jade/runtime.js","vendor/scripts/backbone.js","vendor/scripts/jquery.dataTables.js","vendor/scripts/polyglot.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;CCLA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;CCDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjnfile":"public/javascripts/vendor.js","sourcesContent":["/*! jQuery v2.0.3 | (c) 2005, 2013 jQuery Foundation, Inc. | jquery.org/license\n//@ sourceMappingURL=jquery-2.0.3.min.map\n*/\n(function(e,undefined){var t,n,r=typeof undefined,i=e.location,o=e.document,s=o.documentElement,a=e.jQuery,u=e.$,l={},c=[],p=\"2.0.3\",f=c.concat,h=c.push,d=c.slice,g=c.indexOf,m=l.toString,y=l.hasOwnProperty,v=p.trim,x=function(e,n){return new x.fn.init(e,n,t)},b=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,w=/\\S+/g,T=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,k=/^-ms-/,N=/-([\\da-z])/gi,E=function(e,t){return t.toUpperCase()},S=function(){o.removeEventListener(\"DOMContentLoaded\",S,!1),e.removeEventListener(\"load\",S,!1),x.ready()};x.fn=x.prototype={jquery:p,constructor:x,init:function(e,t,n){var r,i;if(!e)return this;if(\"string\"==typeof e){if(r=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:T.exec(e),!r||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof x?t[0]:t,x.merge(this,x.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:o,!0)),C.test(r[1])&&x.isPlainObject(t))for(r in t)x.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return i=o.getElementById(r[2]),i&&i.parentNode&&(this.length=1,this[0]=i),this.context=o,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):x.isFunction(e)?n.ready(e):(e.selector!==undefined&&(this.selector=e.selector,this.context=e.context),x.makeArray(e,this))},selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=x.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return x.each(this,e,t)},ready:function(e){return x.ready.promise().done(e),this},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(x.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:h,sort:[].sort,splice:[].splice},x.fn.init.prototype=x.fn,x.extend=x.fn.extend=function(){var e,t,n,r,i,o,s=arguments[0]||{},a=1,u=arguments.length,l=!1;for(\"boolean\"==typeof s&&(l=s,s=arguments[1]||{},a=2),\"object\"==typeof s||x.isFunction(s)||(s={}),u===a&&(s=this,--a);u>a;a++)if(null!=(e=arguments[a]))for(t in e)n=s[t],r=e[t],s!==r&&(l&&r&&(x.isPlainObject(r)||(i=x.isArray(r)))?(i?(i=!1,o=n&&x.isArray(n)?n:[]):o=n&&x.isPlainObject(n)?n:{},s[t]=x.extend(l,o,r)):r!==undefined&&(s[t]=r));return s},x.extend({expando:\"jQuery\"+(p+Math.random()).replace(/\\D/g,\"\"),noConflict:function(t){return e.$===x&&(e.$=u),t&&e.jQuery===x&&(e.jQuery=a),x},isReady:!1,readyWait:1,holdReady:function(e){e?x.readyWait++:x.ready(!0)},ready:function(e){(e===!0?--x.readyWait:x.isReady)||(x.isReady=!0,e!==!0&&--x.readyWait>0||(n.resolveWith(o,[x]),x.fn.trigger&&x(o).trigger(\"ready\").off(\"ready\")))},isFunction:function(e){return\"function\"===x.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?l[m.call(e)]||\"object\":typeof e},isPlainObject:function(e){if(\"object\"!==x.type(e)||e.nodeType||x.isWindow(e))return!1;try{if(e.constructor&&!y.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(t){return!1}return!0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||o;var r=C.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=x.buildFragment([e],t,i),i&&x(i).remove(),x.merge([],r.childNodes))},parseJSON:JSON.parse,parseXML:function(e){var t,n;if(!e||\"string\"!=typeof e)return null;try{n=new DOMParser,t=n.parseFromString(e,\"text/xml\")}catch(r){t=undefined}return(!t||t.getElementsByTagName(\"parsererror\").length)&&x.error(\"Invalid XML: \"+e),t},noop:function(){},globalEval:function(e){var t,n=eval;e=x.trim(e),e&&(1===e.indexOf(\"use strict\")?(t=o.createElement(\"script\"),t.text=e,o.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(k,\"ms-\").replace(N,E)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,s=j(e);if(n){if(s){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(s){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:function(e){return null==e?\"\":v.call(e)},makeArray:function(e,t){var n=t||[];return null!=e&&(j(Object(e))?x.merge(n,\"string\"==typeof e?[e]:e):h.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:g.call(t,e,n)},merge:function(e,t){var n=t.length,r=e.length,i=0;if(\"number\"==typeof n)for(;n>i;i++)e[r++]=t[i];else while(t[i]!==undefined)e[r++]=t[i++];return e.length=r,e},grep:function(e,t,n){var r,i=[],o=0,s=e.length;for(n=!!n;s>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,s=j(e),a=[];if(s)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(a[a.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(a[a.length]=r);return f.apply([],a)},guid:1,proxy:function(e,t){var n,r,i;return\"string\"==typeof t&&(n=e[t],t=e,e=n),x.isFunction(e)?(r=d.call(arguments,2),i=function(){return e.apply(t||this,r.concat(d.call(arguments)))},i.guid=e.guid=e.guid||x.guid++,i):undefined},access:function(e,t,n,r,i,o,s){var a=0,u=e.length,l=null==n;if(\"object\"===x.type(n)){i=!0;for(a in n)x.access(e,t,a,n[a],!0,o,s)}else if(r!==undefined&&(i=!0,x.isFunction(r)||(s=!0),l&&(s?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(x(e),n)})),t))for(;u>a;a++)t(e[a],n,s?r:r.call(e[a],a,t(e[a],n)));return i?e:l?t.call(e):u?t(e[0],n):o},now:Date.now,swap:function(e,t,n,r){var i,o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=s[o];return i}}),x.ready.promise=function(t){return n||(n=x.Deferred(),\"complete\"===o.readyState?setTimeout(x.ready):(o.addEventListener(\"DOMContentLoaded\",S,!1),e.addEventListener(\"load\",S,!1))),n.promise(t)},x.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){l[\"[object \"+t+\"]\"]=t.toLowerCase()});function j(e){var t=e.length,n=x.type(e);return x.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}t=x(o),function(e,undefined){var t,n,r,i,o,s,a,u,l,c,p,f,h,d,g,m,y,v=\"sizzle\"+-new Date,b=e.document,w=0,T=0,C=st(),k=st(),N=st(),E=!1,S=function(e,t){return e===t?(E=!0,0):0},j=typeof undefined,D=1<<31,A={}.hasOwnProperty,L=[],q=L.pop,H=L.push,O=L.push,F=L.slice,P=L.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},R=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",M=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",W=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",$=W.replace(\"w\",\"w#\"),B=\"\\\\[\"+M+\"*(\"+W+\")\"+M+\"*(?:([*^$|!~]?=)\"+M+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+$+\")|)|)\"+M+\"*\\\\]\",I=\":(\"+W+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+B.replace(3,8)+\")*)|.*)\\\\)|)\",z=RegExp(\"^\"+M+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+M+\"+$\",\"g\"),_=RegExp(\"^\"+M+\"*,\"+M+\"*\"),X=RegExp(\"^\"+M+\"*([>+~]|\"+M+\")\"+M+\"*\"),U=RegExp(M+\"*[+~]\"),Y=RegExp(\"=\"+M+\"*([^\\\\]'\\\"]*)\"+M+\"*\\\\]\",\"g\"),V=RegExp(I),G=RegExp(\"^\"+$+\"$\"),J={ID:RegExp(\"^#(\"+W+\")\"),CLASS:RegExp(\"^\\\\.(\"+W+\")\"),TAG:RegExp(\"^(\"+W.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+B),PSEUDO:RegExp(\"^\"+I),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+M+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+M+\"*(?:([+-]|)\"+M+\"*(\\\\d+)|))\"+M+\"*\\\\)|)\",\"i\"),bool:RegExp(\"^(?:\"+R+\")$\",\"i\"),needsContext:RegExp(\"^\"+M+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+M+\"*((?:-\\\\d)?\\\\d*)\"+M+\"*\\\\)|)(?=[^-]|$)\",\"i\")},Q=/^[^{]+\\{\\s*\\[native \\w/,K=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,Z=/^(?:input|select|textarea|button)$/i,et=/^h\\d$/i,tt=/'|\\\\/g,nt=RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+M+\"?|(\"+M+\")|.)\",\"ig\"),rt=function(e,t,n){var r=\"0x\"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(55296|r>>10,56320|1023&r)};try{O.apply(L=F.call(b.childNodes),b.childNodes),L[b.childNodes.length].nodeType}catch(it){O={apply:L.length?function(e,t){H.apply(e,F.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function ot(e,t,r,i){var o,s,a,u,l,f,g,m,x,w;if((t?t.ownerDocument||t:b)!==p&&c(t),t=t||p,r=r||[],!e||\"string\"!=typeof e)return r;if(1!==(u=t.nodeType)&&9!==u)return[];if(h&&!i){if(o=K.exec(e))if(a=o[1]){if(9===u){if(s=t.getElementById(a),!s||!s.parentNode)return r;if(s.id===a)return r.push(s),r}else if(t.ownerDocument&&(s=t.ownerDocument.getElementById(a))&&y(t,s)&&s.id===a)return r.push(s),r}else{if(o[2])return O.apply(r,t.getElementsByTagName(e)),r;if((a=o[3])&&n.getElementsByClassName&&t.getElementsByClassName)return O.apply(r,t.getElementsByClassName(a)),r}if(n.qsa&&(!d||!d.test(e))){if(m=g=v,x=t,w=9===u&&e,1===u&&\"object\"!==t.nodeName.toLowerCase()){f=gt(e),(g=t.getAttribute(\"id\"))?m=g.replace(tt,\"\\\\$&\"):t.setAttribute(\"id\",m),m=\"[id='\"+m+\"'] \",l=f.length;while(l--)f[l]=m+mt(f[l]);x=U.test(e)&&t.parentNode||t,w=f.join(\",\")}if(w)try{return O.apply(r,x.querySelectorAll(w)),r}catch(T){}finally{g||t.removeAttribute(\"id\")}}}return kt(e.replace(z,\"$1\"),t,r,i)}function st(){var e=[];function t(n,r){return e.push(n+=\" \")>i.cacheLength&&delete t[e.shift()],t[n]=r}return t}function at(e){return e[v]=!0,e}function ut(e){var t=p.createElement(\"div\");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function lt(e,t){var n=e.split(\"|\"),r=e.length;while(r--)i.attrHandle[n[r]]=t}function ct(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||D)-(~e.sourceIndex||D);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function pt(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function ft(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function ht(e){return at(function(t){return t=+t,at(function(n,r){var i,o=e([],n.length,t),s=o.length;while(s--)n[i=o[s]]&&(n[i]=!(r[i]=n[i]))})})}s=ot.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},n=ot.support={},c=ot.setDocument=function(e){var t=e?e.ownerDocument||e:b,r=t.defaultView;return t!==p&&9===t.nodeType&&t.documentElement?(p=t,f=t.documentElement,h=!s(t),r&&r.attachEvent&&r!==r.top&&r.attachEvent(\"onbeforeunload\",function(){c()}),n.attributes=ut(function(e){return e.className=\"i\",!e.getAttribute(\"className\")}),n.getElementsByTagName=ut(function(e){return e.appendChild(t.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),n.getElementsByClassName=ut(function(e){return e.innerHTML=\"<div class='a'></div><div class='a i'></div>\",e.firstChild.className=\"i\",2===e.getElementsByClassName(\"i\").length}),n.getById=ut(function(e){return f.appendChild(e).id=v,!t.getElementsByName||!t.getElementsByName(v).length}),n.getById?(i.find.ID=function(e,t){if(typeof t.getElementById!==j&&h){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},i.filter.ID=function(e){var t=e.replace(nt,rt);return function(e){return e.getAttribute(\"id\")===t}}):(delete i.find.ID,i.filter.ID=function(e){var t=e.replace(nt,rt);return function(e){var n=typeof e.getAttributeNode!==j&&e.getAttributeNode(\"id\");return n&&n.value===t}}),i.find.TAG=n.getElementsByTagName?function(e,t){return typeof t.getElementsByTagName!==j?t.getElementsByTagName(e):undefined}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},i.find.CLASS=n.getElementsByClassName&&function(e,t){return typeof t.getElementsByClassName!==j&&h?t.getElementsByClassName(e):undefined},g=[],d=[],(n.qsa=Q.test(t.querySelectorAll))&&(ut(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||d.push(\"\\\\[\"+M+\"*(?:value|\"+R+\")\"),e.querySelectorAll(\":checked\").length||d.push(\":checked\")}),ut(function(e){var n=t.createElement(\"input\");n.setAttribute(\"type\",\"hidden\"),e.appendChild(n).setAttribute(\"t\",\"\"),e.querySelectorAll(\"[t^='']\").length&&d.push(\"[*^$]=\"+M+\"*(?:''|\\\"\\\")\"),e.querySelectorAll(\":enabled\").length||d.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),d.push(\",.*:\")})),(n.matchesSelector=Q.test(m=f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&ut(function(e){n.disconnectedMatch=m.call(e,\"div\"),m.call(e,\"[s!='']:x\"),g.push(\"!=\",I)}),d=d.length&&RegExp(d.join(\"|\")),g=g.length&&RegExp(g.join(\"|\")),y=Q.test(f.contains)||f.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},S=f.compareDocumentPosition?function(e,r){if(e===r)return E=!0,0;var i=r.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(r);return i?1&i||!n.sortDetached&&r.compareDocumentPosition(e)===i?e===t||y(b,e)?-1:r===t||y(b,r)?1:l?P.call(l,e)-P.call(l,r):0:4&i?-1:1:e.compareDocumentPosition?-1:1}:function(e,n){var r,i=0,o=e.parentNode,s=n.parentNode,a=[e],u=[n];if(e===n)return E=!0,0;if(!o||!s)return e===t?-1:n===t?1:o?-1:s?1:l?P.call(l,e)-P.call(l,n):0;if(o===s)return ct(e,n);r=e;while(r=r.parentNode)a.unshift(r);r=n;while(r=r.parentNode)u.unshift(r);while(a[i]===u[i])i++;return i?ct(a[i],u[i]):a[i]===b?-1:u[i]===b?1:0},t):p},ot.matches=function(e,t){return ot(e,null,null,t)},ot.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&c(e),t=t.replace(Y,\"='$1']\"),!(!n.matchesSelector||!h||g&&g.test(t)||d&&d.test(t)))try{var r=m.call(e,t);if(r||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(i){}return ot(t,p,null,[e]).length>0},ot.contains=function(e,t){return(e.ownerDocument||e)!==p&&c(e),y(e,t)},ot.attr=function(e,t){(e.ownerDocument||e)!==p&&c(e);var r=i.attrHandle[t.toLowerCase()],o=r&&A.call(i.attrHandle,t.toLowerCase())?r(e,t,!h):undefined;return o===undefined?n.attributes||!h?e.getAttribute(t):(o=e.getAttributeNode(t))&&o.specified?o.value:null:o},ot.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},ot.uniqueSort=function(e){var t,r=[],i=0,o=0;if(E=!n.detectDuplicates,l=!n.sortStable&&e.slice(0),e.sort(S),E){while(t=e[o++])t===e[o]&&(i=r.push(o));while(i--)e.splice(r[i],1)}return e},o=ot.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},i=ot.selectors={cacheLength:50,createPseudo:at,match:J,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(nt,rt),e[3]=(e[4]||e[5]||\"\").replace(nt,rt),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||ot.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&ot.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return J.CHILD.test(e[0])?null:(e[3]&&e[4]!==undefined?e[2]=e[4]:n&&V.test(n)&&(t=gt(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(nt,rt).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=C[e+\" \"];return t||(t=RegExp(\"(^|\"+M+\")\"+e+\"(\"+M+\"|$)\"))&&C(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||typeof e.getAttribute!==j&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=ot.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),s=\"last\"!==e.slice(-4),a=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,p,f,h,d,g=o!==s?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=a&&t.nodeName.toLowerCase(),x=!u&&!a;if(m){if(o){while(g){p=t;while(p=p[g])if(a?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;d=g=\"only\"===e&&!d&&\"nextSibling\"}return!0}if(d=[s?m.firstChild:m.lastChild],s&&x){c=m[v]||(m[v]={}),l=c[e]||[],h=l[0]===w&&l[1],f=l[0]===w&&l[2],p=h&&m.childNodes[h];while(p=++h&&p&&p[g]||(f=h=0)||d.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[w,h,f];break}}else if(x&&(l=(t[v]||(t[v]={}))[e])&&l[0]===w)f=l[1];else while(p=++h&&p&&p[g]||(f=h=0)||d.pop())if((a?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(x&&((p[v]||(p[v]={}))[e]=[w,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||ot.error(\"unsupported pseudo: \"+e);return r[v]?r(t):r.length>1?(n=[e,e,\"\",t],i.setFilters.hasOwnProperty(e.toLowerCase())?at(function(e,n){var i,o=r(e,t),s=o.length;while(s--)i=P.call(e,o[s]),e[i]=!(n[i]=o[s])}):function(e){return r(e,0,n)}):r}},pseudos:{not:at(function(e){var t=[],n=[],r=a(e.replace(z,\"$1\"));return r[v]?at(function(e,t,n,i){var o,s=r(e,null,i,[]),a=e.length;while(a--)(o=s[a])&&(e[a]=!(t[a]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:at(function(e){return function(t){return ot(e,t).length>0}}),contains:at(function(e){return function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lang:at(function(e){return G.test(e||\"\")||ot.error(\"unsupported lang: \"+e),e=e.replace(nt,rt).toLowerCase(),function(t){var n;do if(n=h?t.lang:t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return et.test(e.nodeName)},input:function(e){return Z.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:ht(function(){return[0]}),last:ht(function(e,t){return[t-1]}),eq:ht(function(e,t,n){return[0>n?n+t:n]}),even:ht(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:ht(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:ht(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:ht(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}},i.pseudos.nth=i.pseudos.eq;for(t in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[t]=pt(t);for(t in{submit:!0,reset:!0})i.pseudos[t]=ft(t);function dt(){}dt.prototype=i.filters=i.pseudos,i.setFilters=new dt;function gt(e,t){var n,r,o,s,a,u,l,c=k[e+\" \"];if(c)return t?0:c.slice(0);a=e,u=[],l=i.preFilter;while(a){(!n||(r=_.exec(a)))&&(r&&(a=a.slice(r[0].length)||a),u.push(o=[])),n=!1,(r=X.exec(a))&&(n=r.shift(),o.push({value:n,type:r[0].replace(z,\" \")}),a=a.slice(n.length));for(s in i.filter)!(r=J[s].exec(a))||l[s]&&!(r=l[s](r))||(n=r.shift(),o.push({value:n,type:s,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?ot.error(e):k(e,u).slice(0)}function mt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function yt(e,t,n){var i=t.dir,o=n&&\"parentNode\"===i,s=T++;return t.first?function(t,n,r){while(t=t[i])if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,a){var u,l,c,p=w+\" \"+s;if(a){while(t=t[i])if((1===t.nodeType||o)&&e(t,n,a))return!0}else while(t=t[i])if(1===t.nodeType||o)if(c=t[v]||(t[v]={}),(l=c[i])&&l[0]===p){if((u=l[1])===!0||u===r)return u===!0}else if(l=c[i]=[p],l[1]=e(t,n,a)||r,l[1]===!0)return!0}}function vt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function xt(e,t,n,r,i){var o,s=[],a=0,u=e.length,l=null!=t;for(;u>a;a++)(o=e[a])&&(!n||n(o,r,i))&&(s.push(o),l&&t.push(a));return s}function bt(e,t,n,r,i,o){return r&&!r[v]&&(r=bt(r)),i&&!i[v]&&(i=bt(i,o)),at(function(o,s,a,u){var l,c,p,f=[],h=[],d=s.length,g=o||Ct(t||\"*\",a.nodeType?[a]:a,[]),m=!e||!o&&t?g:xt(g,f,e,a,u),y=n?i||(o?e:d||r)?[]:s:m;if(n&&n(m,y,a,u),r){l=xt(y,h),r(l,[],a,u),c=l.length;while(c--)(p=l[c])&&(y[h[c]]=!(m[h[c]]=p))}if(o){if(i||e){if(i){l=[],c=y.length;while(c--)(p=y[c])&&l.push(m[c]=p);i(null,y=[],l,u)}c=y.length;while(c--)(p=y[c])&&(l=i?P.call(o,p):f[c])>-1&&(o[l]=!(s[l]=p))}}else y=xt(y===s?y.splice(d,y.length):y),i?i(null,s,y,u):O.apply(s,y)})}function wt(e){var t,n,r,o=e.length,s=i.relative[e[0].type],a=s||i.relative[\" \"],l=s?1:0,c=yt(function(e){return e===t},a,!0),p=yt(function(e){return P.call(t,e)>-1},a,!0),f=[function(e,n,r){return!s&&(r||n!==u)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>l;l++)if(n=i.relative[e[l].type])f=[yt(vt(f),n)];else{if(n=i.filter[e[l].type].apply(null,e[l].matches),n[v]){for(r=++l;o>r;r++)if(i.relative[e[r].type])break;return bt(l>1&&vt(f),l>1&&mt(e.slice(0,l-1).concat({value:\" \"===e[l-2].type?\"*\":\"\"})).replace(z,\"$1\"),n,r>l&&wt(e.slice(l,r)),o>r&&wt(e=e.slice(r)),o>r&&mt(e))}f.push(n)}return vt(f)}function Tt(e,t){var n=0,o=t.length>0,s=e.length>0,a=function(a,l,c,f,h){var d,g,m,y=[],v=0,x=\"0\",b=a&&[],T=null!=h,C=u,k=a||s&&i.find.TAG(\"*\",h&&l.parentNode||l),N=w+=null==C?1:Math.random()||.1;for(T&&(u=l!==p&&l,r=n);null!=(d=k[x]);x++){if(s&&d){g=0;while(m=e[g++])if(m(d,l,c)){f.push(d);break}T&&(w=N,r=++n)}o&&((d=!m&&d)&&v--,a&&b.push(d))}if(v+=x,o&&x!==v){g=0;while(m=t[g++])m(b,y,l,c);if(a){if(v>0)while(x--)b[x]||y[x]||(y[x]=q.call(f));y=xt(y)}O.apply(f,y),T&&!a&&y.length>0&&v+t.length>1&&ot.uniqueSort(f)}return T&&(w=N,u=C),b};return o?at(a):a}a=ot.compile=function(e,t){var n,r=[],i=[],o=N[e+\" \"];if(!o){t||(t=gt(e)),n=t.length;while(n--)o=wt(t[n]),o[v]?r.push(o):i.push(o);o=N(e,Tt(i,r))}return o};function Ct(e,t,n){var r=0,i=t.length;for(;i>r;r++)ot(e,t[r],n);return n}function kt(e,t,r,o){var s,u,l,c,p,f=gt(e);if(!o&&1===f.length){if(u=f[0]=f[0].slice(0),u.length>2&&\"ID\"===(l=u[0]).type&&n.getById&&9===t.nodeType&&h&&i.relative[u[1].type]){if(t=(i.find.ID(l.matches[0].replace(nt,rt),t)||[])[0],!t)return r;e=e.slice(u.shift().value.length)}s=J.needsContext.test(e)?0:u.length;while(s--){if(l=u[s],i.relative[c=l.type])break;if((p=i.find[c])&&(o=p(l.matches[0].replace(nt,rt),U.test(u[0].type)&&t.parentNode||t))){if(u.splice(s,1),e=o.length&&mt(u),!e)return O.apply(r,o),r;break}}}return a(e,f)(o,t,!h,r,U.test(e)),r}n.sortStable=v.split(\"\").sort(S).join(\"\")===v,n.detectDuplicates=E,c(),n.sortDetached=ut(function(e){return 1&e.compareDocumentPosition(p.createElement(\"div\"))}),ut(function(e){return e.innerHTML=\"<a href='#'></a>\",\"#\"===e.firstChild.getAttribute(\"href\")})||lt(\"type|href|height|width\",function(e,t,n){return n?undefined:e.getAttribute(t,\"type\"===t.toLowerCase()?1:2)}),n.attributes&&ut(function(e){return e.innerHTML=\"<input/>\",e.firstChild.setAttribute(\"value\",\"\"),\"\"===e.firstChild.getAttribute(\"value\")})||lt(\"value\",function(e,t,n){return n||\"input\"!==e.nodeName.toLowerCase()?undefined:e.defaultValue}),ut(function(e){return null==e.getAttribute(\"disabled\")})||lt(R,function(e,t,n){var r;return n?undefined:(r=e.getAttributeNode(t))&&r.specified?r.value:e[t]===!0?t.toLowerCase():null}),x.find=ot,x.expr=ot.selectors,x.expr[\":\"]=x.expr.pseudos,x.unique=ot.uniqueSort,x.text=ot.getText,x.isXMLDoc=ot.isXML,x.contains=ot.contains}(e);var D={};function A(e){var t=D[e]={};return x.each(e.match(w)||[],function(e,n){t[n]=!0}),t}x.Callbacks=function(e){e=\"string\"==typeof e?D[e]||A(e):x.extend({},e);var t,n,r,i,o,s,a=[],u=!e.once&&[],l=function(p){for(t=e.memory&&p,n=!0,s=i||0,i=0,o=a.length,r=!0;a&&o>s;s++)if(a[s].apply(p[0],p[1])===!1&&e.stopOnFalse){t=!1;break}r=!1,a&&(u?u.length&&l(u.shift()):t?a=[]:c.disable())},c={add:function(){if(a){var n=a.length;(function s(t){x.each(t,function(t,n){var r=x.type(n);\"function\"===r?e.unique&&c.has(n)||a.push(n):n&&n.length&&\"string\"!==r&&s(n)})})(arguments),r?o=a.length:t&&(i=n,l(t))}return this},remove:function(){return a&&x.each(arguments,function(e,t){var n;while((n=x.inArray(t,a,n))>-1)a.splice(n,1),r&&(o>=n&&o--,s>=n&&s--)}),this},has:function(e){return e?x.inArray(e,a)>-1:!(!a||!a.length)},empty:function(){return a=[],o=0,this},disable:function(){return a=u=t=undefined,this},disabled:function(){return!a},lock:function(){return u=undefined,t||c.disable(),this},locked:function(){return!u},fireWith:function(e,t){return!a||n&&!u||(t=t||[],t=[e,t.slice?t.slice():t],r?u.push(t):l(t)),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!n}};return c},x.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",x.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",x.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",x.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return x.Deferred(function(n){x.each(t,function(t,o){var s=o[0],a=x.isFunction(e[t])&&e[t];i[o[1]](function(){var e=a&&a.apply(this,arguments);e&&x.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[s+\"With\"](this===r?n.promise():this,a?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?x.extend(e,r):r}},i={};return r.pipe=r.then,x.each(t,function(e,o){var s=o[2],a=o[3];r[o[1]]=s.add,a&&s.add(function(){n=a},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=s.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=d.call(arguments),r=n.length,i=1!==r||e&&x.isFunction(e.promise)?r:0,o=1===i?e:x.Deferred(),s=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?d.call(arguments):r,n===a?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},a,u,l;if(r>1)for(a=Array(r),u=Array(r),l=Array(r);r>t;t++)n[t]&&x.isFunction(n[t].promise)?n[t].promise().done(s(t,l,n)).fail(o.reject).progress(s(t,u,a)):--i;return i||o.resolveWith(l,n),o.promise()}}),x.support=function(t){var n=o.createElement(\"input\"),r=o.createDocumentFragment(),i=o.createElement(\"div\"),s=o.createElement(\"select\"),a=s.appendChild(o.createElement(\"option\"));return n.type?(n.type=\"checkbox\",t.checkOn=\"\"!==n.value,t.optSelected=a.selected,t.reliableMarginRight=!0,t.boxSizingReliable=!0,t.pixelPosition=!1,n.checked=!0,t.noCloneChecked=n.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!a.disabled,n=o.createElement(\"input\"),n.value=\"t\",n.type=\"radio\",t.radioValue=\"t\"===n.value,n.setAttribute(\"checked\",\"t\"),n.setAttribute(\"name\",\"t\"),r.appendChild(n),t.checkClone=r.cloneNode(!0).cloneNode(!0).lastChild.checked,t.focusinBubbles=\"onfocusin\"in e,i.style.backgroundClip=\"content-box\",i.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===i.style.backgroundClip,x(function(){var n,r,s=\"padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box\",a=o.getElementsByTagName(\"body\")[0];a&&(n=o.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",a.appendChild(n).appendChild(i),i.innerHTML=\"\",i.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%\",x.swap(a,null!=a.style.zoom?{zoom:1}:{},function(){t.boxSizing=4===i.offsetWidth}),e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(i,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(i,null)||{width:\"4px\"}).width,r=i.appendChild(o.createElement(\"div\")),r.style.cssText=i.style.cssText=s,r.style.marginRight=r.style.width=\"0\",i.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),a.removeChild(n))}),t):t}({});var L,q,H=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,O=/([A-Z])/g;function F(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=x.expando+Math.random()}F.uid=1,F.accepts=function(e){return e.nodeType?1===e.nodeType||9===e.nodeType:!0},F.prototype={key:function(e){if(!F.accepts(e))return 0;var t={},n=e[this.expando];if(!n){n=F.uid++;try{t[this.expando]={value:n},Object.defineProperties(e,t)}catch(r){t[this.expando]=n,x.extend(e,t)}}return this.cache[n]||(this.cache[n]={}),n},set:function(e,t,n){var r,i=this.key(e),o=this.cache[i];if(\"string\"==typeof t)o[t]=n;else if(x.isEmptyObject(o))x.extend(this.cache[i],t);else for(r in t)o[r]=t[r];return o},get:function(e,t){var n=this.cache[this.key(e)];return t===undefined?n:n[t]},access:function(e,t,n){var r;return t===undefined||t&&\"string\"==typeof t&&n===undefined?(r=this.get(e,t),r!==undefined?r:this.get(e,x.camelCase(t))):(this.set(e,t,n),n!==undefined?n:t)},remove:function(e,t){var n,r,i,o=this.key(e),s=this.cache[o];if(t===undefined)this.cache[o]={};else{x.isArray(t)?r=t.concat(t.map(x.camelCase)):(i=x.camelCase(t),t in s?r=[t,i]:(r=i,r=r in s?[r]:r.match(w)||[])),n=r.length;while(n--)delete s[r[n]]}},hasData:function(e){return!x.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}},L=new F,q=new F,x.extend({acceptData:F.accepts,hasData:function(e){return L.hasData(e)||q.hasData(e)},data:function(e,t,n){return L.access(e,t,n)},removeData:function(e,t){L.remove(e,t)},_data:function(e,t,n){return q.access(e,t,n)},_removeData:function(e,t){q.remove(e,t)}}),x.fn.extend({data:function(e,t){var n,r,i=this[0],o=0,s=null;if(e===undefined){if(this.length&&(s=L.get(i),1===i.nodeType&&!q.get(i,\"hasDataAttrs\"))){for(n=i.attributes;n.length>o;o++)r=n[o].name,0===r.indexOf(\"data-\")&&(r=x.camelCase(r.slice(5)),P(i,r,s[r]));q.set(i,\"hasDataAttrs\",!0)}return s}return\"object\"==typeof e?this.each(function(){L.set(this,e)}):x.access(this,function(t){var n,r=x.camelCase(e);if(i&&t===undefined){if(n=L.get(i,e),n!==undefined)return n;if(n=L.get(i,r),n!==undefined)return n;if(n=P(i,r,undefined),n!==undefined)return n}else this.each(function(){var n=L.get(this,r);L.set(this,r,t),-1!==e.indexOf(\"-\")&&n!==undefined&&L.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){L.remove(this,e)})}});function P(e,t,n){var r;if(n===undefined&&1===e.nodeType)if(r=\"data-\"+t.replace(O,\"-$1\").toLowerCase(),n=e.getAttribute(r),\"string\"==typeof n){try{n=\"true\"===n?!0:\"false\"===n?!1:\"null\"===n?null:+n+\"\"===n?+n:H.test(n)?JSON.parse(n):n}catch(i){}L.set(e,t,n)}else n=undefined;return n}x.extend({queue:function(e,t,n){var r;return e?(t=(t||\"fx\")+\"queue\",r=q.get(e,t),n&&(!r||x.isArray(n)?r=q.access(e,t,x.makeArray(n)):r.push(n)),r||[]):undefined},dequeue:function(e,t){t=t||\"fx\";var n=x.queue(e,t),r=n.length,i=n.shift(),o=x._queueHooks(e,t),s=function(){x.dequeue(e,t)\n};\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,s,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return q.get(e,n)||q.access(e,n,{empty:x.Callbacks(\"once memory\").add(function(){q.remove(e,[t+\"queue\",n])})})}}),x.fn.extend({queue:function(e,t){var n=2;return\"string\"!=typeof e&&(t=e,e=\"fx\",n--),n>arguments.length?x.queue(this[0],e):t===undefined?this:this.each(function(){var n=x.queue(this,e,t);x._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==n[0]&&x.dequeue(this,e)})},dequeue:function(e){return this.each(function(){x.dequeue(this,e)})},delay:function(e,t){return e=x.fx?x.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=x.Deferred(),o=this,s=this.length,a=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=undefined),e=e||\"fx\";while(s--)n=q.get(o[s],e+\"queueHooks\"),n&&n.empty&&(r++,n.empty.add(a));return a(),i.promise(t)}});var R,M,W=/[\\t\\r\\n\\f]/g,$=/\\r/g,B=/^(?:input|select|textarea|button)$/i;x.fn.extend({attr:function(e,t){return x.access(this,x.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){x.removeAttr(this,e)})},prop:function(e,t){return x.access(this,x.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[x.propFix[e]||e]})},addClass:function(e){var t,n,r,i,o,s=0,a=this.length,u=\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];a>s;s++)if(n=this[s],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(W,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=x.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,s=0,a=this.length,u=0===arguments.length||\"string\"==typeof e&&e;if(x.isFunction(e))return this.each(function(t){x(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];a>s;s++)if(n=this[s],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(W,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?x.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e;return\"boolean\"==typeof t&&\"string\"===n?t?this.addClass(e):this.removeClass(e):x.isFunction(e)?this.each(function(n){x(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var t,i=0,o=x(this),s=e.match(w)||[];while(t=s[i++])o.hasClass(t)?o.removeClass(t):o.addClass(t)}else(n===r||\"boolean\"===n)&&(this.className&&q.set(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":q.get(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(W,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var t,n,r,i=this[0];{if(arguments.length)return r=x.isFunction(e),this.each(function(n){var i;1===this.nodeType&&(i=r?e.call(this,n,x(this).val()):e,null==i?i=\"\":\"number\"==typeof i?i+=\"\":x.isArray(i)&&(i=x.map(i,function(e){return null==e?\"\":e+\"\"})),t=x.valHooks[this.type]||x.valHooks[this.nodeName.toLowerCase()],t&&\"set\"in t&&t.set(this,i,\"value\")!==undefined||(this.value=i))});if(i)return t=x.valHooks[i.type]||x.valHooks[i.nodeName.toLowerCase()],t&&\"get\"in t&&(n=t.get(i,\"value\"))!==undefined?n:(n=i.value,\"string\"==typeof n?n.replace($,\"\"):null==n?\"\":n)}}}),x.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,s=o?null:[],a=o?i+1:r.length,u=0>i?a:o?i:0;for(;a>u;u++)if(n=r[u],!(!n.selected&&u!==i||(x.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&x.nodeName(n.parentNode,\"optgroup\"))){if(t=x(n).val(),o)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=x.makeArray(t),s=i.length;while(s--)r=i[s],(r.selected=x.inArray(x(r).val(),o)>=0)&&(n=!0);return n||(e.selectedIndex=-1),o}}},attr:function(e,t,n){var i,o,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return typeof e.getAttribute===r?x.prop(e,t,n):(1===s&&x.isXMLDoc(e)||(t=t.toLowerCase(),i=x.attrHooks[t]||(x.expr.match.bool.test(t)?M:R)),n===undefined?i&&\"get\"in i&&null!==(o=i.get(e,t))?o:(o=x.find.attr(e,t),null==o?undefined:o):null!==n?i&&\"set\"in i&&(o=i.set(e,n,t))!==undefined?o:(e.setAttribute(t,n+\"\"),n):(x.removeAttr(e,t),undefined))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)while(n=o[i++])r=x.propFix[n]||n,x.expr.match.bool.test(n)&&(e[r]=!1),e.removeAttribute(n)},attrHooks:{type:{set:function(e,t){if(!x.support.radioValue&&\"radio\"===t&&x.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(e,t,n){var r,i,o,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return o=1!==s||!x.isXMLDoc(e),o&&(t=x.propFix[t]||t,i=x.propHooks[t]),n!==undefined?i&&\"set\"in i&&(r=i.set(e,n,t))!==undefined?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){return e.hasAttribute(\"tabindex\")||B.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),M={set:function(e,t,n){return t===!1?x.removeAttr(e,n):e.setAttribute(n,n),n}},x.each(x.expr.match.bool.source.match(/\\w+/g),function(e,t){var n=x.expr.attrHandle[t]||x.find.attr;x.expr.attrHandle[t]=function(e,t,r){var i=x.expr.attrHandle[t],o=r?undefined:(x.expr.attrHandle[t]=undefined)!=n(e,t,r)?t.toLowerCase():null;return x.expr.attrHandle[t]=i,o}}),x.support.optSelected||(x.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),x.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){x.propFix[this.toLowerCase()]=this}),x.each([\"radio\",\"checkbox\"],function(){x.valHooks[this]={set:function(e,t){return x.isArray(t)?e.checked=x.inArray(x(e).val(),t)>=0:undefined}},x.support.checkOn||(x.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})});var I=/^key/,z=/^(?:mouse|contextmenu)|click/,_=/^(?:focusinfocus|focusoutblur)$/,X=/^([^.]*)(?:\\.(.+)|)$/;function U(){return!0}function Y(){return!1}function V(){try{return o.activeElement}catch(e){}}x.event={global:{},add:function(e,t,n,i,o){var s,a,u,l,c,p,f,h,d,g,m,y=q.get(e);if(y){n.handler&&(s=n,n=s.handler,o=s.selector),n.guid||(n.guid=x.guid++),(l=y.events)||(l=y.events={}),(a=y.handle)||(a=y.handle=function(e){return typeof x===r||e&&x.event.triggered===e.type?undefined:x.event.dispatch.apply(a.elem,arguments)},a.elem=e),t=(t||\"\").match(w)||[\"\"],c=t.length;while(c--)u=X.exec(t[c])||[],d=m=u[1],g=(u[2]||\"\").split(\".\").sort(),d&&(f=x.event.special[d]||{},d=(o?f.delegateType:f.bindType)||d,f=x.event.special[d]||{},p=x.extend({type:d,origType:m,data:i,handler:n,guid:n.guid,selector:o,needsContext:o&&x.expr.match.needsContext.test(o),namespace:g.join(\".\")},s),(h=l[d])||(h=l[d]=[],h.delegateCount=0,f.setup&&f.setup.call(e,i,g,a)!==!1||e.addEventListener&&e.addEventListener(d,a,!1)),f.add&&(f.add.call(e,p),p.handler.guid||(p.handler.guid=n.guid)),o?h.splice(h.delegateCount++,0,p):h.push(p),x.event.global[d]=!0);e=null}},remove:function(e,t,n,r,i){var o,s,a,u,l,c,p,f,h,d,g,m=q.hasData(e)&&q.get(e);if(m&&(u=m.events)){t=(t||\"\").match(w)||[\"\"],l=t.length;while(l--)if(a=X.exec(t[l])||[],h=g=a[1],d=(a[2]||\"\").split(\".\").sort(),h){p=x.event.special[h]||{},h=(r?p.delegateType:p.bindType)||h,f=u[h]||[],a=a[2]&&RegExp(\"(^|\\\\.)\"+d.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),s=o=f.length;while(o--)c=f[o],!i&&g!==c.origType||n&&n.guid!==c.guid||a&&!a.test(c.namespace)||r&&r!==c.selector&&(\"**\"!==r||!c.selector)||(f.splice(o,1),c.selector&&f.delegateCount--,p.remove&&p.remove.call(e,c));s&&!f.length&&(p.teardown&&p.teardown.call(e,d,m.handle)!==!1||x.removeEvent(e,h,m.handle),delete u[h])}else for(h in u)x.event.remove(e,h+t[l],n,r,!0);x.isEmptyObject(u)&&(delete m.handle,q.remove(e,\"events\"))}},trigger:function(t,n,r,i){var s,a,u,l,c,p,f,h=[r||o],d=y.call(t,\"type\")?t.type:t,g=y.call(t,\"namespace\")?t.namespace.split(\".\"):[];if(a=u=r=r||o,3!==r.nodeType&&8!==r.nodeType&&!_.test(d+x.event.triggered)&&(d.indexOf(\".\")>=0&&(g=d.split(\".\"),d=g.shift(),g.sort()),c=0>d.indexOf(\":\")&&\"on\"+d,t=t[x.expando]?t:new x.Event(d,\"object\"==typeof t&&t),t.isTrigger=i?2:3,t.namespace=g.join(\".\"),t.namespace_re=t.namespace?RegExp(\"(^|\\\\.)\"+g.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,t.result=undefined,t.target||(t.target=r),n=null==n?[t]:x.makeArray(n,[t]),f=x.event.special[d]||{},i||!f.trigger||f.trigger.apply(r,n)!==!1)){if(!i&&!f.noBubble&&!x.isWindow(r)){for(l=f.delegateType||d,_.test(l+d)||(a=a.parentNode);a;a=a.parentNode)h.push(a),u=a;u===(r.ownerDocument||o)&&h.push(u.defaultView||u.parentWindow||e)}s=0;while((a=h[s++])&&!t.isPropagationStopped())t.type=s>1?l:f.bindType||d,p=(q.get(a,\"events\")||{})[t.type]&&q.get(a,\"handle\"),p&&p.apply(a,n),p=c&&a[c],p&&x.acceptData(a)&&p.apply&&p.apply(a,n)===!1&&t.preventDefault();return t.type=d,i||t.isDefaultPrevented()||f._default&&f._default.apply(h.pop(),n)!==!1||!x.acceptData(r)||c&&x.isFunction(r[d])&&!x.isWindow(r)&&(u=r[c],u&&(r[c]=null),x.event.triggered=d,r[d](),x.event.triggered=undefined,u&&(r[c]=u)),t.result}},dispatch:function(e){e=x.event.fix(e);var t,n,r,i,o,s=[],a=d.call(arguments),u=(q.get(this,\"events\")||{})[e.type]||[],l=x.event.special[e.type]||{};if(a[0]=e,e.delegateTarget=this,!l.preDispatch||l.preDispatch.call(this,e)!==!1){s=x.event.handlers.call(this,e,u),t=0;while((i=s[t++])&&!e.isPropagationStopped()){e.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(o.namespace))&&(e.handleObj=o,e.data=o.data,r=((x.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,a),r!==undefined&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,i,o,s=[],a=t.delegateCount,u=e.target;if(a&&u.nodeType&&(!e.button||\"click\"!==e.type))for(;u!==this;u=u.parentNode||this)if(u.disabled!==!0||\"click\"!==e.type){for(r=[],n=0;a>n;n++)o=t[n],i=o.selector+\" \",r[i]===undefined&&(r[i]=o.needsContext?x(i,this).index(u)>=0:x.find(i,this,null,[u]).length),r[i]&&r.push(o);r.length&&s.push({elem:u,handlers:r})}return t.length>a&&s.push({elem:this,handlers:t.slice(a)}),s},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,t){var n,r,i,s=t.button;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||o,r=n.documentElement,i=n.body,e.pageX=t.clientX+(r&&r.scrollLeft||i&&i.scrollLeft||0)-(r&&r.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(r&&r.scrollTop||i&&i.scrollTop||0)-(r&&r.clientTop||i&&i.clientTop||0)),e.which||s===undefined||(e.which=1&s?1:2&s?3:4&s?2:0),e}},fix:function(e){if(e[x.expando])return e;var t,n,r,i=e.type,s=e,a=this.fixHooks[i];a||(this.fixHooks[i]=a=z.test(i)?this.mouseHooks:I.test(i)?this.keyHooks:{}),r=a.props?this.props.concat(a.props):this.props,e=new x.Event(s),t=r.length;while(t--)n=r[t],e[n]=s[n];return e.target||(e.target=o),3===e.target.nodeType&&(e.target=e.target.parentNode),a.filter?a.filter(e,s):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==V()&&this.focus?(this.focus(),!1):undefined},delegateType:\"focusin\"},blur:{trigger:function(){return this===V()&&this.blur?(this.blur(),!1):undefined},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&x.nodeName(this,\"input\")?(this.click(),!1):undefined},_default:function(e){return x.nodeName(e.target,\"a\")}},beforeunload:{postDispatch:function(e){e.result!==undefined&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=x.extend(new x.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?x.event.trigger(i,null,t):x.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},x.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)},x.Event=function(e,t){return this instanceof x.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.getPreventDefault&&e.getPreventDefault()?U:Y):this.type=e,t&&x.extend(this,t),this.timeStamp=e&&e.timeStamp||x.now(),this[x.expando]=!0,undefined):new x.Event(e,t)},x.Event.prototype={isDefaultPrevented:Y,isPropagationStopped:Y,isImmediatePropagationStopped:Y,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=U,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=U,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=U,this.stopPropagation()}},x.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){x.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;return(!i||i!==r&&!x.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),x.support.focusinBubbles||x.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){x.event.simulate(t,e.target,x.event.fix(e),!0)};x.event.special[t]={setup:function(){0===n++&&o.addEventListener(e,r,!0)},teardown:function(){0===--n&&o.removeEventListener(e,r,!0)}}}),x.fn.extend({on:function(e,t,n,r,i){var o,s;if(\"object\"==typeof e){\"string\"!=typeof t&&(n=n||t,t=undefined);for(s in e)this.on(s,t,n,e[s],i);return this}if(null==n&&null==r?(r=t,n=t=undefined):null==r&&(\"string\"==typeof t?(r=n,n=undefined):(r=n,n=t,t=undefined)),r===!1)r=Y;else if(!r)return this;return 1===i&&(o=r,r=function(e){return x().off(e),o.apply(this,arguments)},r.guid=o.guid||(o.guid=x.guid++)),this.each(function(){x.event.add(this,e,r,n,t)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,x(e.delegateTarget).off(r.namespace?r.origType+\".\"+r.namespace:r.origType,r.selector,r.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return(t===!1||\"function\"==typeof t)&&(n=t,t=undefined),n===!1&&(n=Y),this.each(function(){x.event.remove(this,e,n,t)})},trigger:function(e,t){return this.each(function(){x.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?x.event.trigger(e,t,n,!0):undefined}});var G=/^.[^:#\\[\\.,]*$/,J=/^(?:parents|prev(?:Until|All))/,Q=x.expr.match.needsContext,K={children:!0,contents:!0,next:!0,prev:!0};x.fn.extend({find:function(e){var t,n=[],r=this,i=r.length;if(\"string\"!=typeof e)return this.pushStack(x(e).filter(function(){for(t=0;i>t;t++)if(x.contains(r[t],this))return!0}));for(t=0;i>t;t++)x.find(e,r[t],n);return n=this.pushStack(i>1?x.unique(n):n),n.selector=this.selector?this.selector+\" \"+e:e,n},has:function(e){var t=x(e,this),n=t.length;return this.filter(function(){var e=0;for(;n>e;e++)if(x.contains(this,t[e]))return!0})},not:function(e){return this.pushStack(et(this,e||[],!0))},filter:function(e){return this.pushStack(et(this,e||[],!1))},is:function(e){return!!et(this,\"string\"==typeof e&&Q.test(e)?x(e):e||[],!1).length},closest:function(e,t){var n,r=0,i=this.length,o=[],s=Q.test(e)||\"string\"!=typeof e?x(e,t||this.context):0;for(;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(11>n.nodeType&&(s?s.index(n)>-1:1===n.nodeType&&x.find.matchesSelector(n,e))){n=o.push(n);break}return this.pushStack(o.length>1?x.unique(o):o)},index:function(e){return e?\"string\"==typeof e?g.call(x(e),this[0]):g.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?x(e,t):x.makeArray(e&&e.nodeType?[e]:e),r=x.merge(this.get(),n);return this.pushStack(x.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}});function Z(e,t){while((e=e[t])&&1!==e.nodeType);return e}x.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return x.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return x.dir(e,\"parentNode\",n)},next:function(e){return Z(e,\"nextSibling\")},prev:function(e){return Z(e,\"previousSibling\")},nextAll:function(e){return x.dir(e,\"nextSibling\")},prevAll:function(e){return x.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return x.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return x.dir(e,\"previousSibling\",n)},siblings:function(e){return x.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return x.sibling(e.firstChild)},contents:function(e){return e.contentDocument||x.merge([],e.childNodes)}},function(e,t){x.fn[e]=function(n,r){var i=x.map(this,t,n);return\"Until\"!==e.slice(-5)&&(r=n),r&&\"string\"==typeof r&&(i=x.filter(r,i)),this.length>1&&(K[e]||x.unique(i),J.test(e)&&i.reverse()),this.pushStack(i)}}),x.extend({filter:function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?x.find.matchesSelector(r,e)?[r]:[]:x.find.matches(e,x.grep(t,function(e){return 1===e.nodeType}))},dir:function(e,t,n){var r=[],i=n!==undefined;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&x(e).is(n))break;r.push(e)}return r},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function et(e,t,n){if(x.isFunction(t))return x.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return x.grep(e,function(e){return e===t!==n});if(\"string\"==typeof t){if(G.test(t))return x.filter(t,e,n);t=x.filter(t,e)}return x.grep(e,function(e){return g.call(t,e)>=0!==n})}var tt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,nt=/<([\\w:]+)/,rt=/<|&#?\\w+;/,it=/<(?:script|style|link)/i,ot=/^(?:checkbox|radio)$/i,st=/checked\\s*(?:[^=]|=\\s*.checked.)/i,at=/^$|\\/(?:java|ecma)script/i,ut=/^true\\/(.*)/,lt=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,ct={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};ct.optgroup=ct.option,ct.tbody=ct.tfoot=ct.colgroup=ct.caption=ct.thead,ct.th=ct.td,x.fn.extend({text:function(e){return x.access(this,function(e){return e===undefined?x.text(this):this.empty().append((this[0]&&this[0].ownerDocument||o).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=pt(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=pt(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=e?x.filter(e,this):this,i=0;for(;null!=(n=r[i]);i++)t||1!==n.nodeType||x.cleanData(mt(n)),n.parentNode&&(t&&x.contains(n.ownerDocument,n)&&dt(mt(n,\"script\")),n.parentNode.removeChild(n));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++)1===e.nodeType&&(x.cleanData(mt(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return x.clone(this,e,t)})},html:function(e){return x.access(this,function(e){var t=this[0]||{},n=0,r=this.length;if(e===undefined&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!it.test(e)&&!ct[(nt.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=e.replace(tt,\"<$1></$2>\");try{for(;r>n;n++)t=this[n]||{},1===t.nodeType&&(x.cleanData(mt(t,!1)),t.innerHTML=e);t=0}catch(i){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=x.map(this,function(e){return[e.nextSibling,e.parentNode]}),t=0;return this.domManip(arguments,function(n){var r=e[t++],i=e[t++];i&&(r&&r.parentNode!==i&&(r=this.nextSibling),x(this).remove(),i.insertBefore(n,r))},!0),t?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t,n){e=f.apply([],e);var r,i,o,s,a,u,l=0,c=this.length,p=this,h=c-1,d=e[0],g=x.isFunction(d);if(g||!(1>=c||\"string\"!=typeof d||x.support.checkClone)&&st.test(d))return this.each(function(r){var i=p.eq(r);g&&(e[0]=d.call(this,r,i.html())),i.domManip(e,t,n)});if(c&&(r=x.buildFragment(e,this[0].ownerDocument,!1,!n&&this),i=r.firstChild,1===r.childNodes.length&&(r=i),i)){for(o=x.map(mt(r,\"script\"),ft),s=o.length;c>l;l++)a=r,l!==h&&(a=x.clone(a,!0,!0),s&&x.merge(o,mt(a,\"script\"))),t.call(this[l],a,l);if(s)for(u=o[o.length-1].ownerDocument,x.map(o,ht),l=0;s>l;l++)a=o[l],at.test(a.type||\"\")&&!q.access(a,\"globalEval\")&&x.contains(u,a)&&(a.src?x._evalUrl(a.src):x.globalEval(a.textContent.replace(lt,\"\")))}return this}}),x.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){x.fn[e]=function(e){var n,r=[],i=x(e),o=i.length-1,s=0;for(;o>=s;s++)n=s===o?this:this.clone(!0),x(i[s])[t](n),h.apply(r,n.get());return this.pushStack(r)}}),x.extend({clone:function(e,t,n){var r,i,o,s,a=e.cloneNode(!0),u=x.contains(e.ownerDocument,e);if(!(x.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||x.isXMLDoc(e)))for(s=mt(a),o=mt(e),r=0,i=o.length;i>r;r++)yt(o[r],s[r]);if(t)if(n)for(o=o||mt(e),s=s||mt(a),r=0,i=o.length;i>r;r++)gt(o[r],s[r]);else gt(e,a);return s=mt(a,\"script\"),s.length>0&&dt(s,!u&&mt(e,\"script\")),a},buildFragment:function(e,t,n,r){var i,o,s,a,u,l,c=0,p=e.length,f=t.createDocumentFragment(),h=[];for(;p>c;c++)if(i=e[c],i||0===i)if(\"object\"===x.type(i))x.merge(h,i.nodeType?[i]:i);else if(rt.test(i)){o=o||f.appendChild(t.createElement(\"div\")),s=(nt.exec(i)||[\"\",\"\"])[1].toLowerCase(),a=ct[s]||ct._default,o.innerHTML=a[1]+i.replace(tt,\"<$1></$2>\")+a[2],l=a[0];while(l--)o=o.lastChild;x.merge(h,o.childNodes),o=f.firstChild,o.textContent=\"\"}else h.push(t.createTextNode(i));f.textContent=\"\",c=0;while(i=h[c++])if((!r||-1===x.inArray(i,r))&&(u=x.contains(i.ownerDocument,i),o=mt(f.appendChild(i),\"script\"),u&&dt(o),n)){l=0;while(i=o[l++])at.test(i.type||\"\")&&n.push(i)}return f},cleanData:function(e){var t,n,r,i,o,s,a=x.event.special,u=0;for(;(n=e[u])!==undefined;u++){if(F.accepts(n)&&(o=n[q.expando],o&&(t=q.cache[o]))){if(r=Object.keys(t.events||{}),r.length)for(s=0;(i=r[s])!==undefined;s++)a[i]?x.event.remove(n,i):x.removeEvent(n,i,t.handle);q.cache[o]&&delete q.cache[o]}delete L.cache[n[L.expando]]}},_evalUrl:function(e){return x.ajax({url:e,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})}});function pt(e,t){return x.nodeName(e,\"table\")&&x.nodeName(1===t.nodeType?t:t.firstChild,\"tr\")?e.getElementsByTagName(\"tbody\")[0]||e.appendChild(e.ownerDocument.createElement(\"tbody\")):e}function ft(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function ht(e){var t=ut.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function dt(e,t){var n=e.length,r=0;for(;n>r;r++)q.set(e[r],\"globalEval\",!t||q.get(t[r],\"globalEval\"))}function gt(e,t){var n,r,i,o,s,a,u,l;if(1===t.nodeType){if(q.hasData(e)&&(o=q.access(e),s=q.set(t,o),l=o.events)){delete s.handle,s.events={};for(i in l)for(n=0,r=l[i].length;r>n;n++)x.event.add(t,i,l[i][n])}L.hasData(e)&&(a=L.access(e),u=x.extend({},a),L.set(t,u))}}function mt(e,t){var n=e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):e.querySelectorAll?e.querySelectorAll(t||\"*\"):[];return t===undefined||t&&x.nodeName(e,t)?x.merge([e],n):n}function yt(e,t){var n=t.nodeName.toLowerCase();\"input\"===n&&ot.test(e.type)?t.checked=e.checked:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}x.fn.extend({wrapAll:function(e){var t;return x.isFunction(e)?this.each(function(t){x(this).wrapAll(e.call(this,t))}):(this[0]&&(t=x(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return x.isFunction(e)?this.each(function(t){x(this).wrapInner(e.call(this,t))}):this.each(function(){var t=x(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=x.isFunction(e);return this.each(function(n){x(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){x.nodeName(this,\"body\")||x(this).replaceWith(this.childNodes)}).end()}});var vt,xt,bt=/^(none|table(?!-c[ea]).+)/,wt=/^margin/,Tt=RegExp(\"^(\"+b+\")(.*)$\",\"i\"),Ct=RegExp(\"^(\"+b+\")(?!px)[a-z%]+$\",\"i\"),kt=RegExp(\"^([+-])=(\"+b+\")\",\"i\"),Nt={BODY:\"block\"},Et={position:\"absolute\",visibility:\"hidden\",display:\"block\"},St={letterSpacing:0,fontWeight:400},jt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],Dt=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function At(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=Dt.length;while(i--)if(t=Dt[i]+n,t in e)return t;return r}function Lt(e,t){return e=t||e,\"none\"===x.css(e,\"display\")||!x.contains(e.ownerDocument,e)}function qt(t){return e.getComputedStyle(t,null)}function Ht(e,t){var n,r,i,o=[],s=0,a=e.length;for(;a>s;s++)r=e[s],r.style&&(o[s]=q.get(r,\"olddisplay\"),n=r.style.display,t?(o[s]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&Lt(r)&&(o[s]=q.access(r,\"olddisplay\",Rt(r.nodeName)))):o[s]||(i=Lt(r),(n&&\"none\"!==n||!i)&&q.set(r,\"olddisplay\",i?n:x.css(r,\"display\"))));for(s=0;a>s;s++)r=e[s],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[s]||\"\":\"none\"));return e}x.fn.extend({css:function(e,t){return x.access(this,function(e,t,n){var r,i,o={},s=0;if(x.isArray(t)){for(r=qt(e),i=t.length;i>s;s++)o[t[s]]=x.css(e,t[s],!1,r);return o}return n!==undefined?x.style(e,t,n):x.css(e,t)},e,t,arguments.length>1)},show:function(){return Ht(this,!0)},hide:function(){return Ht(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){Lt(this)?x(this).show():x(this).hide()})}}),x.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=vt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,s,a=x.camelCase(t),u=e.style;return t=x.cssProps[a]||(x.cssProps[a]=At(u,a)),s=x.cssHooks[t]||x.cssHooks[a],n===undefined?s&&\"get\"in s&&(i=s.get(e,!1,r))!==undefined?i:u[t]:(o=typeof n,\"string\"===o&&(i=kt.exec(n))&&(n=(i[1]+1)*i[2]+parseFloat(x.css(e,t)),o=\"number\"),null==n||\"number\"===o&&isNaN(n)||(\"number\"!==o||x.cssNumber[a]||(n+=\"px\"),x.support.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(u[t]=\"inherit\"),s&&\"set\"in s&&(n=s.set(e,n,r))===undefined||(u[t]=n)),undefined)}},css:function(e,t,n,r){var i,o,s,a=x.camelCase(t);return t=x.cssProps[a]||(x.cssProps[a]=At(e.style,a)),s=x.cssHooks[t]||x.cssHooks[a],s&&\"get\"in s&&(i=s.get(e,!0,n)),i===undefined&&(i=vt(e,t,r)),\"normal\"===i&&t in St&&(i=St[t]),\"\"===n||n?(o=parseFloat(i),n===!0||x.isNumeric(o)?o||0:i):i}}),vt=function(e,t,n){var r,i,o,s=n||qt(e),a=s?s.getPropertyValue(t)||s[t]:undefined,u=e.style;return s&&(\"\"!==a||x.contains(e.ownerDocument,e)||(a=x.style(e,t)),Ct.test(a)&&wt.test(t)&&(r=u.width,i=u.minWidth,o=u.maxWidth,u.minWidth=u.maxWidth=u.width=a,a=s.width,u.width=r,u.minWidth=i,u.maxWidth=o)),a};function Ot(e,t,n){var r=Tt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function Ft(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,s=0;for(;4>o;o+=2)\"margin\"===n&&(s+=x.css(e,n+jt[o],!0,i)),r?(\"content\"===n&&(s-=x.css(e,\"padding\"+jt[o],!0,i)),\"margin\"!==n&&(s-=x.css(e,\"border\"+jt[o]+\"Width\",!0,i))):(s+=x.css(e,\"padding\"+jt[o],!0,i),\"padding\"!==n&&(s+=x.css(e,\"border\"+jt[o]+\"Width\",!0,i)));return s}function Pt(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=qt(e),s=x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=vt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Ct.test(i))return i;r=s&&(x.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+Ft(e,t,n||(s?\"border\":\"content\"),r,o)+\"px\"}function Rt(e){var t=o,n=Nt[e];return n||(n=Mt(e,t),\"none\"!==n&&n||(xt=(xt||x(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(xt[0].contentWindow||xt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=Mt(e,t),xt.detach()),Nt[e]=n),n}function Mt(e,t){var n=x(t.createElement(e)).appendTo(t.body),r=x.css(n[0],\"display\");return n.remove(),r}x.each([\"height\",\"width\"],function(e,t){x.cssHooks[t]={get:function(e,n,r){return n?0===e.offsetWidth&&bt.test(x.css(e,\"display\"))?x.swap(e,Et,function(){return Pt(e,t,r)}):Pt(e,t,r):undefined},set:function(e,n,r){var i=r&&qt(e);return Ot(e,n,r?Ft(e,t,r,x.support.boxSizing&&\"border-box\"===x.css(e,\"boxSizing\",!1,i),i):0)}}}),x(function(){x.support.reliableMarginRight||(x.cssHooks.marginRight={get:function(e,t){return t?x.swap(e,{display:\"inline-block\"},vt,[e,\"marginRight\"]):undefined}}),!x.support.pixelPosition&&x.fn.position&&x.each([\"top\",\"left\"],function(e,t){x.cssHooks[t]={get:function(e,n){return n?(n=vt(e,t),Ct.test(n)?x(e).position()[t]+\"px\":n):undefined}}})}),x.expr&&x.expr.filters&&(x.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight},x.expr.filters.visible=function(e){return!x.expr.filters.hidden(e)}),x.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){x.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+jt[r]+t]=o[r]||o[r-2]||o[0];return i}},wt.test(e)||(x.cssHooks[e+t].set=Ot)});var Wt=/%20/g,$t=/\\[\\]$/,Bt=/\\r?\\n/g,It=/^(?:submit|button|image|reset|file)$/i,zt=/^(?:input|select|textarea|keygen)/i;x.fn.extend({serialize:function(){return x.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=x.prop(this,\"elements\");return e?x.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!x(this).is(\":disabled\")&&zt.test(this.nodeName)&&!It.test(e)&&(this.checked||!ot.test(e))}).map(function(e,t){var n=x(this).val();return null==n?null:x.isArray(n)?x.map(n,function(e){return{name:t.name,value:e.replace(Bt,\"\\r\\n\")}}):{name:t.name,value:n.replace(Bt,\"\\r\\n\")}}).get()}}),x.param=function(e,t){var n,r=[],i=function(e,t){t=x.isFunction(t)?t():null==t?\"\":t,r[r.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(t===undefined&&(t=x.ajaxSettings&&x.ajaxSettings.traditional),x.isArray(e)||e.jquery&&!x.isPlainObject(e))x.each(e,function(){i(this.name,this.value)});else for(n in e)_t(n,e[n],t,i);return r.join(\"&\").replace(Wt,\"+\")};function _t(e,t,n,r){var i;if(x.isArray(t))x.each(t,function(t,i){n||$t.test(e)?r(e,i):_t(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==x.type(t))r(e,t);else for(i in t)_t(e+\"[\"+i+\"]\",t[i],n,r)}x.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){x.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),x.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)\n},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)}});var Xt,Ut,Yt=x.now(),Vt=/\\?/,Gt=/#.*$/,Jt=/([?&])_=[^&]*/,Qt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Kt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Zt=/^(?:GET|HEAD)$/,en=/^\\/\\//,tn=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,nn=x.fn.load,rn={},on={},sn=\"*/\".concat(\"*\");try{Ut=i.href}catch(an){Ut=o.createElement(\"a\"),Ut.href=\"\",Ut=Ut.href}Xt=tn.exec(Ut.toLowerCase())||[];function un(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(w)||[];if(x.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function ln(e,t,n,r){var i={},o=e===on;function s(a){var u;return i[a]=!0,x.each(e[a]||[],function(e,a){var l=a(t,n,r);return\"string\"!=typeof l||o||i[l]?o?!(u=l):undefined:(t.dataTypes.unshift(l),s(l),!1)}),u}return s(t.dataTypes[0])||!i[\"*\"]&&s(\"*\")}function cn(e,t){var n,r,i=x.ajaxSettings.flatOptions||{};for(n in t)t[n]!==undefined&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&x.extend(!0,e,r),e}x.fn.load=function(e,t,n){if(\"string\"!=typeof e&&nn)return nn.apply(this,arguments);var r,i,o,s=this,a=e.indexOf(\" \");return a>=0&&(r=e.slice(a),e=e.slice(0,a)),x.isFunction(t)?(n=t,t=undefined):t&&\"object\"==typeof t&&(i=\"POST\"),s.length>0&&x.ajax({url:e,type:i,dataType:\"html\",data:t}).done(function(e){o=arguments,s.html(r?x(\"<div>\").append(x.parseHTML(e)).find(r):e)}).complete(n&&function(e,t){s.each(n,o||[e.responseText,t,e])}),this},x.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){x.fn[t]=function(e){return this.on(t,e)}}),x.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ut,type:\"GET\",isLocal:Kt.test(Xt[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":sn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":x.parseJSON,\"text xml\":x.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?cn(cn(e,x.ajaxSettings),t):cn(x.ajaxSettings,e)},ajaxPrefilter:un(rn),ajaxTransport:un(on),ajax:function(e,t){\"object\"==typeof e&&(t=e,e=undefined),t=t||{};var n,r,i,o,s,a,u,l,c=x.ajaxSetup({},t),p=c.context||c,f=c.context&&(p.nodeType||p.jquery)?x(p):x.event,h=x.Deferred(),d=x.Callbacks(\"once memory\"),g=c.statusCode||{},m={},y={},v=0,b=\"canceled\",T={readyState:0,getResponseHeader:function(e){var t;if(2===v){if(!o){o={};while(t=Qt.exec(i))o[t[1].toLowerCase()]=t[2]}t=o[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===v?i:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return v||(e=y[n]=y[n]||e,m[e]=t),this},overrideMimeType:function(e){return v||(c.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>v)for(t in e)g[t]=[g[t],e[t]];else T.always(e[T.status]);return this},abort:function(e){var t=e||b;return n&&n.abort(t),k(0,t),this}};if(h.promise(T).complete=d.add,T.success=T.done,T.error=T.fail,c.url=((e||c.url||Ut)+\"\").replace(Gt,\"\").replace(en,Xt[1]+\"//\"),c.type=t.method||t.type||c.method||c.type,c.dataTypes=x.trim(c.dataType||\"*\").toLowerCase().match(w)||[\"\"],null==c.crossDomain&&(a=tn.exec(c.url.toLowerCase()),c.crossDomain=!(!a||a[1]===Xt[1]&&a[2]===Xt[2]&&(a[3]||(\"http:\"===a[1]?\"80\":\"443\"))===(Xt[3]||(\"http:\"===Xt[1]?\"80\":\"443\")))),c.data&&c.processData&&\"string\"!=typeof c.data&&(c.data=x.param(c.data,c.traditional)),ln(rn,c,t,T),2===v)return T;u=c.global,u&&0===x.active++&&x.event.trigger(\"ajaxStart\"),c.type=c.type.toUpperCase(),c.hasContent=!Zt.test(c.type),r=c.url,c.hasContent||(c.data&&(r=c.url+=(Vt.test(r)?\"&\":\"?\")+c.data,delete c.data),c.cache===!1&&(c.url=Jt.test(r)?r.replace(Jt,\"$1_=\"+Yt++):r+(Vt.test(r)?\"&\":\"?\")+\"_=\"+Yt++)),c.ifModified&&(x.lastModified[r]&&T.setRequestHeader(\"If-Modified-Since\",x.lastModified[r]),x.etag[r]&&T.setRequestHeader(\"If-None-Match\",x.etag[r])),(c.data&&c.hasContent&&c.contentType!==!1||t.contentType)&&T.setRequestHeader(\"Content-Type\",c.contentType),T.setRequestHeader(\"Accept\",c.dataTypes[0]&&c.accepts[c.dataTypes[0]]?c.accepts[c.dataTypes[0]]+(\"*\"!==c.dataTypes[0]?\", \"+sn+\"; q=0.01\":\"\"):c.accepts[\"*\"]);for(l in c.headers)T.setRequestHeader(l,c.headers[l]);if(c.beforeSend&&(c.beforeSend.call(p,T,c)===!1||2===v))return T.abort();b=\"abort\";for(l in{success:1,error:1,complete:1})T[l](c[l]);if(n=ln(on,c,t,T)){T.readyState=1,u&&f.trigger(\"ajaxSend\",[T,c]),c.async&&c.timeout>0&&(s=setTimeout(function(){T.abort(\"timeout\")},c.timeout));try{v=1,n.send(m,k)}catch(C){if(!(2>v))throw C;k(-1,C)}}else k(-1,\"No Transport\");function k(e,t,o,a){var l,m,y,b,w,C=t;2!==v&&(v=2,s&&clearTimeout(s),n=undefined,i=a||\"\",T.readyState=e>0?4:0,l=e>=200&&300>e||304===e,o&&(b=pn(c,T,o)),b=fn(c,b,T,l),l?(c.ifModified&&(w=T.getResponseHeader(\"Last-Modified\"),w&&(x.lastModified[r]=w),w=T.getResponseHeader(\"etag\"),w&&(x.etag[r]=w)),204===e||\"HEAD\"===c.type?C=\"nocontent\":304===e?C=\"notmodified\":(C=b.state,m=b.data,y=b.error,l=!y)):(y=C,(e||!C)&&(C=\"error\",0>e&&(e=0))),T.status=e,T.statusText=(t||C)+\"\",l?h.resolveWith(p,[m,C,T]):h.rejectWith(p,[T,C,y]),T.statusCode(g),g=undefined,u&&f.trigger(l?\"ajaxSuccess\":\"ajaxError\",[T,c,l?m:y]),d.fireWith(p,[T,C]),u&&(f.trigger(\"ajaxComplete\",[T,c]),--x.active||x.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return x.get(e,t,n,\"json\")},getScript:function(e,t){return x.get(e,undefined,t,\"script\")}}),x.each([\"get\",\"post\"],function(e,t){x[t]=function(e,n,r,i){return x.isFunction(n)&&(i=i||r,r=n,n=undefined),x.ajax({url:e,type:t,dataType:i,data:n,success:r})}});function pn(e,t,n){var r,i,o,s,a=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),r===undefined&&(r=e.mimeType||t.getResponseHeader(\"Content-Type\"));if(r)for(i in a)if(a[i]&&a[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+\" \"+u[0]]){o=i;break}s||(s=i)}o=o||s}return o?(o!==u[0]&&u.unshift(o),n[o]):undefined}function fn(e,t,n,r){var i,o,s,a,u,l={},c=e.dataTypes.slice();if(c[1])for(s in e.converters)l[s.toLowerCase()]=e.converters[s];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if(\"*\"===o)o=u;else if(\"*\"!==u&&u!==o){if(s=l[u+\" \"+o]||l[\"* \"+o],!s)for(i in l)if(a=i.split(\" \"),a[1]===o&&(s=l[u+\" \"+a[0]]||l[\"* \"+a[0]])){s===!0?s=l[i]:l[i]!==!0&&(o=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&e[\"throws\"])t=s(t);else try{t=s(t)}catch(p){return{state:\"parsererror\",error:s?p:\"No conversion from \"+u+\" to \"+o}}}return{state:\"success\",data:t}}x.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return x.globalEval(e),e}}}),x.ajaxPrefilter(\"script\",function(e){e.cache===undefined&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\")}),x.ajaxTransport(\"script\",function(e){if(e.crossDomain){var t,n;return{send:function(r,i){t=x(\"<script>\").prop({async:!0,charset:e.scriptCharset,src:e.url}).on(\"load error\",n=function(e){t.remove(),n=null,e&&i(\"error\"===e.type?404:200,e.type)}),o.head.appendChild(t[0])},abort:function(){n&&n()}}}});var hn=[],dn=/(=)\\?(?=&|$)|\\?\\?/;x.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=hn.pop()||x.expando+\"_\"+Yt++;return this[e]=!0,e}}),x.ajaxPrefilter(\"json jsonp\",function(t,n,r){var i,o,s,a=t.jsonp!==!1&&(dn.test(t.url)?\"url\":\"string\"==typeof t.data&&!(t.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&dn.test(t.data)&&\"data\");return a||\"jsonp\"===t.dataTypes[0]?(i=t.jsonpCallback=x.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(dn,\"$1\"+i):t.jsonp!==!1&&(t.url+=(Vt.test(t.url)?\"&\":\"?\")+t.jsonp+\"=\"+i),t.converters[\"script json\"]=function(){return s||x.error(i+\" was not called\"),s[0]},t.dataTypes[0]=\"json\",o=e[i],e[i]=function(){s=arguments},r.always(function(){e[i]=o,t[i]&&(t.jsonpCallback=n.jsonpCallback,hn.push(i)),s&&x.isFunction(o)&&o(s[0]),s=o=undefined}),\"script\"):undefined}),x.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var gn=x.ajaxSettings.xhr(),mn={0:200,1223:204},yn=0,vn={};e.ActiveXObject&&x(e).on(\"unload\",function(){for(var e in vn)vn[e]();vn=undefined}),x.support.cors=!!gn&&\"withCredentials\"in gn,x.support.ajax=gn=!!gn,x.ajaxTransport(function(e){var t;return x.support.cors||gn&&!e.crossDomain?{send:function(n,r){var i,o,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(i in e.xhrFields)s[i]=e.xhrFields[i];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||n[\"X-Requested-With\"]||(n[\"X-Requested-With\"]=\"XMLHttpRequest\");for(i in n)s.setRequestHeader(i,n[i]);t=function(e){return function(){t&&(delete vn[o],t=s.onload=s.onerror=null,\"abort\"===e?s.abort():\"error\"===e?r(s.status||404,s.statusText):r(mn[s.status]||s.status,s.statusText,\"string\"==typeof s.responseText?{text:s.responseText}:undefined,s.getAllResponseHeaders()))}},s.onload=t(),s.onerror=t(\"error\"),t=vn[o=yn++]=t(\"abort\"),s.send(e.hasContent&&e.data||null)},abort:function(){t&&t()}}:undefined});var xn,bn,wn=/^(?:toggle|show|hide)$/,Tn=RegExp(\"^(?:([+-])=|)(\"+b+\")([a-z%]*)$\",\"i\"),Cn=/queueHooks$/,kn=[An],Nn={\"*\":[function(e,t){var n=this.createTween(e,t),r=n.cur(),i=Tn.exec(t),o=i&&i[3]||(x.cssNumber[e]?\"\":\"px\"),s=(x.cssNumber[e]||\"px\"!==o&&+r)&&Tn.exec(x.css(n.elem,e)),a=1,u=20;if(s&&s[3]!==o){o=o||s[3],i=i||[],s=+r||1;do a=a||\".5\",s/=a,x.style(n.elem,e,s+o);while(a!==(a=n.cur()/r)&&1!==a&&--u)}return i&&(s=n.start=+s||+r||0,n.unit=o,n.end=i[1]?s+(i[1]+1)*i[2]:+i[2]),n}]};function En(){return setTimeout(function(){xn=undefined}),xn=x.now()}function Sn(e,t,n){var r,i=(Nn[t]||[]).concat(Nn[\"*\"]),o=0,s=i.length;for(;s>o;o++)if(r=i[o].call(n,t,e))return r}function jn(e,t,n){var r,i,o=0,s=kn.length,a=x.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;var t=xn||En(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,s=0,u=l.tweens.length;for(;u>s;s++)l.tweens[s].run(o);return a.notifyWith(e,[l,o,n]),1>o&&u?n:(a.resolveWith(e,[l]),!1)},l=a.promise({elem:e,props:x.extend({},t),opts:x.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:xn||En(),duration:n.duration,tweens:[],createTween:function(t,n){var r=x.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?a.resolveWith(e,[l,t]):a.rejectWith(e,[l,t]),this}}),c=l.props;for(Dn(c,l.opts.specialEasing);s>o;o++)if(r=kn[o].call(l,e,c,l.opts))return r;return x.map(c,Sn,l),x.isFunction(l.opts.start)&&l.opts.start.call(e,l),x.fx.timer(x.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function Dn(e,t){var n,r,i,o,s;for(n in e)if(r=x.camelCase(n),i=t[r],o=e[n],x.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),s=x.cssHooks[r],s&&\"expand\"in s){o=s.expand(o),delete e[r];for(n in o)n in e||(e[n]=o[n],t[n]=i)}else t[r]=i}x.Animation=x.extend(jn,{tweener:function(e,t){x.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Nn[n]=Nn[n]||[],Nn[n].unshift(t)},prefilter:function(e,t){t?kn.unshift(e):kn.push(e)}});function An(e,t,n){var r,i,o,s,a,u,l=this,c={},p=e.style,f=e.nodeType&&Lt(e),h=q.get(e,\"fxshow\");n.queue||(a=x._queueHooks(e,\"fx\"),null==a.unqueued&&(a.unqueued=0,u=a.empty.fire,a.empty.fire=function(){a.unqueued||u()}),a.unqueued++,l.always(function(){l.always(function(){a.unqueued--,x.queue(e,\"fx\").length||a.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],\"inline\"===x.css(e,\"display\")&&\"none\"===x.css(e,\"float\")&&(p.display=\"inline-block\")),n.overflow&&(p.overflow=\"hidden\",l.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],wn.exec(i)){if(delete t[r],o=o||\"toggle\"===i,i===(f?\"hide\":\"show\")){if(\"show\"!==i||!h||h[r]===undefined)continue;f=!0}c[r]=h&&h[r]||x.style(e,r)}if(!x.isEmptyObject(c)){h?\"hidden\"in h&&(f=h.hidden):h=q.access(e,\"fxshow\",{}),o&&(h.hidden=!f),f?x(e).show():l.done(function(){x(e).hide()}),l.done(function(){var t;q.remove(e,\"fxshow\");for(t in c)x.style(e,t,c[t])});for(r in c)s=Sn(f?h[r]:0,r,l),r in h||(h[r]=s.start,f&&(s.end=s.start,s.start=\"width\"===r||\"height\"===r?1:0))}}function Ln(e,t,n,r,i){return new Ln.prototype.init(e,t,n,r,i)}x.Tween=Ln,Ln.prototype={constructor:Ln,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(x.cssNumber[n]?\"\":\"px\")},cur:function(){var e=Ln.propHooks[this.prop];return e&&e.get?e.get(this):Ln.propHooks._default.get(this)},run:function(e){var t,n=Ln.propHooks[this.prop];return this.pos=t=this.options.duration?x.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Ln.propHooks._default.set(this),this}},Ln.prototype.init.prototype=Ln.prototype,Ln.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=x.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){x.fx.step[e.prop]?x.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[x.cssProps[e.prop]]||x.cssHooks[e.prop])?x.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},Ln.propHooks.scrollTop=Ln.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},x.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=x.fn[t];x.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(qn(t,!0),e,r,i)}}),x.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Lt).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=x.isEmptyObject(e),o=x.speed(t,n,r),s=function(){var t=jn(this,x.extend({},e),o);(i||q.get(this,\"finish\"))&&t.stop(!0)};return s.finish=s,i||o.queue===!1?this.each(s):this.queue(o.queue,s)},stop:function(e,t,n){var r=function(e){var t=e.stop;delete e.stop,t(n)};return\"string\"!=typeof e&&(n=t,t=e,e=undefined),t&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,i=null!=e&&e+\"queueHooks\",o=x.timers,s=q.get(this);if(i)s[i]&&s[i].stop&&r(s[i]);else for(i in s)s[i]&&s[i].stop&&Cn.test(i)&&r(s[i]);for(i=o.length;i--;)o[i].elem!==this||null!=e&&o[i].queue!==e||(o[i].anim.stop(n),t=!1,o.splice(i,1));(t||!n)&&x.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=q.get(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=x.timers,s=r?r.length:0;for(n.finish=!0,x.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;s>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function qn(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=jt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}x.each({slideDown:qn(\"show\"),slideUp:qn(\"hide\"),slideToggle:qn(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){x.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),x.speed=function(e,t,n){var r=e&&\"object\"==typeof e?x.extend({},e):{complete:n||!n&&t||x.isFunction(e)&&e,duration:e,easing:n&&t||t&&!x.isFunction(t)&&t};return r.duration=x.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in x.fx.speeds?x.fx.speeds[r.duration]:x.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){x.isFunction(r.old)&&r.old.call(this),r.queue&&x.dequeue(this,r.queue)},r},x.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},x.timers=[],x.fx=Ln.prototype.init,x.fx.tick=function(){var e,t=x.timers,n=0;for(xn=x.now();t.length>n;n++)e=t[n],e()||t[n]!==e||t.splice(n--,1);t.length||x.fx.stop(),xn=undefined},x.fx.timer=function(e){e()&&x.timers.push(e)&&x.fx.start()},x.fx.interval=13,x.fx.start=function(){bn||(bn=setInterval(x.fx.tick,x.fx.interval))},x.fx.stop=function(){clearInterval(bn),bn=null},x.fx.speeds={slow:600,fast:200,_default:400},x.fx.step={},x.expr&&x.expr.filters&&(x.expr.filters.animated=function(e){return x.grep(x.timers,function(t){return e===t.elem}).length}),x.fn.offset=function(e){if(arguments.length)return e===undefined?this:this.each(function(t){x.offset.setOffset(this,e,t)});var t,n,i=this[0],o={top:0,left:0},s=i&&i.ownerDocument;if(s)return t=s.documentElement,x.contains(t,i)?(typeof i.getBoundingClientRect!==r&&(o=i.getBoundingClientRect()),n=Hn(s),{top:o.top+n.pageYOffset-t.clientTop,left:o.left+n.pageXOffset-t.clientLeft}):o},x.offset={setOffset:function(e,t,n){var r,i,o,s,a,u,l,c=x.css(e,\"position\"),p=x(e),f={};\"static\"===c&&(e.style.position=\"relative\"),a=p.offset(),o=x.css(e,\"top\"),u=x.css(e,\"left\"),l=(\"absolute\"===c||\"fixed\"===c)&&(o+u).indexOf(\"auto\")>-1,l?(r=p.position(),s=r.top,i=r.left):(s=parseFloat(o)||0,i=parseFloat(u)||0),x.isFunction(t)&&(t=t.call(e,n,a)),null!=t.top&&(f.top=t.top-a.top+s),null!=t.left&&(f.left=t.left-a.left+i),\"using\"in t?t.using.call(e,f):p.css(f)}},x.fn.extend({position:function(){if(this[0]){var e,t,n=this[0],r={top:0,left:0};return\"fixed\"===x.css(n,\"position\")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),x.nodeName(e[0],\"html\")||(r=e.offset()),r.top+=x.css(e[0],\"borderTopWidth\",!0),r.left+=x.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-r.top-x.css(n,\"marginTop\",!0),left:t.left-r.left-x.css(n,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||s;while(e&&!x.nodeName(e,\"html\")&&\"static\"===x.css(e,\"position\"))e=e.offsetParent;return e||s})}}),x.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(t,n){var r=\"pageYOffset\"===n;x.fn[t]=function(i){return x.access(this,function(t,i,o){var s=Hn(t);return o===undefined?s?s[n]:t[i]:(s?s.scrollTo(r?e.pageXOffset:o,r?o:e.pageYOffset):t[i]=o,undefined)},t,i,arguments.length,null)}});function Hn(e){return x.isWindow(e)?e:9===e.nodeType&&e.defaultView}x.each({Height:\"height\",Width:\"width\"},function(e,t){x.each({padding:\"inner\"+e,content:t,\"\":\"outer\"+e},function(n,r){x.fn[r]=function(r,i){var o=arguments.length&&(n||\"boolean\"!=typeof r),s=n||(r===!0||i===!0?\"margin\":\"border\");return x.access(this,function(t,n,r){var i;return x.isWindow(t)?t.document.documentElement[\"client\"+e]:9===t.nodeType?(i=t.documentElement,Math.max(t.body[\"scroll\"+e],i[\"scroll\"+e],t.body[\"offset\"+e],i[\"offset\"+e],i[\"client\"+e])):r===undefined?x.css(t,n,s):x.style(t,n,r,s)},t,o?r:undefined,o,null)}})}),x.fn.size=function(){return this.length},x.fn.andSelf=x.fn.addBack,\"object\"==typeof module&&module&&\"object\"==typeof module.exports?module.exports=x:\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return x}),\"object\"==typeof e&&\"object\"==typeof e.document&&(e.jQuery=e.$=x)})(window);\n","//     Underscore.js 1.5.2\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n(function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,h=e.reduce,v=e.reduceRight,g=e.filter,d=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,w=Object.keys,_=i.bind,j=function(n){return n instanceof j?n:this instanceof j?(this._wrapped=n,void 0):new j(n)};\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION=\"1.5.2\";var A=j.each=j.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a=j.keys(n),u=0,i=a.length;i>u;u++)if(t.call(e,n[a[u]],a[u],n)===r)return};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var E=\"Reduce of empty array with no initial value\";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduce===h)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(E);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduceRight===v)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(E);return r},j.find=j.detect=function(n,t,r){var e;return O(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:g&&n.filter===g?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:d&&n.every===d?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var O=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:O(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,function(n){return n[t]})},j.where=function(n,t,r){return j.isEmpty(t)?r?void 0:[]:j[r?\"find\":\"filter\"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},j.findWhere=function(n,t){return j.where(n,t,!0)},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);if(!t&&j.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>e.computed&&(e={value:n,computed:a})}),e.value},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);if(!t&&j.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a<e.computed&&(e={value:n,computed:a})}),e.value},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e},j.sample=function(n,t,r){return arguments.length<2||r?n[j.random(n.length-1)]:j.shuffle(n).slice(0,Math.max(0,t))};var k=function(n){return j.isFunction(n)?n:function(t){return t[n]}};j.sortBy=function(n,t,r){var e=k(t);return j.pluck(j.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index-t.index}),\"value\")};var F=function(n){return function(t,r,e){var u={},i=null==r?j.identity:k(r);return A(t,function(r,a){var o=i.call(e,r,a,t);n(u,o,r)}),u}};j.groupBy=F(function(n,t,r){(j.has(n,t)?n[t]:n[t]=[]).push(r)}),j.indexBy=F(function(n,t,r){n[t]=r}),j.countBy=F(function(n,t){j.has(n,t)?n[t]++:n[t]=1}),j.sortedIndex=function(n,t,r,e){r=null==r?j.identity:k(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var M=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):M(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return M(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.indexOf(t,n)>=0})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){for(var n=j.max(j.pluck(arguments,\"length\").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,\"\"+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if(\"number\"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var R=function(){};j.bind=function(n,t){var r,e;if(_&&n.bind===_)return _.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));R.prototype=n.prototype;var u=new R;R.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error(\"bindAll must be passed function names\");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=r.leading===!1?0:new Date,a=null,i=n.apply(e,u)};return function(){var l=new Date;o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u)):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u,i,a,o;return function(){i=this,u=arguments,a=new Date;var c=function(){var l=new Date-a;t>l?e=setTimeout(c,t-l):(e=null,r||(o=n.apply(i,u)))},l=r&&!e;return e||(e=setTimeout(c,t)),l&&(o=n.apply(i,u)),o}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=w||function(n){if(n!==Object(n))throw new TypeError(\"Invalid object\");var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=n[t[u]];return e},j.pairs=function(n){for(var t=j.keys(n),r=t.length,e=new Array(r),u=0;r>u;u++)e[u]=[t[u],n[t[u]]];return e},j.invert=function(n){for(var t={},r=j.keys(n),e=0,u=r.length;u>e;e++)t[n[r[e]]]=r[e];return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case\"[object String]\":return n==String(t);case\"[object Number]\":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case\"[object Date]\":case\"[object Boolean]\":return+n==+t;case\"[object RegExp]\":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if(\"object\"!=typeof n||\"object\"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c=0,f=!0;if(\"[object Array]\"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return\"[object Array]\"==l.call(n)},j.isObject=function(n){return n===Object(n)},A([\"Arguments\",\"Function\",\"String\",\"Number\",\"Date\",\"RegExp\"],function(n){j[\"is\"+n]=function(t){return l.call(t)==\"[object \"+n+\"]\"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,\"callee\"))}),\"function\"!=typeof/./&&(j.isFunction=function(n){return\"function\"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||\"[object Boolean]\"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var I={escape:{\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\"}};I.unescape=j.invert(I.escape);var T={escape:new RegExp(\"[\"+j.keys(I.escape).join(\"\")+\"]\",\"g\"),unescape:new RegExp(\"(\"+j.keys(I.unescape).join(\"|\")+\")\",\"g\")};j.each([\"escape\",\"unescape\"],function(n){j[n]=function(t){return null==t?\"\":(\"\"+t).replace(T[n],function(t){return I[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),z.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+\"\";return n?n+t:t},j.templateSettings={evaluate:/<%([\\s\\S]+?)%>/g,interpolate:/<%=([\\s\\S]+?)%>/g,escape:/<%-([\\s\\S]+?)%>/g};var q=/(.)^/,B={\"'\":\"'\",\"\\\\\":\"\\\\\",\"\\r\":\"r\",\"\\n\":\"n\",\"\t\":\"t\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},D=/\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join(\"|\")+\"|$\",\"g\"),i=0,a=\"__p+='\";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(D,function(n){return\"\\\\\"+B[n]}),r&&(a+=\"'+\\n((__t=(\"+r+\"))==null?'':_.escape(__t))+\\n'\"),e&&(a+=\"'+\\n((__t=(\"+e+\"))==null?'':__t)+\\n'\"),u&&(a+=\"';\\n\"+u+\"\\n__p+='\"),i=o+t.length,t}),a+=\"';\\n\",r.variable||(a=\"with(obj||{}){\\n\"+a+\"}\\n\"),a=\"var __t,__p='',__j=Array.prototype.join,\"+\"print=function(){__p+=__j.call(arguments,'');};\\n\"+a+\"return __p;\\n\";try{e=new Function(r.variable||\"obj\",\"_\",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source=\"function(\"+(r.variable||\"obj\")+\"){\\n\"+a+\"}\",c},j.chain=function(n){return j(n).chain()};var z=function(n){return this._chain?j(n).chain():n};j.mixin(j),A([\"pop\",\"push\",\"reverse\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),\"shift\"!=n&&\"splice\"!=n||0!==r.length||delete r[0],z.call(this,r)}}),A([\"concat\",\"join\",\"slice\"],function(n){var t=e[n];j.prototype[n]=function(){return z.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}).call(this);\n//# sourceMappingURL=underscore-min.map","/**\r\n* bootstrap.js v3.0.0 by @fat and @mdo\r\n* Copyright 2013 Twitter Inc.\r\n* http://www.apache.org/licenses/LICENSE-2.0\r\n*/\r\nif(!jQuery)throw new Error(\"Bootstrap requires jQuery\");+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]}}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(a.support.transition.end,function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b()})}(window.jQuery),+function(a){\"use strict\";var b='[data-dismiss=\"alert\"]',c=function(c){a(c).on(\"click\",b,this.close)};c.prototype.close=function(b){function c(){f.trigger(\"closed.bs.alert\").remove()}var d=a(this),e=d.attr(\"data-target\");e||(e=d.attr(\"href\"),e=e&&e.replace(/.*(?=#[^\\s]*$)/,\"\"));var f=a(e);b&&b.preventDefault(),f.length||(f=d.hasClass(\"alert\")?d:d.parent()),f.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(a.support.transition.end,c).emulateTransitionEnd(150):c())};var d=a.fn.alert;a.fn.alert=function(b){return this.each(function(){var d=a(this),e=d.data(\"bs.alert\");e||d.data(\"bs.alert\",e=new c(this)),\"string\"==typeof b&&e[b].call(d)})},a.fn.alert.Constructor=c,a.fn.alert.noConflict=function(){return a.fn.alert=d,this},a(document).on(\"click.bs.alert.data-api\",b,c.prototype.close)}(window.jQuery),+function(a){\"use strict\";var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d)};b.DEFAULTS={loadingText:\"loading...\"},b.prototype.setState=function(a){var b=\"disabled\",c=this.$element,d=c.is(\"input\")?\"val\":\"html\",e=c.data();a+=\"Text\",e.resetText||c.data(\"resetText\",c[d]()),c[d](e[a]||this.options[a]),setTimeout(function(){\"loadingText\"==a?c.addClass(b).attr(b,b):c.removeClass(b).removeAttr(b)},0)},b.prototype.toggle=function(){var a=this.$element.closest('[data-toggle=\"buttons\"]');if(a.length){var b=this.$element.find(\"input\").prop(\"checked\",!this.$element.hasClass(\"active\")).trigger(\"change\");\"radio\"===b.prop(\"type\")&&a.find(\".active\").removeClass(\"active\")}this.$element.toggleClass(\"active\")};var c=a.fn.button;a.fn.button=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.button\",e=new b(this,f)),\"toggle\"==c?e.toggle():c&&e.setState(c)})},a.fn.button.Constructor=b,a.fn.button.noConflict=function(){return a.fn.button=c,this},a(document).on(\"click.bs.button.data-api\",\"[data-toggle^=button]\",function(b){var c=a(b.target);c.hasClass(\"btn\")||(c=c.closest(\".btn\")),c.button(\"toggle\"),b.preventDefault()})}(window.jQuery),+function(a){\"use strict\";var b=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=this.sliding=this.interval=this.$active=this.$items=null,\"hover\"==this.options.pause&&this.$element.on(\"mouseenter\",a.proxy(this.pause,this)).on(\"mouseleave\",a.proxy(this.cycle,this))};b.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0},b.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},b.prototype.getActiveIndex=function(){return this.$active=this.$element.find(\".item.active\"),this.$items=this.$active.parent().children(),this.$items.index(this.$active)},b.prototype.to=function(b){var c=this,d=this.getActiveIndex();return b>this.$items.length-1||0>b?void 0:this.sliding?this.$element.one(\"slid\",function(){c.to(b)}):d==b?this.pause().cycle():this.slide(b>d?\"next\":\"prev\",a(this.$items[b]))},b.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition.end&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},b.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},b.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},b.prototype.slide=function(b,c){var d=this.$element.find(\".item.active\"),e=c||d[b](),f=this.interval,g=\"next\"==b?\"left\":\"right\",h=\"next\"==b?\"first\":\"last\",i=this;if(!e.length){if(!this.options.wrap)return;e=this.$element.find(\".item\")[h]()}this.sliding=!0,f&&this.pause();var j=a.Event(\"slide.bs.carousel\",{relatedTarget:e[0],direction:g});if(!e.hasClass(\"active\")){if(this.$indicators.length&&(this.$indicators.find(\".active\").removeClass(\"active\"),this.$element.one(\"slid\",function(){var b=a(i.$indicators.children()[i.getActiveIndex()]);b&&b.addClass(\"active\")})),a.support.transition&&this.$element.hasClass(\"slide\")){if(this.$element.trigger(j),j.isDefaultPrevented())return;e.addClass(b),e[0].offsetWidth,d.addClass(g),e.addClass(g),d.one(a.support.transition.end,function(){e.removeClass([b,g].join(\" \")).addClass(\"active\"),d.removeClass([\"active\",g].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(\"slid\")},0)}).emulateTransitionEnd(600)}else{if(this.$element.trigger(j),j.isDefaultPrevented())return;d.removeClass(\"active\"),e.addClass(\"active\"),this.sliding=!1,this.$element.trigger(\"slid\")}return f&&this.cycle(),this}};var c=a.fn.carousel;a.fn.carousel=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},b.DEFAULTS,d.data(),\"object\"==typeof c&&c),g=\"string\"==typeof c?c:f.slide;e||d.data(\"bs.carousel\",e=new b(this,f)),\"number\"==typeof c?e.to(c):g?e[g]():f.interval&&e.pause().cycle()})},a.fn.carousel.Constructor=b,a.fn.carousel.noConflict=function(){return a.fn.carousel=c,this},a(document).on(\"click.bs.carousel.data-api\",\"[data-slide], [data-slide-to]\",function(b){var c,d=a(this),e=a(d.attr(\"data-target\")||(c=d.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\")),f=a.extend({},e.data(),d.data()),g=d.attr(\"data-slide-to\");g&&(f.interval=!1),e.carousel(f),(g=d.attr(\"data-slide-to\"))&&e.data(\"bs.carousel\").to(g),b.preventDefault()}),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var b=a(this);b.carousel(b.data())})})}(window.jQuery),+function(a){\"use strict\";var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d),this.transitioning=null,this.options.parent&&(this.$parent=a(this.options.parent)),this.options.toggle&&this.toggle()};b.DEFAULTS={toggle:!0},b.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},b.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b=a.Event(\"show.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.$parent&&this.$parent.find(\"> .panel > .in\");if(c&&c.length){var d=c.data(\"bs.collapse\");if(d&&d.transitioning)return;c.collapse(\"hide\"),d||c.data(\"bs.collapse\",null)}var e=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[e](0),this.transitioning=1;var f=function(){this.$element.removeClass(\"collapsing\").addClass(\"in\")[e](\"auto\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return f.call(this);var g=a.camelCase([\"scroll\",e].join(\"-\"));this.$element.one(a.support.transition.end,a.proxy(f,this)).emulateTransitionEnd(350)[e](this.$element[0][g])}}},b.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse\").removeClass(\"in\"),this.transitioning=1;var d=function(){this.transitioning=0,this.$element.trigger(\"hidden.bs.collapse\").removeClass(\"collapsing\").addClass(\"collapse\")};return a.support.transition?(this.$element[c](0).one(a.support.transition.end,a.proxy(d,this)).emulateTransitionEnd(350),void 0):d.call(this)}}},b.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()};var c=a.fn.collapse;a.fn.collapse=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.collapse\"),f=a.extend({},b.DEFAULTS,d.data(),\"object\"==typeof c&&c);e||d.data(\"bs.collapse\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})},a.fn.collapse.Constructor=b,a.fn.collapse.noConflict=function(){return a.fn.collapse=c,this},a(document).on(\"click.bs.collapse.data-api\",\"[data-toggle=collapse]\",function(b){var c,d=a(this),e=d.attr(\"data-target\")||b.preventDefault()||(c=d.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\"),f=a(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":d.data(),i=d.attr(\"data-parent\"),j=i&&a(i);g&&g.transitioning||(j&&j.find('[data-toggle=collapse][data-parent=\"'+i+'\"]').not(d).addClass(\"collapsed\"),d[f.hasClass(\"in\")?\"addClass\":\"removeClass\"](\"collapsed\")),f.collapse(h)})}(window.jQuery),+function(a){\"use strict\";function b(){a(d).remove(),a(e).each(function(b){var d=c(a(this));d.hasClass(\"open\")&&(d.trigger(b=a.Event(\"hide.bs.dropdown\")),b.isDefaultPrevented()||d.removeClass(\"open\").trigger(\"hidden.bs.dropdown\"))})}function c(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}var d=\".dropdown-backdrop\",e=\"[data-toggle=dropdown]\",f=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};f.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=c(e),g=f.hasClass(\"open\");if(b(),!g){if(\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a('<div class=\"dropdown-backdrop\"/>').insertAfter(a(this)).on(\"click\",b),f.trigger(d=a.Event(\"show.bs.dropdown\")),d.isDefaultPrevented())return;f.toggleClass(\"open\").trigger(\"shown.bs.dropdown\"),e.focus()}return!1}},f.prototype.keydown=function(b){if(/(38|40|27)/.test(b.keyCode)){var d=a(this);if(b.preventDefault(),b.stopPropagation(),!d.is(\".disabled, :disabled\")){var f=c(d),g=f.hasClass(\"open\");if(!g||g&&27==b.keyCode)return 27==b.which&&f.find(e).focus(),d.click();var h=a(\"[role=menu] li:not(.divider):visible a\",f);if(h.length){var i=h.index(h.filter(\":focus\"));38==b.keyCode&&i>0&&i--,40==b.keyCode&&i<h.length-1&&i++,~i||(i=0),h.eq(i).focus()}}}};var g=a.fn.dropdown;a.fn.dropdown=function(b){return this.each(function(){var c=a(this),d=c.data(\"dropdown\");d||c.data(\"dropdown\",d=new f(this)),\"string\"==typeof b&&d[b].call(c)})},a.fn.dropdown.Constructor=f,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=g,this},a(document).on(\"click.bs.dropdown.data-api\",b).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",e,f.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",e+\", [role=menu]\",f.prototype.keydown)}(window.jQuery),+function(a){\"use strict\";var b=function(b,c){this.options=c,this.$element=a(b),this.$backdrop=this.isShown=null,this.options.remote&&this.$element.load(this.options.remote)};b.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},b.prototype.toggle=function(a){return this[this.isShown?\"hide\":\"show\"](a)},b.prototype.show=function(b){var c=this,d=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(d),this.isShown||d.isDefaultPrevented()||(this.isShown=!0,this.escape(),this.$element.on(\"click.dismiss.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.backdrop(function(){var d=a.support.transition&&c.$element.hasClass(\"fade\");c.$element.parent().length||c.$element.appendTo(document.body),c.$element.show(),d&&c.$element[0].offsetWidth,c.$element.addClass(\"in\").attr(\"aria-hidden\",!1),c.enforceFocus();var e=a.Event(\"shown.bs.modal\",{relatedTarget:b});d?c.$element.find(\".modal-dialog\").one(a.support.transition.end,function(){c.$element.focus().trigger(e)}).emulateTransitionEnd(300):c.$element.focus().trigger(e)}))},b.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").attr(\"aria-hidden\",!0).off(\"click.dismiss.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(a.support.transition.end,a.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},b.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.focus()},this))},b.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keyup.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keyup.dismiss.bs.modal\")},b.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.removeBackdrop(),a.$element.trigger(\"hidden.bs.modal\")})},b.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},b.prototype.backdrop=function(b){var c=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var d=a.support.transition&&c;if(this.$backdrop=a('<div class=\"modal-backdrop '+c+'\" />').appendTo(document.body),this.$element.on(\"click.dismiss.modal\",a.proxy(function(a){a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),d&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;d?this.$backdrop.one(a.support.transition.end,b).emulateTransitionEnd(150):b()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass(\"in\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(a.support.transition.end,b).emulateTransitionEnd(150):b()):b&&b()};var c=a.fn.modal;a.fn.modal=function(c,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},b.DEFAULTS,e.data(),\"object\"==typeof c&&c);f||e.data(\"bs.modal\",f=new b(this,g)),\"string\"==typeof c?f[c](d):g.show&&f.show(d)})},a.fn.modal.Constructor=b,a.fn.modal.noConflict=function(){return a.fn.modal=c,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(b){var c=a(this),d=c.attr(\"href\"),e=a(c.attr(\"data-target\")||d&&d.replace(/.*(?=#[^\\s]+$)/,\"\")),f=e.data(\"modal\")?\"toggle\":a.extend({remote:!/#/.test(d)&&d},e.data(),c.data());b.preventDefault(),e.modal(f,this).one(\"hide\",function(){c.is(\":visible\")&&c.focus()})}),a(document).on(\"show.bs.modal\",\".modal\",function(){a(document.body).addClass(\"modal-open\")}).on(\"hidden.bs.modal\",\".modal\",function(){a(document.body).removeClass(\"modal-open\")})}(window.jQuery),+function(a){\"use strict\";var b=function(a,b){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init(\"tooltip\",a,b)};b.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1},b.prototype.init=function(b,c,d){this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d);for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focus\",i=\"hover\"==g?\"mouseleave\":\"blur\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},b.prototype.getDefaults=function(){return b.DEFAULTS},b.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},b.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},b.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget)[this.type](this.getDelegateOptions()).data(\"bs.\"+this.type);return clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show),void 0):c.show()},b.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget)[this.type](this.getDelegateOptions()).data(\"bs.\"+this.type);return clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide),void 0):c.hide()},b.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){if(this.$element.trigger(b),b.isDefaultPrevented())return;var c=this.tip();this.setContent(),this.options.animation&&c.addClass(\"fade\");var d=\"function\"==typeof this.options.placement?this.options.placement.call(this,c[0],this.$element[0]):this.options.placement,e=/\\s?auto?\\s?/i,f=e.test(d);f&&(d=d.replace(e,\"\")||\"top\"),c.detach().css({top:0,left:0,display:\"block\"}).addClass(d),this.options.container?c.appendTo(this.options.container):c.insertAfter(this.$element);var g=this.getPosition(),h=c[0].offsetWidth,i=c[0].offsetHeight;if(f){var j=this.$element.parent(),k=d,l=document.documentElement.scrollTop||document.body.scrollTop,m=\"body\"==this.options.container?window.innerWidth:j.outerWidth(),n=\"body\"==this.options.container?window.innerHeight:j.outerHeight(),o=\"body\"==this.options.container?0:j.offset().left;d=\"bottom\"==d&&g.top+g.height+i-l>n?\"top\":\"top\"==d&&g.top-l-i<0?\"bottom\":\"right\"==d&&g.right+h>m?\"left\":\"left\"==d&&g.left-h<o?\"right\":d,c.removeClass(k).addClass(d)}var p=this.getCalculatedOffset(d,g,h,i);this.applyPlacement(p,d),this.$element.trigger(\"shown.bs.\"+this.type)}},b.prototype.applyPlacement=function(a,b){var c,d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),a.top=a.top+g,a.left=a.left+h,d.offset(a).addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;if(\"top\"==b&&j!=f&&(c=!0,a.top=a.top+f-j),/bottom|top/.test(b)){var k=0;a.left<0&&(k=-2*a.left,a.left=0,d.offset(a),i=d[0].offsetWidth,j=d[0].offsetHeight),this.replaceArrow(k-e+i,i,\"left\")}else this.replaceArrow(j-f,j,\"top\");c&&d.offset(a)},b.prototype.replaceArrow=function(a,b,c){this.arrow().css(c,a?50*(1-a/b)+\"%\":\"\")},b.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},b.prototype.hide=function(){function b(){\"in\"!=c.hoverState&&d.detach()}var c=this,d=this.tip(),e=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(e),e.isDefaultPrevented()?void 0:(d.removeClass(\"in\"),a.support.transition&&this.$tip.hasClass(\"fade\")?d.one(a.support.transition.end,b).emulateTransitionEnd(150):b(),this.$element.trigger(\"hidden.bs.\"+this.type),this)},b.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},b.prototype.hasContent=function(){return this.getTitle()},b.prototype.getPosition=function(){var b=this.$element[0];return a.extend({},\"function\"==typeof b.getBoundingClientRect?b.getBoundingClientRect():{width:b.offsetWidth,height:b.offsetHeight},this.$element.offset())},b.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},b.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},b.prototype.tip=function(){return this.$tip=this.$tip||a(this.options.template)},b.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},b.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},b.prototype.enable=function(){this.enabled=!0},b.prototype.disable=function(){this.enabled=!1},b.prototype.toggleEnabled=function(){this.enabled=!this.enabled},b.prototype.toggle=function(b){var c=b?a(b.currentTarget)[this.type](this.getDelegateOptions()).data(\"bs.\"+this.type):this;c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},b.prototype.destroy=function(){this.hide().$element.off(\".\"+this.type).removeData(\"bs.\"+this.type)};var c=a.fn.tooltip;a.fn.tooltip=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.tooltip\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})},a.fn.tooltip.Constructor=b,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=c,this}}(window.jQuery),+function(a){\"use strict\";var b=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");b.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),b.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),b.prototype.constructor=b,b.prototype.getDefaults=function(){return b.DEFAULTS},b.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\")[this.options.html?\"html\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},b.prototype.hasContent=function(){return this.getTitle()||this.getContent()},b.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},b.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")},b.prototype.tip=function(){return this.$tip||(this.$tip=a(this.options.template)),this.$tip};var c=a.fn.popover;a.fn.popover=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.popover\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})},a.fn.popover.Constructor=b,a.fn.popover.noConflict=function(){return a.fn.popover=c,this}}(window.jQuery),+function(a){\"use strict\";function b(c,d){var e,f=a.proxy(this.process,this);this.$element=a(c).is(\"body\")?a(window):a(c),this.$body=a(\"body\"),this.$scrollElement=this.$element.on(\"scroll.bs.scroll-spy.data-api\",f),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||(e=a(c).attr(\"href\"))&&e.replace(/.*(?=#[^\\s]+$)/,\"\")||\"\")+\" .nav li > a\",this.offsets=a([]),this.targets=a([]),this.activeTarget=null,this.refresh(),this.process()}b.DEFAULTS={offset:10},b.prototype.refresh=function(){var b=this.$element[0]==window?\"offset\":\"position\";this.offsets=a([]),this.targets=a([]);var c=this;this.$body.find(this.selector).map(function(){var d=a(this),e=d.data(\"target\")||d.attr(\"href\"),f=/^#\\w/.test(e)&&a(e);return f&&f.length&&[[f[b]().top+(!a.isWindow(c.$scrollElement.get(0))&&c.$scrollElement.scrollTop()),e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){c.offsets.push(this[0]),c.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,d=c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(b>=d)return g!=(a=f.last()[0])&&this.activate(a);for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(!e[a+1]||b<=e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,a(this.selector).parents(\".active\").removeClass(\"active\");var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");d.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),d.trigger(\"activate\")};var c=a.fn.scrollspy;a.fn.scrollspy=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})},a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=c,this},a(window).on(\"load\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);b.scrollspy(b.data())})})}(window.jQuery),+function(a){\"use strict\";var b=function(b){this.element=a(b)};b.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.attr(\"data-target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\")[0],f=a.Event(\"show.bs.tab\",{relatedTarget:e});if(b.trigger(f),!f.isDefaultPrevented()){var g=a(d);this.activate(b.parent(\"li\"),c),this.activate(g,g.parent(),function(){b.trigger({type:\"shown.bs.tab\",relatedTarget:e})})}}},b.prototype.activate=function(b,c,d){function e(){f.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\"),b.addClass(\"active\"),g?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\")&&b.closest(\"li.dropdown\").addClass(\"active\"),d&&d()}var f=c.find(\"> .active\"),g=d&&a.support.transition&&f.hasClass(\"fade\");g?f.one(a.support.transition.end,e).emulateTransitionEnd(150):e(),f.removeClass(\"in\")};var c=a.fn.tab;a.fn.tab=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new b(this)),\"string\"==typeof c&&e[c]()})},a.fn.tab.Constructor=b,a.fn.tab.noConflict=function(){return a.fn.tab=c,this},a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"], [data-toggle=\"pill\"]',function(b){b.preventDefault(),a(this).tab(\"show\")})}(window.jQuery),+function(a){\"use strict\";var b=function(c,d){this.options=a.extend({},b.DEFAULTS,d),this.$window=a(window).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(c),this.affixed=this.unpin=null,this.checkPosition()};b.RESET=\"affix affix-top affix-bottom\",b.DEFAULTS={offset:0},b.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},b.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var c=a(document).height(),d=this.$window.scrollTop(),e=this.$element.offset(),f=this.options.offset,g=f.top,h=f.bottom;\"object\"!=typeof f&&(h=g=f),\"function\"==typeof g&&(g=f.top()),\"function\"==typeof h&&(h=f.bottom());var i=null!=this.unpin&&d+this.unpin<=e.top?!1:null!=h&&e.top+this.$element.height()>=c-h?\"bottom\":null!=g&&g>=d?\"top\":!1;this.affixed!==i&&(this.unpin&&this.$element.css(\"top\",\"\"),this.affixed=i,this.unpin=\"bottom\"==i?e.top-d:null,this.$element.removeClass(b.RESET).addClass(\"affix\"+(i?\"-\"+i:\"\")),\"bottom\"==i&&this.$element.offset({top:document.body.offsetHeight-h-this.$element.height()}))}};var c=a.fn.affix;a.fn.affix=function(c){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.affix\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})},a.fn.affix.Constructor=b,a.fn.affix.noConflict=function(){return a.fn.affix=c,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var b=a(this),c=b.data();c.offset=c.offset||{},c.offsetBottom&&(c.offset.bottom=c.offsetBottom),c.offsetTop&&(c.offset.top=c.offsetTop),b.affix(c)})})}(window.jQuery);","(function(){var t=this;var e=t.Backbone;var i=[];var r=i.push;var s=i.slice;var n=i.splice;var a;if(typeof exports!==\"undefined\"){a=exports}else{a=t.Backbone={}}a.VERSION=\"1.1.0\";var h=t._;if(!h&&typeof require!==\"undefined\")h=require(\"underscore\");a.$=t.jQuery||t.Zepto||t.ender||t.$;a.noConflict=function(){t.Backbone=e;return this};a.emulateHTTP=false;a.emulateJSON=false;var o=a.Events={on:function(t,e,i){if(!l(this,\"on\",t,[e,i])||!e)return this;this._events||(this._events={});var r=this._events[t]||(this._events[t]=[]);r.push({callback:e,context:i,ctx:i||this});return this},once:function(t,e,i){if(!l(this,\"once\",t,[e,i])||!e)return this;var r=this;var s=h.once(function(){r.off(t,s);e.apply(this,arguments)});s._callback=e;return this.on(t,s,i)},off:function(t,e,i){var r,s,n,a,o,u,c,f;if(!this._events||!l(this,\"off\",t,[e,i]))return this;if(!t&&!e&&!i){this._events={};return this}a=t?[t]:h.keys(this._events);for(o=0,u=a.length;o<u;o++){t=a[o];if(n=this._events[t]){this._events[t]=r=[];if(e||i){for(c=0,f=n.length;c<f;c++){s=n[c];if(e&&e!==s.callback&&e!==s.callback._callback||i&&i!==s.context){r.push(s)}}}if(!r.length)delete this._events[t]}}return this},trigger:function(t){if(!this._events)return this;var e=s.call(arguments,1);if(!l(this,\"trigger\",t,e))return this;var i=this._events[t];var r=this._events.all;if(i)c(i,e);if(r)c(r,arguments);return this},stopListening:function(t,e,i){var r=this._listeningTo;if(!r)return this;var s=!e&&!i;if(!i&&typeof e===\"object\")i=this;if(t)(r={})[t._listenId]=t;for(var n in r){t=r[n];t.off(e,i,this);if(s||h.isEmpty(t._events))delete this._listeningTo[n]}return this}};var u=/\\s+/;var l=function(t,e,i,r){if(!i)return true;if(typeof i===\"object\"){for(var s in i){t[e].apply(t,[s,i[s]].concat(r))}return false}if(u.test(i)){var n=i.split(u);for(var a=0,h=n.length;a<h;a++){t[e].apply(t,[n[a]].concat(r))}return false}return true};var c=function(t,e){var i,r=-1,s=t.length,n=e[0],a=e[1],h=e[2];switch(e.length){case 0:while(++r<s)(i=t[r]).callback.call(i.ctx);return;case 1:while(++r<s)(i=t[r]).callback.call(i.ctx,n);return;case 2:while(++r<s)(i=t[r]).callback.call(i.ctx,n,a);return;case 3:while(++r<s)(i=t[r]).callback.call(i.ctx,n,a,h);return;default:while(++r<s)(i=t[r]).callback.apply(i.ctx,e)}};var f={listenTo:\"on\",listenToOnce:\"once\"};h.each(f,function(t,e){o[e]=function(e,i,r){var s=this._listeningTo||(this._listeningTo={});var n=e._listenId||(e._listenId=h.uniqueId(\"l\"));s[n]=e;if(!r&&typeof i===\"object\")r=this;e[t](i,r,this);return this}});o.bind=o.on;o.unbind=o.off;h.extend(a,o);var d=a.Model=function(t,e){var i=t||{};e||(e={});this.cid=h.uniqueId(\"c\");this.attributes={};if(e.collection)this.collection=e.collection;if(e.parse)i=this.parse(i,e)||{};i=h.defaults({},i,h.result(this,\"defaults\"));this.set(i,e);this.changed={};this.initialize.apply(this,arguments)};h.extend(d.prototype,o,{changed:null,validationError:null,idAttribute:\"id\",initialize:function(){},toJSON:function(t){return h.clone(this.attributes)},sync:function(){return a.sync.apply(this,arguments)},get:function(t){return this.attributes[t]},escape:function(t){return h.escape(this.get(t))},has:function(t){return this.get(t)!=null},set:function(t,e,i){var r,s,n,a,o,u,l,c;if(t==null)return this;if(typeof t===\"object\"){s=t;i=e}else{(s={})[t]=e}i||(i={});if(!this._validate(s,i))return false;n=i.unset;o=i.silent;a=[];u=this._changing;this._changing=true;if(!u){this._previousAttributes=h.clone(this.attributes);this.changed={}}c=this.attributes,l=this._previousAttributes;if(this.idAttribute in s)this.id=s[this.idAttribute];for(r in s){e=s[r];if(!h.isEqual(c[r],e))a.push(r);if(!h.isEqual(l[r],e)){this.changed[r]=e}else{delete this.changed[r]}n?delete c[r]:c[r]=e}if(!o){if(a.length)this._pending=true;for(var f=0,d=a.length;f<d;f++){this.trigger(\"change:\"+a[f],this,c[a[f]],i)}}if(u)return this;if(!o){while(this._pending){this._pending=false;this.trigger(\"change\",this,i)}}this._pending=false;this._changing=false;return this},unset:function(t,e){return this.set(t,void 0,h.extend({},e,{unset:true}))},clear:function(t){var e={};for(var i in this.attributes)e[i]=void 0;return this.set(e,h.extend({},t,{unset:true}))},hasChanged:function(t){if(t==null)return!h.isEmpty(this.changed);return h.has(this.changed,t)},changedAttributes:function(t){if(!t)return this.hasChanged()?h.clone(this.changed):false;var e,i=false;var r=this._changing?this._previousAttributes:this.attributes;for(var s in t){if(h.isEqual(r[s],e=t[s]))continue;(i||(i={}))[s]=e}return i},previous:function(t){if(t==null||!this._previousAttributes)return null;return this._previousAttributes[t]},previousAttributes:function(){return h.clone(this._previousAttributes)},fetch:function(t){t=t?h.clone(t):{};if(t.parse===void 0)t.parse=true;var e=this;var i=t.success;t.success=function(r){if(!e.set(e.parse(r,t),t))return false;if(i)i(e,r,t);e.trigger(\"sync\",e,r,t)};M(this,t);return this.sync(\"read\",this,t)},save:function(t,e,i){var r,s,n,a=this.attributes;if(t==null||typeof t===\"object\"){r=t;i=e}else{(r={})[t]=e}i=h.extend({validate:true},i);if(r&&!i.wait){if(!this.set(r,i))return false}else{if(!this._validate(r,i))return false}if(r&&i.wait){this.attributes=h.extend({},a,r)}if(i.parse===void 0)i.parse=true;var o=this;var u=i.success;i.success=function(t){o.attributes=a;var e=o.parse(t,i);if(i.wait)e=h.extend(r||{},e);if(h.isObject(e)&&!o.set(e,i)){return false}if(u)u(o,t,i);o.trigger(\"sync\",o,t,i)};M(this,i);s=this.isNew()?\"create\":i.patch?\"patch\":\"update\";if(s===\"patch\")i.attrs=r;n=this.sync(s,this,i);if(r&&i.wait)this.attributes=a;return n},destroy:function(t){t=t?h.clone(t):{};var e=this;var i=t.success;var r=function(){e.trigger(\"destroy\",e,e.collection,t)};t.success=function(s){if(t.wait||e.isNew())r();if(i)i(e,s,t);if(!e.isNew())e.trigger(\"sync\",e,s,t)};if(this.isNew()){t.success();return false}M(this,t);var s=this.sync(\"delete\",this,t);if(!t.wait)r();return s},url:function(){var t=h.result(this,\"urlRoot\")||h.result(this.collection,\"url\")||U();if(this.isNew())return t;return t+(t.charAt(t.length-1)===\"/\"?\"\":\"/\")+encodeURIComponent(this.id)},parse:function(t,e){return t},clone:function(){return new this.constructor(this.attributes)},isNew:function(){return this.id==null},isValid:function(t){return this._validate({},h.extend(t||{},{validate:true}))},_validate:function(t,e){if(!e.validate||!this.validate)return true;t=h.extend({},this.attributes,t);var i=this.validationError=this.validate(t,e)||null;if(!i)return true;this.trigger(\"invalid\",this,i,h.extend(e,{validationError:i}));return false}});var p=[\"keys\",\"values\",\"pairs\",\"invert\",\"pick\",\"omit\"];h.each(p,function(t){d.prototype[t]=function(){var e=s.call(arguments);e.unshift(this.attributes);return h[t].apply(h,e)}});var v=a.Collection=function(t,e){e||(e={});if(e.model)this.model=e.model;if(e.comparator!==void 0)this.comparator=e.comparator;this._reset();this.initialize.apply(this,arguments);if(t)this.reset(t,h.extend({silent:true},e))};var g={add:true,remove:true,merge:true};var m={add:true,remove:false};h.extend(v.prototype,o,{model:d,initialize:function(){},toJSON:function(t){return this.map(function(e){return e.toJSON(t)})},sync:function(){return a.sync.apply(this,arguments)},add:function(t,e){return this.set(t,h.extend({merge:false},e,m))},remove:function(t,e){var i=!h.isArray(t);t=i?[t]:h.clone(t);e||(e={});var r,s,n,a;for(r=0,s=t.length;r<s;r++){a=t[r]=this.get(t[r]);if(!a)continue;delete this._byId[a.id];delete this._byId[a.cid];n=this.indexOf(a);this.models.splice(n,1);this.length--;if(!e.silent){e.index=n;a.trigger(\"remove\",a,this,e)}this._removeReference(a)}return i?t[0]:t},set:function(t,e){e=h.defaults({},e,g);if(e.parse)t=this.parse(t,e);var i=!h.isArray(t);t=i?t?[t]:[]:h.clone(t);var r,s,n,a,o,u,l;var c=e.at;var f=this.model;var p=this.comparator&&c==null&&e.sort!==false;var v=h.isString(this.comparator)?this.comparator:null;var m=[],y=[],_={};var w=e.add,b=e.merge,x=e.remove;var E=!p&&w&&x?[]:false;for(r=0,s=t.length;r<s;r++){o=t[r];if(o instanceof d){n=a=o}else{n=o[f.prototype.idAttribute]}if(u=this.get(n)){if(x)_[u.cid]=true;if(b){o=o===a?a.attributes:o;if(e.parse)o=u.parse(o,e);u.set(o,e);if(p&&!l&&u.hasChanged(v))l=true}t[r]=u}else if(w){a=t[r]=this._prepareModel(o,e);if(!a)continue;m.push(a);a.on(\"all\",this._onModelEvent,this);this._byId[a.cid]=a;if(a.id!=null)this._byId[a.id]=a}if(E)E.push(u||a)}if(x){for(r=0,s=this.length;r<s;++r){if(!_[(a=this.models[r]).cid])y.push(a)}if(y.length)this.remove(y,e)}if(m.length||E&&E.length){if(p)l=true;this.length+=m.length;if(c!=null){for(r=0,s=m.length;r<s;r++){this.models.splice(c+r,0,m[r])}}else{if(E)this.models.length=0;var T=E||m;for(r=0,s=T.length;r<s;r++){this.models.push(T[r])}}}if(l)this.sort({silent:true});if(!e.silent){for(r=0,s=m.length;r<s;r++){(a=m[r]).trigger(\"add\",a,this,e)}if(l||E&&E.length)this.trigger(\"sort\",this,e)}return i?t[0]:t},reset:function(t,e){e||(e={});for(var i=0,r=this.models.length;i<r;i++){this._removeReference(this.models[i])}e.previousModels=this.models;this._reset();t=this.add(t,h.extend({silent:true},e));if(!e.silent)this.trigger(\"reset\",this,e);return t},push:function(t,e){return this.add(t,h.extend({at:this.length},e))},pop:function(t){var e=this.at(this.length-1);this.remove(e,t);return e},unshift:function(t,e){return this.add(t,h.extend({at:0},e))},shift:function(t){var e=this.at(0);this.remove(e,t);return e},slice:function(){return s.apply(this.models,arguments)},get:function(t){if(t==null)return void 0;return this._byId[t.id]||this._byId[t.cid]||this._byId[t]},at:function(t){return this.models[t]},where:function(t,e){if(h.isEmpty(t))return e?void 0:[];return this[e?\"find\":\"filter\"](function(e){for(var i in t){if(t[i]!==e.get(i))return false}return true})},findWhere:function(t){return this.where(t,true)},sort:function(t){if(!this.comparator)throw new Error(\"Cannot sort a set without a comparator\");t||(t={});if(h.isString(this.comparator)||this.comparator.length===1){this.models=this.sortBy(this.comparator,this)}else{this.models.sort(h.bind(this.comparator,this))}if(!t.silent)this.trigger(\"sort\",this,t);return this},pluck:function(t){return h.invoke(this.models,\"get\",t)},fetch:function(t){t=t?h.clone(t):{};if(t.parse===void 0)t.parse=true;var e=t.success;var i=this;t.success=function(r){var s=t.reset?\"reset\":\"set\";i[s](r,t);if(e)e(i,r,t);i.trigger(\"sync\",i,r,t)};M(this,t);return this.sync(\"read\",this,t)},create:function(t,e){e=e?h.clone(e):{};if(!(t=this._prepareModel(t,e)))return false;if(!e.wait)this.add(t,e);var i=this;var r=e.success;e.success=function(t,e,s){if(s.wait)i.add(t,s);if(r)r(t,e,s)};t.save(null,e);return t},parse:function(t,e){return t},clone:function(){return new this.constructor(this.models)},_reset:function(){this.length=0;this.models=[];this._byId={}},_prepareModel:function(t,e){if(t instanceof d){if(!t.collection)t.collection=this;return t}e=e?h.clone(e):{};e.collection=this;var i=new this.model(t,e);if(!i.validationError)return i;this.trigger(\"invalid\",this,i.validationError,e);return false},_removeReference:function(t){if(this===t.collection)delete t.collection;t.off(\"all\",this._onModelEvent,this)},_onModelEvent:function(t,e,i,r){if((t===\"add\"||t===\"remove\")&&i!==this)return;if(t===\"destroy\")this.remove(e,r);if(e&&t===\"change:\"+e.idAttribute){delete this._byId[e.previous(e.idAttribute)];if(e.id!=null)this._byId[e.id]=e}this.trigger.apply(this,arguments)}});var y=[\"forEach\",\"each\",\"map\",\"collect\",\"reduce\",\"foldl\",\"inject\",\"reduceRight\",\"foldr\",\"find\",\"detect\",\"filter\",\"select\",\"reject\",\"every\",\"all\",\"some\",\"any\",\"include\",\"contains\",\"invoke\",\"max\",\"min\",\"toArray\",\"size\",\"first\",\"head\",\"take\",\"initial\",\"rest\",\"tail\",\"drop\",\"last\",\"without\",\"difference\",\"indexOf\",\"shuffle\",\"lastIndexOf\",\"isEmpty\",\"chain\"];h.each(y,function(t){v.prototype[t]=function(){var e=s.call(arguments);e.unshift(this.models);return h[t].apply(h,e)}});var _=[\"groupBy\",\"countBy\",\"sortBy\"];h.each(_,function(t){v.prototype[t]=function(e,i){var r=h.isFunction(e)?e:function(t){return t.get(e)};return h[t](this.models,r,i)}});var w=a.View=function(t){this.cid=h.uniqueId(\"view\");t||(t={});h.extend(this,h.pick(t,x));this._ensureElement();this.initialize.apply(this,arguments);this.delegateEvents()};var b=/^(\\S+)\\s*(.*)$/;var x=[\"model\",\"collection\",\"el\",\"id\",\"attributes\",\"className\",\"tagName\",\"events\"];h.extend(w.prototype,o,{tagName:\"div\",$:function(t){return this.$el.find(t)},initialize:function(){},render:function(){return this},remove:function(){this.$el.remove();this.stopListening();return this},setElement:function(t,e){if(this.$el)this.undelegateEvents();this.$el=t instanceof a.$?t:a.$(t);this.el=this.$el[0];if(e!==false)this.delegateEvents();return this},delegateEvents:function(t){if(!(t||(t=h.result(this,\"events\"))))return this;this.undelegateEvents();for(var e in t){var i=t[e];if(!h.isFunction(i))i=this[t[e]];if(!i)continue;var r=e.match(b);var s=r[1],n=r[2];i=h.bind(i,this);s+=\".delegateEvents\"+this.cid;if(n===\"\"){this.$el.on(s,i)}else{this.$el.on(s,n,i)}}return this},undelegateEvents:function(){this.$el.off(\".delegateEvents\"+this.cid);return this},_ensureElement:function(){if(!this.el){var t=h.extend({},h.result(this,\"attributes\"));if(this.id)t.id=h.result(this,\"id\");if(this.className)t[\"class\"]=h.result(this,\"className\");var e=a.$(\"<\"+h.result(this,\"tagName\")+\">\").attr(t);this.setElement(e,false)}else{this.setElement(h.result(this,\"el\"),false)}}});a.sync=function(t,e,i){var r=T[t];h.defaults(i||(i={}),{emulateHTTP:a.emulateHTTP,emulateJSON:a.emulateJSON});var s={type:r,dataType:\"json\"};if(!i.url){s.url=h.result(e,\"url\")||U()}if(i.data==null&&e&&(t===\"create\"||t===\"update\"||t===\"patch\")){s.contentType=\"application/json\";s.data=JSON.stringify(i.attrs||e.toJSON(i))}if(i.emulateJSON){s.contentType=\"application/x-www-form-urlencoded\";s.data=s.data?{model:s.data}:{}}if(i.emulateHTTP&&(r===\"PUT\"||r===\"DELETE\"||r===\"PATCH\")){s.type=\"POST\";if(i.emulateJSON)s.data._method=r;var n=i.beforeSend;i.beforeSend=function(t){t.setRequestHeader(\"X-HTTP-Method-Override\",r);if(n)return n.apply(this,arguments)}}if(s.type!==\"GET\"&&!i.emulateJSON){s.processData=false}if(s.type===\"PATCH\"&&E){s.xhr=function(){return new ActiveXObject(\"Microsoft.XMLHTTP\")}}var o=i.xhr=a.ajax(h.extend(s,i));e.trigger(\"request\",e,o,i);return o};var E=typeof window!==\"undefined\"&&!!window.ActiveXObject&&!(window.XMLHttpRequest&&(new XMLHttpRequest).dispatchEvent);var T={create:\"POST\",update:\"PUT\",patch:\"PATCH\",\"delete\":\"DELETE\",read:\"GET\"};a.ajax=function(){return a.$.ajax.apply(a.$,arguments)};var k=a.Router=function(t){t||(t={});if(t.routes)this.routes=t.routes;this._bindRoutes();this.initialize.apply(this,arguments)};var S=/\\((.*?)\\)/g;var $=/(\\(\\?)?:\\w+/g;var H=/\\*\\w+/g;var A=/[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;h.extend(k.prototype,o,{initialize:function(){},route:function(t,e,i){if(!h.isRegExp(t))t=this._routeToRegExp(t);if(h.isFunction(e)){i=e;e=\"\"}if(!i)i=this[e];var r=this;a.history.route(t,function(s){var n=r._extractParameters(t,s);i&&i.apply(r,n);r.trigger.apply(r,[\"route:\"+e].concat(n));r.trigger(\"route\",e,n);a.history.trigger(\"route\",r,e,n)});return this},navigate:function(t,e){a.history.navigate(t,e);return this},_bindRoutes:function(){if(!this.routes)return;this.routes=h.result(this,\"routes\");var t,e=h.keys(this.routes);while((t=e.pop())!=null){this.route(t,this.routes[t])}},_routeToRegExp:function(t){t=t.replace(A,\"\\\\$&\").replace(S,\"(?:$1)?\").replace($,function(t,e){return e?t:\"([^/]+)\"}).replace(H,\"(.*?)\");return new RegExp(\"^\"+t+\"$\")},_extractParameters:function(t,e){var i=t.exec(e).slice(1);return h.map(i,function(t){return t?decodeURIComponent(t):null})}});var I=a.History=function(){this.handlers=[];h.bindAll(this,\"checkUrl\");if(typeof window!==\"undefined\"){this.location=window.location;this.history=window.history}};var N=/^[#\\/]|\\s+$/g;var O=/^\\/+|\\/+$/g;var P=/msie [\\w.]+/;var C=/\\/$/;var j=/[?#].*$/;I.started=false;h.extend(I.prototype,o,{interval:50,getHash:function(t){var e=(t||this).location.href.match(/#(.*)$/);return e?e[1]:\"\"},getFragment:function(t,e){if(t==null){if(this._hasPushState||!this._wantsHashChange||e){t=this.location.pathname;var i=this.root.replace(C,\"\");if(!t.indexOf(i))t=t.slice(i.length)}else{t=this.getHash()}}return t.replace(N,\"\")},start:function(t){if(I.started)throw new Error(\"Backbone.history has already been started\");I.started=true;this.options=h.extend({root:\"/\"},this.options,t);this.root=this.options.root;this._wantsHashChange=this.options.hashChange!==false;this._wantsPushState=!!this.options.pushState;this._hasPushState=!!(this.options.pushState&&this.history&&this.history.pushState);var e=this.getFragment();var i=document.documentMode;var r=P.exec(navigator.userAgent.toLowerCase())&&(!i||i<=7);this.root=(\"/\"+this.root+\"/\").replace(O,\"/\");if(r&&this._wantsHashChange){this.iframe=a.$('<iframe src=\"javascript:0\" tabindex=\"-1\" />').hide().appendTo(\"body\")[0].contentWindow;this.navigate(e)}if(this._hasPushState){a.$(window).on(\"popstate\",this.checkUrl)}else if(this._wantsHashChange&&\"onhashchange\"in window&&!r){a.$(window).on(\"hashchange\",this.checkUrl)}else if(this._wantsHashChange){this._checkUrlInterval=setInterval(this.checkUrl,this.interval)}this.fragment=e;var s=this.location;var n=s.pathname.replace(/[^\\/]$/,\"$&/\")===this.root;if(this._wantsHashChange&&this._wantsPushState){if(!this._hasPushState&&!n){this.fragment=this.getFragment(null,true);this.location.replace(this.root+this.location.search+\"#\"+this.fragment);return true}else if(this._hasPushState&&n&&s.hash){this.fragment=this.getHash().replace(N,\"\");this.history.replaceState({},document.title,this.root+this.fragment+s.search)}}if(!this.options.silent)return this.loadUrl()},stop:function(){a.$(window).off(\"popstate\",this.checkUrl).off(\"hashchange\",this.checkUrl);clearInterval(this._checkUrlInterval);I.started=false},route:function(t,e){this.handlers.unshift({route:t,callback:e})},checkUrl:function(t){var e=this.getFragment();if(e===this.fragment&&this.iframe){e=this.getFragment(this.getHash(this.iframe))}if(e===this.fragment)return false;if(this.iframe)this.navigate(e);this.loadUrl()},loadUrl:function(t){t=this.fragment=this.getFragment(t);return h.any(this.handlers,function(e){if(e.route.test(t)){e.callback(t);return true}})},navigate:function(t,e){if(!I.started)return false;if(!e||e===true)e={trigger:!!e};var i=this.root+(t=this.getFragment(t||\"\"));t=t.replace(j,\"\");if(this.fragment===t)return;this.fragment=t;if(t===\"\"&&i!==\"/\")i=i.slice(0,-1);if(this._hasPushState){this.history[e.replace?\"replaceState\":\"pushState\"]({},document.title,i)}else if(this._wantsHashChange){this._updateHash(this.location,t,e.replace);if(this.iframe&&t!==this.getFragment(this.getHash(this.iframe))){if(!e.replace)this.iframe.document.open().close();this._updateHash(this.iframe.location,t,e.replace)}}else{return this.location.assign(i)}if(e.trigger)return this.loadUrl(t)},_updateHash:function(t,e,i){if(i){var r=t.href.replace(/(javascript:|#).*$/,\"\");t.replace(r+\"#\"+e)}else{t.hash=\"#\"+e}}});a.history=new I;var R=function(t,e){var i=this;var r;if(t&&h.has(t,\"constructor\")){r=t.constructor}else{r=function(){return i.apply(this,arguments)}}h.extend(r,i,e);var s=function(){this.constructor=r};s.prototype=i.prototype;r.prototype=new s;if(t)h.extend(r.prototype,t);r.__super__=i.prototype;return r};d.extend=v.extend=k.extend=w.extend=I.extend=R;var U=function(){throw new Error('A \"url\" property or function must be specified')};var M=function(t,e){var i=e.error;e.error=function(r){if(i)i(t,r,e);t.trigger(\"error\",t,r,e)}}}).call(this);\n//# sourceMappingURL=backbone-min.map","!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.jade=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = function merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n  var ac = a['class'];\n  var bc = b['class'];\n\n  if (ac || bc) {\n    ac = ac || [];\n    bc = bc || [];\n    if (!Array.isArray(ac)) ac = [ac];\n    if (!Array.isArray(bc)) bc = [bc];\n    a['class'] = ac.concat(bc).filter(nulls);\n  }\n\n  for (var key in b) {\n    if (key != 'class') {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n\n/**\n * Filter null `val`s.\n *\n * @param {*} val\n * @return {Boolean}\n * @api private\n */\n\nfunction nulls(val) {\n  return val != null && val !== '';\n}\n\n/**\n * join array as classes.\n *\n * @param {*} val\n * @return {String}\n */\nexports.joinClasses = joinClasses;\nfunction joinClasses(val) {\n  return Array.isArray(val) ? val.map(joinClasses).filter(nulls).join(' ') : val;\n}\n\n/**\n * Render the given classes.\n *\n * @param {Array} classes\n * @param {Array.<Boolean>} escaped\n * @return {String}\n */\nexports.cls = function cls(classes, escaped) {\n  var buf = [];\n  for (var i = 0; i < classes.length; i++) {\n    if (escaped && escaped[i]) {\n      buf.push(exports.escape(joinClasses([classes[i]])));\n    } else {\n      buf.push(joinClasses(classes[i]));\n    }\n  }\n  var text = joinClasses(buf);\n  if (text.length) {\n    return ' class=\"' + text + '\"';\n  } else {\n    return '';\n  }\n};\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = function attr(key, val, escaped, terse) {\n  if ('boolean' == typeof val || null == val) {\n    if (val) {\n      return ' ' + (terse ? key : key + '=\"' + key + '\"');\n    } else {\n      return '';\n    }\n  } else if (0 == key.indexOf('data') && 'string' != typeof val) {\n    return ' ' + key + \"='\" + JSON.stringify(val).replace(/'/g, '&apos;') + \"'\";\n  } else if (escaped) {\n    return ' ' + key + '=\"' + exports.escape(val) + '\"';\n  } else {\n    return ' ' + key + '=\"' + val + '\"';\n  }\n};\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} escaped\n * @return {String}\n */\nexports.attrs = function attrs(obj, terse){\n  var buf = [];\n\n  var keys = Object.keys(obj);\n\n  if (keys.length) {\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i]\n        , val = obj[key];\n\n      if ('class' == key) {\n        if (val = joinClasses(val)) {\n          buf.push(' ' + key + '=\"' + val + '\"');\n        }\n      } else {\n        buf.push(exports.attr(key, val, false, terse));\n      }\n    }\n  }\n\n  return buf.join('');\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function escape(html){\n  var result = String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n  if (result === '' + html) return html;\n  else return result;\n};\n\n/**\n * Re-throw the given `err` in context to the\n * the jade in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @api private\n */\n\nexports.rethrow = function rethrow(err, filename, lineno, str){\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str =  str || require('fs').readFileSync(filename, 'utf8')\n  } catch (ex) {\n    rethrow(err, null, lineno)\n  }\n  var context = 3\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Jade') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n};\n\n},{\"fs\":2}],2:[function(require,module,exports){\n\n},{}]},{},[1])\n(1)\n});","//     Backbone.js 1.2.0\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define(['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var slice = array.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.0';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`), reducing them by manipulating `memo`.\n  // Passes a normalized single event name and callback, as well as any\n  // optional `opts`.\n  var eventsApi = function(iteratee, memo, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      for (names = _.keys(name); i < names.length ; i++) {\n        memo = iteratee(memo, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        memo = iteratee(memo, names[i], callback, opts);\n      }\n    } else {\n      memo = iteratee(memo, name, callback, opts);\n    }\n    return memo;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // An internal use `on` function, used to guard the `listening` argument from\n  // the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    // No events to consider.\n    if (!events) return;\n\n    var i = 0, length, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed. When multiple events are\n  // passed in using the space-separated syntax, the event will fire once for every\n  // event you passed in, not once for a combination of all events\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it as been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Proxy Underscore methods to a Backbone class' prototype using a\n  // particular attribute as the data argument\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], iteratee, context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], iteratee, defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes, wait;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n      wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.id || this.attributes[this.idAttribute];\n      return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models), removed;\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : models.slice();\n      var id, model, attrs, existing, sort;\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n      var orderChanged = false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (var i = 0; i < models.length; i++) {\n        attrs = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(attrs)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge && attrs !== existing) {\n            attrs = this._isModel(attrs) ? attrs.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (!model) continue;\n        id = this.modelId(model.attributes);\n        if (order && (model.isNew() || !modelMap[id])) {\n          order.push(model);\n\n          // Check to see if this is actually a new model at this index.\n          orderChanged = orderChanged || !this.models[i] || model.cid !== this.models[i].cid;\n        }\n\n        modelMap[id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (var i = 0; i < this.length; i++) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || orderChanged) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (var i = 0; i < toAdd.length; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (var i = 0; i < orderedModels.length; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        var addOpts = at != null ? _.clone(options) : options;\n        for (var i = 0; i < toAdd.length; i++) {\n          if (at != null) addOpts.index = at + i;\n          (model = toAdd[i]).trigger('add', model, this, addOpts);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      var matches = _.matches(attrs);\n      return this[first ? 'find' : 'filter'](function(model) {\n        return matches(model.attributes);\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set. Does not trigger any\n    // additional events. Returns true if anything was actually removed.\n    _removeModels: function(models, options) {\n      var i, l, index, model, removed = false;\n      for (var i = 0, j = 0; i < models.length; i++) {\n        var model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n        delete this._byId[model.cid];\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        models[j++] = model;\n        this._removeReference(model, options);\n        removed = true;\n      }\n      // We only need to slice if models array should be smaller, which is\n      // caused by some models not actually getting removed.\n      if (models.length !== j) models = models.slice(0, j);\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 2,\n      contains: 2, invoke: 2, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3 };\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    if (!_[method]) return;\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window;\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        var iframe = document.createElement('iframe');\n        iframe.src = 'javascript:0';\n        iframe.style.display = 'none';\n        iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        this.iframe = body.insertBefore(iframe, body.firstChild).contentWindow;\n        this.iframe.document.open().close();\n        this.iframe.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe.frameElement);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","/**\n * @summary     DataTables\n * @description Paginate, search and sort HTML tables\n * @version     1.9.4\n * @file        jquery.dataTables.js\n * @author      Allan Jardine (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n *\n * @copyright Copyright 2008-2012 Allan Jardine, all rights reserved.\n *\n * This source file is free software, under either the GPL v2 license or a\n * BSD style license, available at:\n *   http://datatables.net/license_gpl2\n *   http://datatables.net/license_bsd\n * \n * This source file is distributed in the hope that it will be useful, but \n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n * \n * For details please refer to: http://www.datatables.net\n */\n\n/*jslint evil: true, undef: true, browser: true */\n/*globals $, jQuery,define,_fnExternApiFunc,_fnInitialise,_fnInitComplete,_fnLanguageCompat,_fnAddColumn,_fnColumnOptions,_fnAddData,_fnCreateTr,_fnGatherData,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnServerParams,_fnAddOptionsHtml,_fnFeatureHtmlTable,_fnScrollDraw,_fnAdjustColumnSizing,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnBuildSearchArray,_fnBuildSearchRow,_fnFilterCreateSearch,_fnDataToSearch,_fnSort,_fnSortAttachListener,_fnSortingClasses,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnFeatureHtmlLength,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnNodeToDataIndex,_fnVisbleColumns,_fnCalculateEnd,_fnConvertToWidth,_fnCalculateColumnWidths,_fnScrollingWidthAdjust,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnDetectType,_fnSettingsFromNode,_fnGetDataMaster,_fnGetTrNodes,_fnGetTdNodes,_fnEscapeRegex,_fnDeleteIndex,_fnReOrderIndex,_fnColumnOrdering,_fnLog,_fnClearTable,_fnSaveState,_fnLoadState,_fnCreateCookie,_fnReadCookie,_fnDetectHeader,_fnGetUniqueThs,_fnScrollBarWidth,_fnApplyToChildren,_fnMap,_fnGetRowData,_fnGetCellData,_fnSetCellData,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnApplyColumnDefs,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnJsonString,_fnRender,_fnNodeToColumnIndex,_fnInfoMacros,_fnBrowserDetect,_fnGetColumns*/\n\n(/** @lends <global> */function( window, document, undefined ) {\n\n(function( factory ) {\n\t\"use strict\";\n\n\t// Define as an AMD module if possible\n\tif ( typeof define === 'function' && define.amd )\n\t{\n\t\tdefine( ['jquery'], factory );\n\t}\n\t/* Define using browser globals otherwise\n\t * Prevent multiple instantiations if the script is loaded twice\n\t */\n\telse if ( jQuery && !jQuery.fn.dataTable )\n\t{\n\t\tfactory( jQuery );\n\t}\n}\n(/** @lends <global> */function( $ ) {\n\t\"use strict\";\n\t/** \n\t * DataTables is a plug-in for the jQuery Javascript library. It is a \n\t * highly flexible tool, based upon the foundations of progressive \n\t * enhancement, which will add advanced interaction controls to any \n\t * HTML table. For a full list of features please refer to\n\t * <a href=\"http://datatables.net\">DataTables.net</a>.\n\t *\n\t * Note that the <i>DataTable</i> object is not a global variable but is\n\t * aliased to <i>jQuery.fn.DataTable</i> and <i>jQuery.fn.dataTable</i> through which \n\t * it may be  accessed.\n\t *\n\t *  @class\n\t *  @param {object} [oInit={}] Configuration object for DataTables. Options\n\t *    are defined by {@link DataTable.defaults}\n\t *  @requires jQuery 1.3+\n\t * \n\t *  @example\n\t *    // Basic initialisation\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable();\n\t *    } );\n\t *  \n\t *  @example\n\t *    // Initialisation with configuration options - in this case, disable\n\t *    // pagination and sorting.\n\t *    $(document).ready( function {\n\t *      $('#example').dataTable( {\n\t *        \"bPaginate\": false,\n\t *        \"bSort\": false \n\t *      } );\n\t *    } );\n\t */\n\tvar DataTable = function( oInit )\n\t{\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a column to the list used for the table with default values\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} nTh The th element for this column\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAddColumn( oSettings, nTh )\n\t\t{\n\t\t\tvar oDefaults = DataTable.defaults.columns;\n\t\t\tvar iCol = oSettings.aoColumns.length;\n\t\t\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\t\t\"sSortingClass\": oSettings.oClasses.sSortable,\n\t\t\t\t\"sSortingClassJUI\": oSettings.oClasses.sSortJUI,\n\t\t\t\t\"nTh\": nTh ? nTh : document.createElement('th'),\n\t\t\t\t\"sTitle\":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',\n\t\t\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\t\t\"mData\": oDefaults.mData ? oDefaults.oDefaults : iCol\n\t\t\t} );\n\t\t\toSettings.aoColumns.push( oCol );\n\t\t\t\n\t\t\t/* Add a column specific filter */\n\t\t\tif ( oSettings.aoPreSearchCols[ iCol ] === undefined || oSettings.aoPreSearchCols[ iCol ] === null )\n\t\t\t{\n\t\t\t\toSettings.aoPreSearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar oPre = oSettings.aoPreSearchCols[ iCol ];\n\t\t\t\t\n\t\t\t\t/* Don't require that the user must specify bRegex, bSmart or bCaseInsensitive */\n\t\t\t\tif ( oPre.bRegex === undefined )\n\t\t\t\t{\n\t\t\t\t\toPre.bRegex = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( oPre.bSmart === undefined )\n\t\t\t\t{\n\t\t\t\t\toPre.bSmart = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( oPre.bCaseInsensitive === undefined )\n\t\t\t\t{\n\t\t\t\t\toPre.bCaseInsensitive = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Use the column options function to initialise classes etc */\n\t\t\t_fnColumnOptions( oSettings, iCol, null );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Apply options for a column\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iCol column index to consider\n\t\t *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnColumnOptions( oSettings, iCol, oOptions )\n\t\t{\n\t\t\tvar oCol = oSettings.aoColumns[ iCol ];\n\t\t\t\n\t\t\t/* User specified column options */\n\t\t\tif ( oOptions !== undefined && oOptions !== null )\n\t\t\t{\n\t\t\t\t/* Backwards compatibility for mDataProp */\n\t\t\t\tif ( oOptions.mDataProp && !oOptions.mData )\n\t\t\t\t{\n\t\t\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( oOptions.sType !== undefined )\n\t\t\t\t{\n\t\t\t\t\toCol.sType = oOptions.sType;\n\t\t\t\t\toCol._bAutoType = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$.extend( oCol, oOptions );\n\t\t\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\t\t\n\t\t\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t\t\t * priority if defined\n\t\t\t\t */\n\t\t\t\tif ( oOptions.iDataSort !== undefined )\n\t\t\t\t{\n\t\t\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t\t\t}\n\t\t\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t\t\t}\n\t\t\n\t\t\t/* Cache the data get and set functions for speed */\n\t\t\tvar mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\t\t\tvar mData = _fnGetObjectDataFn( oCol.mData );\n\t\t\n\t\t\toCol.fnGetData = function (oData, sSpecific) {\n\t\t\t\tvar innerData = mData( oData, sSpecific );\n\t\t\n\t\t\t\tif ( oCol.mRender && (sSpecific && sSpecific !== '') )\n\t\t\t\t{\n\t\t\t\t\treturn mRender( innerData, sSpecific, oData );\n\t\t\t\t}\n\t\t\t\treturn innerData;\n\t\t\t};\n\t\t\toCol.fnSetData = _fnSetObjectDataFn( oCol.mData );\n\t\t\t\n\t\t\t/* Feature sorting overrides column specific when off */\n\t\t\tif ( !oSettings.oFeatures.bSort )\n\t\t\t{\n\t\t\t\toCol.bSortable = false;\n\t\t\t}\n\t\t\t\n\t\t\t/* Check that the class assignment is correct for sorting */\n\t\t\tif ( !oCol.bSortable ||\n\t\t\t\t ($.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1) )\n\t\t\t{\n\t\t\t\toCol.sSortingClass = oSettings.oClasses.sSortableNone;\n\t\t\t\toCol.sSortingClassJUI = \"\";\n\t\t\t}\n\t\t\telse if ( $.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) == -1 )\n\t\t\t{\n\t\t\t\toCol.sSortingClass = oSettings.oClasses.sSortable;\n\t\t\t\toCol.sSortingClassJUI = oSettings.oClasses.sSortJUI;\n\t\t\t}\n\t\t\telse if ( $.inArray('asc', oCol.asSorting) != -1 && $.inArray('desc', oCol.asSorting) == -1 )\n\t\t\t{\n\t\t\t\toCol.sSortingClass = oSettings.oClasses.sSortableAsc;\n\t\t\t\toCol.sSortingClassJUI = oSettings.oClasses.sSortJUIAscAllowed;\n\t\t\t}\n\t\t\telse if ( $.inArray('asc', oCol.asSorting) == -1 && $.inArray('desc', oCol.asSorting) != -1 )\n\t\t\t{\n\t\t\t\toCol.sSortingClass = oSettings.oClasses.sSortableDesc;\n\t\t\t\toCol.sSortingClassJUI = oSettings.oClasses.sSortJUIDescAllowed;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Adjust the table column widths for new data. Note: you would probably want to \n\t\t * do a redraw after calling this function!\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAdjustColumnSizing ( oSettings )\n\t\t{\n\t\t\t/* Not interested in doing column width calculation if auto-width is disabled */\n\t\t\tif ( oSettings.oFeatures.bAutoWidth === false )\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t_fnCalculateColumnWidths( oSettings );\n\t\t\tfor ( var i=0 , iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toSettings.aoColumns[i].nTh.style.width = oSettings.aoColumns[i].sWidth;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Covert the index of a visible column to the index in the data array (take account\n\t\t * of hidden columns)\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iMatch Visible column index to lookup\n\t\t *  @returns {int} i the data index\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n\t\t{\n\t\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\t\n\t\t\treturn typeof aiVis[iMatch] === 'number' ?\n\t\t\t\taiVis[iMatch] :\n\t\t\t\tnull;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Covert the index of an index in the data array and convert it to the visible\n\t\t *   column index (take account of hidden columns)\n\t\t *  @param {int} iMatch Column index to lookup\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {int} i the data index\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnColumnIndexToVisible( oSettings, iMatch )\n\t\t{\n\t\t\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\t\t\tvar iPos = $.inArray( iMatch, aiVis );\n\t\t\n\t\t\treturn iPos !== -1 ? iPos : null;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the number of visible columns\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {int} i the number of visible columns\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnVisbleColumns( oSettings )\n\t\t{\n\t\t\treturn _fnGetColumns( oSettings, 'bVisible' ).length;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of column indexes that match a given property\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sParam Parameter in aoColumns to look for - typically \n\t\t *    bVisible or bSearchable\n\t\t *  @returns {array} Array of indexes with matched properties\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetColumns( oSettings, sParam )\n\t\t{\n\t\t\tvar a = [];\n\t\t\n\t\t\t$.map( oSettings.aoColumns, function(val, i) {\n\t\t\t\tif ( val[sParam] ) {\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t} );\n\t\t\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the sort type based on an input string\n\t\t *  @param {string} sData data we wish to know the type of\n\t\t *  @returns {string} type (defaults to 'string' if no type can be detected)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDetectType( sData )\n\t\t{\n\t\t\tvar aTypes = DataTable.ext.aTypes;\n\t\t\tvar iLen = aTypes.length;\n\t\t\t\n\t\t\tfor ( var i=0 ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar sType = aTypes[i]( sData );\n\t\t\t\tif ( sType !== null )\n\t\t\t\t{\n\t\t\t\t\treturn sType;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn 'string';\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Figure out how to reorder a display list\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns array {int} aiReturn index list for reordering\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnReOrderIndex ( oSettings, sColumns )\n\t\t{\n\t\t\tvar aColumns = sColumns.split(',');\n\t\t\tvar aiReturn = [];\n\t\t\t\n\t\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfor ( var j=0 ; j<iLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aoColumns[i].sName == aColumns[j] )\n\t\t\t\t\t{\n\t\t\t\t\t\taiReturn.push( j );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn aiReturn;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the column ordering that DataTables expects\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {string} comma separated list of names\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnColumnOrdering ( oSettings )\n\t\t{\n\t\t\tvar sNames = '';\n\t\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tsNames += oSettings.aoColumns[i].sName+',';\n\t\t\t}\n\t\t\tif ( sNames.length == iLen )\n\t\t\t{\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\treturn sNames.slice(0, -1);\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Take the column definitions and static columns arrays and calculate how\n\t\t * they relate to column indexes. The callback function will then apply the\n\t\t * definition found for a column to a suitable configuration object.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n\t\t *  @param {array} aoCols The aoColumns array that defines columns individually\n\t\t *  @param {function} fn Callback function - takes two parameters, the calculated\n\t\t *    column index and the definition for that column.\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )\n\t\t{\n\t\t\tvar i, iLen, j, jLen, k, kLen;\n\t\t\n\t\t\t// Column definitions with aTargets\n\t\t\tif ( aoColDefs )\n\t\t\t{\n\t\t\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\t\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t\t\t{\n\t\t\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\t\t\tvar aTargets = aoColDefs[i].aTargets;\n\t\t\t\t\tif ( !$.isArray( aTargets ) )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( oSettings, 1, 'aTargets must be an array of targets, not a '+(typeof aTargets) );\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\t\t\twhile( oSettings.aoColumns.length <= aTargets[j] )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\t\t\tfn( aTargets[j], aoColDefs[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\t\t\tfn( oSettings.aoColumns.length+aTargets[j], aoColDefs[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( typeof aTargets[j] === 'string' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Class name matching on TH element */\n\t\t\t\t\t\t\tfor ( k=0, kLen=oSettings.aoColumns.length ; k<kLen ; k++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif ( aTargets[j] == \"_all\" ||\n\t\t\t\t\t\t\t\t     $(oSettings.aoColumns[k].nTh).hasClass( aTargets[j] ) )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfn( k, aoColDefs[i] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t// Statically defined columns array\n\t\t\tif ( aoCols )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tfn( i, aoCols[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Add a data array to the table, creating DOM node etc. This is the parallel to \n\t\t * _fnGatherData, but for adding rows from a Javascript source, rather than a\n\t\t * DOM source.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {array} aData data array to be added\n\t\t *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAddData ( oSettings, aDataSupplied )\n\t\t{\n\t\t\tvar oCol;\n\t\t\t\n\t\t\t/* Take an independent copy of the data source so we can bash it about as we wish */\n\t\t\tvar aDataIn = ($.isArray(aDataSupplied)) ?\n\t\t\t\taDataSupplied.slice() :\n\t\t\t\t$.extend( true, {}, aDataSupplied );\n\t\t\t\n\t\t\t/* Create the object for storing information about this new row */\n\t\t\tvar iRow = oSettings.aoData.length;\n\t\t\tvar oData = $.extend( true, {}, DataTable.models.oRow );\n\t\t\toData._aData = aDataIn;\n\t\t\toSettings.aoData.push( oData );\n\t\t\n\t\t\t/* Create the cells */\n\t\t\tvar nTd, sThisType;\n\t\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[i];\n\t\t\n\t\t\t\t/* Use rendered data for filtering / sorting */\n\t\t\t\tif ( typeof oCol.fnRender === 'function' && oCol.bUseRendered && oCol.mData !== null )\n\t\t\t\t{\n\t\t\t\t\t_fnSetCellData( oSettings, iRow, i, _fnRender(oSettings, iRow, i) );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnSetCellData( oSettings, iRow, i, _fnGetCellData( oSettings, iRow, i ) );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* See if we should auto-detect the column type */\n\t\t\t\tif ( oCol._bAutoType && oCol.sType != 'string' )\n\t\t\t\t{\n\t\t\t\t\t/* Attempt to auto detect the type - same as _fnGatherData() */\n\t\t\t\t\tvar sVarType = _fnGetCellData( oSettings, iRow, i, 'type' );\n\t\t\t\t\tif ( sVarType !== null && sVarType !== '' )\n\t\t\t\t\t{\n\t\t\t\t\t\tsThisType = _fnDetectType( sVarType );\n\t\t\t\t\t\tif ( oCol.sType === null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toCol.sType = sThisType;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( oCol.sType != sThisType && oCol.sType != \"html\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* String is always the 'fallback' option */\n\t\t\t\t\t\t\toCol.sType = 'string';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Add to the display array */\n\t\t\toSettings.aiDisplayMaster.push( iRow );\n\t\t\n\t\t\t/* Create the DOM information */\n\t\t\tif ( !oSettings.oFeatures.bDeferRender )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iRow );\n\t\t\t}\n\t\t\n\t\t\treturn iRow;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Read in the data from the target table from the DOM\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGatherData( oSettings )\n\t\t{\n\t\t\tvar iLoop, i, iLen, j, jLen, jInner,\n\t\t\t \tnTds, nTrs, nTd, nTr, aLocalData, iThisIndex,\n\t\t\t\tiRow, iRows, iColumn, iColumns, sNodeName,\n\t\t\t\toCol, oData;\n\t\t\t\n\t\t\t/*\n\t\t\t * Process by row first\n\t\t\t * Add the data object for the whole table - storing the tr node. Note - no point in getting\n\t\t\t * DOM based data if we are going to go and replace it with Ajax source data.\n\t\t\t */\n\t\t\tif ( oSettings.bDeferLoading || oSettings.sAjaxSource === null )\n\t\t\t{\n\t\t\t\tnTr = oSettings.nTBody.firstChild;\n\t\t\t\twhile ( nTr )\n\t\t\t\t{\n\t\t\t\t\tif ( nTr.nodeName.toUpperCase() == \"TR\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tiThisIndex = oSettings.aoData.length;\n\t\t\t\t\t\tnTr._DT_RowIndex = iThisIndex;\n\t\t\t\t\t\toSettings.aoData.push( $.extend( true, {}, DataTable.models.oRow, {\n\t\t\t\t\t\t\t\"nTr\": nTr\n\t\t\t\t\t\t} ) );\n\t\t\n\t\t\t\t\t\toSettings.aiDisplayMaster.push( iThisIndex );\n\t\t\t\t\t\tnTd = nTr.firstChild;\n\t\t\t\t\t\tjInner = 0;\n\t\t\t\t\t\twhile ( nTd )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsNodeName = nTd.nodeName.toUpperCase();\n\t\t\t\t\t\t\tif ( sNodeName == \"TD\" || sNodeName == \"TH\" )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_fnSetCellData( oSettings, iThisIndex, jInner, $.trim(nTd.innerHTML) );\n\t\t\t\t\t\t\t\tjInner++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnTd = nTd.nextSibling;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnTr = nTr.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Gather in the TD elements of the Table - note that this is basically the same as\n\t\t\t * fnGetTdNodes, but that function takes account of hidden columns, which we haven't yet\n\t\t\t * setup!\n\t\t\t */\n\t\t\tnTrs = _fnGetTrNodes( oSettings );\n\t\t\tnTds = [];\n\t\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnTd = nTrs[i].firstChild;\n\t\t\t\twhile ( nTd )\n\t\t\t\t{\n\t\t\t\t\tsNodeName = nTd.nodeName.toUpperCase();\n\t\t\t\t\tif ( sNodeName == \"TD\" || sNodeName == \"TH\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTds.push( nTd );\n\t\t\t\t\t}\n\t\t\t\t\tnTd = nTd.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Now process by column */\n\t\t\tfor ( iColumn=0, iColumns=oSettings.aoColumns.length ; iColumn<iColumns ; iColumn++ )\n\t\t\t{\n\t\t\t\toCol = oSettings.aoColumns[iColumn];\n\t\t\n\t\t\t\t/* Get the title of the column - unless there is a user set one */\n\t\t\t\tif ( oCol.sTitle === null )\n\t\t\t\t{\n\t\t\t\t\toCol.sTitle = oCol.nTh.innerHTML;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar\n\t\t\t\t\tbAutoType = oCol._bAutoType,\n\t\t\t\t\tbRender = typeof oCol.fnRender === 'function',\n\t\t\t\t\tbClass = oCol.sClass !== null,\n\t\t\t\t\tbVisible = oCol.bVisible,\n\t\t\t\t\tnCell, sThisType, sRendered, sValType;\n\t\t\t\t\n\t\t\t\t/* A single loop to rule them all (and be more efficient) */\n\t\t\t\tif ( bAutoType || bRender || bClass || !bVisible )\n\t\t\t\t{\n\t\t\t\t\tfor ( iRow=0, iRows=oSettings.aoData.length ; iRow<iRows ; iRow++ )\n\t\t\t\t\t{\n\t\t\t\t\t\toData = oSettings.aoData[iRow];\n\t\t\t\t\t\tnCell = nTds[ (iRow*iColumns) + iColumn ];\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* Type detection */\n\t\t\t\t\t\tif ( bAutoType && oCol.sType != 'string' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsValType = _fnGetCellData( oSettings, iRow, iColumn, 'type' );\n\t\t\t\t\t\t\tif ( sValType !== '' )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsThisType = _fnDetectType( sValType );\n\t\t\t\t\t\t\t\tif ( oCol.sType === null )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\toCol.sType = sThisType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if ( oCol.sType != sThisType && \n\t\t\t\t\t\t\t\t          oCol.sType != \"html\" )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t/* String is always the 'fallback' option */\n\t\t\t\t\t\t\t\t\toCol.sType = 'string';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tif ( oCol.mRender )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// mRender has been defined, so we need to get the value and set it\n\t\t\t\t\t\t\tnCell.innerHTML = _fnGetCellData( oSettings, iRow, iColumn, 'display' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( oCol.mData !== iColumn )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// If mData is not the same as the column number, then we need to\n\t\t\t\t\t\t\t// get the dev set value. If it is the column, no point in wasting\n\t\t\t\t\t\t\t// time setting the value that is already there!\n\t\t\t\t\t\t\tnCell.innerHTML = _fnGetCellData( oSettings, iRow, iColumn, 'display' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* Rendering */\n\t\t\t\t\t\tif ( bRender )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsRendered = _fnRender( oSettings, iRow, iColumn );\n\t\t\t\t\t\t\tnCell.innerHTML = sRendered;\n\t\t\t\t\t\t\tif ( oCol.bUseRendered )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t/* Use the rendered data for filtering / sorting */\n\t\t\t\t\t\t\t\t_fnSetCellData( oSettings, iRow, iColumn, sRendered );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* Classes */\n\t\t\t\t\t\tif ( bClass )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnCell.className += ' '+oCol.sClass;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* Column visibility */\n\t\t\t\t\t\tif ( !bVisible )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toData._anHidden[iColumn] = nCell;\n\t\t\t\t\t\t\tnCell.parentNode.removeChild( nCell );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toData._anHidden[iColumn] = null;\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\t\t\tnCell, _fnGetCellData( oSettings, iRow, iColumn, 'display' ), oData._aData, iRow, iColumn\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Row created callbacks */\n\t\t\tif ( oSettings.aoRowCreatedCallback.length !== 0 )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\toData = oSettings.aoData[i];\n\t\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [oData.nTr, oData._aData, i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Take a TR element and convert it to an index in aoData\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} n the TR element to find\n\t\t *  @returns {int} index if the node is found, null if not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnNodeToDataIndex( oSettings, n )\n\t\t{\n\t\t\treturn (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Take a TD element and convert it into a column data index (not the visible index)\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow The row number the TD/TH can be found in\n\t\t *  @param {node} n The TD/TH element to find\n\t\t *  @returns {int} index if the node is found, -1 if not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnNodeToColumnIndex( oSettings, iRow, n )\n\t\t{\n\t\t\tvar anCells = _fnGetTdNodes( oSettings, iRow );\n\t\t\n\t\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( anCells[i] === n )\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of data for a given row from the internal data cache\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow aoData row id\n\t\t *  @param {string} sSpecific data get type ('type' 'filter' 'sort')\n\t\t *  @param {array} aiColumns Array of column indexes to get data from\n\t\t *  @returns {array} Data array\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetRowData( oSettings, iRow, sSpecific, aiColumns )\n\t\t{\n\t\t\tvar out = [];\n\t\t\tfor ( var i=0, iLen=aiColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tout.push( _fnGetCellData( oSettings, iRow, aiColumns[i], sSpecific ) );\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for a given cell from the internal cache, taking into account data mapping\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow aoData row id\n\t\t *  @param {int} iCol Column index\n\t\t *  @param {string} sSpecific data get type ('display', 'type' 'filter' 'sort')\n\t\t *  @returns {*} Cell data\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetCellData( oSettings, iRow, iCol, sSpecific )\n\t\t{\n\t\t\tvar sData;\n\t\t\tvar oCol = oSettings.aoColumns[iCol];\n\t\t\tvar oData = oSettings.aoData[iRow]._aData;\n\t\t\n\t\t\tif ( (sData=oCol.fnGetData( oData, sSpecific )) === undefined )\n\t\t\t{\n\t\t\t\tif ( oSettings.iDrawError != oSettings.iDraw && oCol.sDefaultContent === null )\n\t\t\t\t{\n\t\t\t\t\t_fnLog( oSettings, 0, \"Requested unknown parameter \"+\n\t\t\t\t\t\t(typeof oCol.mData=='function' ? '{mData function}' : \"'\"+oCol.mData+\"'\")+\n\t\t\t\t\t\t\" from the data source for row \"+iRow );\n\t\t\t\t\toSettings.iDrawError = oSettings.iDraw;\n\t\t\t\t}\n\t\t\t\treturn oCol.sDefaultContent;\n\t\t\t}\n\t\t\n\t\t\t/* When the data source is null, we can use default column data */\n\t\t\tif ( sData === null && oCol.sDefaultContent !== null )\n\t\t\t{\n\t\t\t\tsData = oCol.sDefaultContent;\n\t\t\t}\n\t\t\telse if ( typeof sData === 'function' )\n\t\t\t{\n\t\t\t\t/* If the data source is a function, then we run it and use the return */\n\t\t\t\treturn sData();\n\t\t\t}\n\t\t\n\t\t\tif ( sSpecific == 'display' && sData === null )\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn sData;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Set the value for a specific cell, into the internal data cache\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow aoData row id\n\t\t *  @param {int} iCol Column index\n\t\t *  @param {*} val Value to set\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSetCellData( oSettings, iRow, iCol, val )\n\t\t{\n\t\t\tvar oCol = oSettings.aoColumns[iCol];\n\t\t\tvar oData = oSettings.aoData[iRow]._aData;\n\t\t\n\t\t\toCol.fnSetData( oData, val );\n\t\t}\n\t\t\n\t\t\n\t\t// Private variable that is used to match array syntax in the data property object\n\t\tvar __reArray = /\\[.*?\\]$/;\n\t\t\n\t\t/**\n\t\t * Return a function that can be used to get data from a source object, taking\n\t\t * into account the ability to use nested objects as a source\n\t\t *  @param {string|int|function} mSource The data source for the object\n\t\t *  @returns {function} Data get function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetObjectDataFn( mSource )\n\t\t{\n\t\t\tif ( mSource === null )\n\t\t\t{\n\t\t\t\t/* Give an empty string for rendering / sorting etc */\n\t\t\t\treturn function (data, type) {\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof mSource === 'function' )\n\t\t\t{\n\t\t\t\treturn function (data, type, extra) {\n\t\t\t\t\treturn mSource( data, type, extra );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1) )\n\t\t\t{\n\t\t\t\t/* If there is a . in the source string then the data source is in a \n\t\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t\t * be used if defined, rather than throwing an error\n\t\t\t\t */\n\t\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\t\tvar a = src.split('.');\n\t\t\t\t\tvar arrayNotation, out, innerSrc;\n\t\t\n\t\t\t\t\tif ( src !== \"\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\n\t\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\n\t\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tout = [];\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\t\n\t\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\t\n\t\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\tif ( data === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\treturn data;\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, type) {\n\t\t\t\t\treturn fetchData( data, type, mSource );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Array or flat object mapping */\n\t\t\t\treturn function (data, type) {\n\t\t\t\t\treturn data[mSource];\t\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Return a function that can be used to set data from a source object, taking\n\t\t * into account the ability to use nested objects as a source\n\t\t *  @param {string|int|function} mSource The data source for the object\n\t\t *  @returns {function} Data set function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSetObjectDataFn( mSource )\n\t\t{\n\t\t\tif ( mSource === null )\n\t\t\t{\n\t\t\t\t/* Nothing to do when the data source is null */\n\t\t\t\treturn function (data, val) {};\n\t\t\t}\n\t\t\telse if ( typeof mSource === 'function' )\n\t\t\t{\n\t\t\t\treturn function (data, val) {\n\t\t\t\t\tmSource( data, 'set', val );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 || mSource.indexOf('[') !== -1) )\n\t\t\t{\n\t\t\t\t/* Like the get, we need to get data from a nested object */\n\t\t\t\tvar setData = function (data, val, src) {\n\t\t\t\t\tvar a = src.split('.'), b;\n\t\t\t\t\tvar arrayNotation, o, innerSrc;\n\t\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\n\t\t\t\t\t\tif ( arrayNotation )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\t\n\t\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ a[a.length-1].replace(__reArray, '') ] = val;\n\t\t\t\t};\n\t\t\n\t\t\t\treturn function (data, val) {\n\t\t\t\t\treturn setData( data, val, mSource );\n\t\t\t\t};\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Array or flat object mapping */\n\t\t\t\treturn function (data, val) {\n\t\t\t\t\tdata[mSource] = val;\t\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Return an array with the full table data\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns array {array} aData Master data array\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetDataMaster ( oSettings )\n\t\t{\n\t\t\tvar aData = [];\n\t\t\tvar iLen = oSettings.aoData.length;\n\t\t\tfor ( var i=0 ; i<iLen; i++ )\n\t\t\t{\n\t\t\t\taData.push( oSettings.aoData[i]._aData );\n\t\t\t}\n\t\t\treturn aData;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Nuke the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnClearTable( oSettings )\n\t\t{\n\t\t\toSettings.aoData.splice( 0, oSettings.aoData.length );\n\t\t\toSettings.aiDisplayMaster.splice( 0, oSettings.aiDisplayMaster.length );\n\t\t\toSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length );\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t}\n\t\t\n\t\t\n\t\t /**\n\t\t * Take an array of integers (index array) and remove a target integer (value - not \n\t\t * the key!)\n\t\t *  @param {array} a Index array to target\n\t\t *  @param {int} iTarget value to find\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDeleteIndex( a, iTarget )\n\t\t{\n\t\t\tvar iTargetIndex = -1;\n\t\t\t\n\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( a[i] == iTarget )\n\t\t\t\t{\n\t\t\t\t\tiTargetIndex = i;\n\t\t\t\t}\n\t\t\t\telse if ( a[i] > iTarget )\n\t\t\t\t{\n\t\t\t\t\ta[i]--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( iTargetIndex != -1 )\n\t\t\t{\n\t\t\t\ta.splice( iTargetIndex, 1 );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t /**\n\t\t * Call the developer defined fnRender function for a given cell (row/column) with\n\t\t * the required parameters and return the result.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow aoData index for the row\n\t\t *  @param {int} iCol aoColumns index for the column\n\t\t *  @returns {*} Return of the developer's fnRender function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnRender( oSettings, iRow, iCol )\n\t\t{\n\t\t\tvar oCol = oSettings.aoColumns[iCol];\n\t\t\n\t\t\treturn oCol.fnRender( {\n\t\t\t\t\"iDataRow\":    iRow,\n\t\t\t\t\"iDataColumn\": iCol,\n\t\t\t\t\"oSettings\":   oSettings,\n\t\t\t\t\"aData\":       oSettings.aoData[iRow]._aData,\n\t\t\t\t\"mDataProp\":   oCol.mData\n\t\t\t}, _fnGetCellData(oSettings, iRow, iCol, 'display') );\n\t\t}\n\t\t/**\n\t\t * Create a new TR element (and it's TD children) for a row\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iRow Row to consider\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCreateTr ( oSettings, iRow )\n\t\t{\n\t\t\tvar oData = oSettings.aoData[iRow];\n\t\t\tvar nTd;\n\t\t\n\t\t\tif ( oData.nTr === null )\n\t\t\t{\n\t\t\t\toData.nTr = document.createElement('tr');\n\t\t\n\t\t\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t\t\t * to the aoData array for fast look up\n\t\t\t\t */\n\t\t\t\toData.nTr._DT_RowIndex = iRow;\n\t\t\n\t\t\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t\t\tif ( oData._aData.DT_RowId )\n\t\t\t\t{\n\t\t\t\t\toData.nTr.id = oData._aData.DT_RowId;\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( oData._aData.DT_RowClass )\n\t\t\t\t{\n\t\t\t\t\toData.nTr.className = oData._aData.DT_RowClass;\n\t\t\t\t}\n\t\t\n\t\t\t\t/* Process each column */\n\t\t\t\tfor ( var i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tvar oCol = oSettings.aoColumns[i];\n\t\t\t\t\tnTd = document.createElement( oCol.sCellType );\n\t\t\n\t\t\t\t\t/* Render if needed - if bUseRendered is true then we already have the rendered\n\t\t\t\t\t * value in the data source - so can just use that\n\t\t\t\t\t */\n\t\t\t\t\tnTd.innerHTML = (typeof oCol.fnRender === 'function' && (!oCol.bUseRendered || oCol.mData === null)) ?\n\t\t\t\t\t\t_fnRender( oSettings, iRow, i ) :\n\t\t\t\t\t\t_fnGetCellData( oSettings, iRow, i, 'display' );\n\t\t\t\t\n\t\t\t\t\t/* Add user defined class */\n\t\t\t\t\tif ( oCol.sClass !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTd.className = oCol.sClass;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ( oCol.bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\toData.nTr.appendChild( nTd );\n\t\t\t\t\t\toData._anHidden[i] = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\toData._anHidden[i] = nTd;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t\t\t{\n\t\t\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i, 'display' ), oData._aData, iRow, i\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [oData.nTr, oData._aData, iRow] );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Create the HTML header for the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBuildHead( oSettings )\n\t\t{\n\t\t\tvar i, nTh, iLen, j, jLen;\n\t\t\tvar iThs = $('th, td', oSettings.nTHead).length;\n\t\t\tvar iCorrector = 0;\n\t\t\tvar jqChildren;\n\t\t\t\n\t\t\t/* If there is a header in place - then use it - otherwise it's going to get nuked... */\n\t\t\tif ( iThs !== 0 )\n\t\t\t{\n\t\t\t\t/* We've got a thead from the DOM, so remove hidden columns and apply width to vis cols */\n\t\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tnTh = oSettings.aoColumns[i].nTh;\n\t\t\t\t\tnTh.setAttribute('role', 'columnheader');\n\t\t\t\t\tif ( oSettings.aoColumns[i].bSortable )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTh.setAttribute('tabindex', oSettings.iTabIndex);\n\t\t\t\t\t\tnTh.setAttribute('aria-controls', oSettings.sTableId);\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif ( oSettings.aoColumns[i].sClass !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nTh).addClass( oSettings.aoColumns[i].sClass );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Set the title of the column if it is user defined (not what was auto detected) */\n\t\t\t\t\tif ( oSettings.aoColumns[i].sTitle != nTh.innerHTML )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTh.innerHTML = oSettings.aoColumns[i].sTitle;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* We don't have a header in the DOM - so we are going to have to create one */\n\t\t\t\tvar nTr = document.createElement( \"tr\" );\n\t\t\t\t\n\t\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tnTh = oSettings.aoColumns[i].nTh;\n\t\t\t\t\tnTh.innerHTML = oSettings.aoColumns[i].sTitle;\n\t\t\t\t\tnTh.setAttribute('tabindex', '0');\n\t\t\t\t\t\n\t\t\t\t\tif ( oSettings.aoColumns[i].sClass !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(nTh).addClass( oSettings.aoColumns[i].sClass );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnTr.appendChild( nTh );\n\t\t\t\t}\n\t\t\t\t$(oSettings.nTHead).html( '' )[0].appendChild( nTr );\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, oSettings.nTHead );\n\t\t\t}\n\t\t\t\n\t\t\t/* ARIA role for the rows */\t\n\t\t\t$(oSettings.nTHead).children('tr').attr('role', 'row');\n\t\t\t\n\t\t\t/* Add the extra markup needed by jQuery UI's themes */\n\t\t\tif ( oSettings.bJUI )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tnTh = oSettings.aoColumns[i].nTh;\n\t\t\t\t\t\n\t\t\t\t\tvar nDiv = document.createElement('div');\n\t\t\t\t\tnDiv.className = oSettings.oClasses.sSortJUIWrapper;\n\t\t\t\t\t$(nTh).contents().appendTo(nDiv);\n\t\t\t\t\t\n\t\t\t\t\tvar nSpan = document.createElement('span');\n\t\t\t\t\tnSpan.className = oSettings.oClasses.sSortIcon;\n\t\t\t\t\tnDiv.appendChild( nSpan );\n\t\t\t\t\tnTh.appendChild( nDiv );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings.oFeatures.bSort )\n\t\t\t{\n\t\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aoColumns[i].bSortable !== false )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnSortAttachListener( oSettings, oSettings.aoColumns[i].nTh, i );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t$(oSettings.aoColumns[i].nTh).addClass( oSettings.oClasses.sSortableNone );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Deal with the footer - add classes if required */\n\t\t\tif ( oSettings.oClasses.sFooterTH !== \"\" )\n\t\t\t{\n\t\t\t\t$(oSettings.nTFoot).children('tr').children('th').addClass( oSettings.oClasses.sFooterTH );\n\t\t\t}\n\t\t\t\n\t\t\t/* Cache the footer elements */\n\t\t\tif ( oSettings.nTFoot !== null )\n\t\t\t{\n\t\t\t\tvar anCells = _fnGetUniqueThs( oSettings, null, oSettings.aoFooter );\n\t\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( anCells[i] )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aoColumns[i].nTf = anCells[i];\n\t\t\t\t\t\tif ( oSettings.aoColumns[i].sClass )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(anCells[i]).addClass( oSettings.aoColumns[i].sClass );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Draw the header (or footer) element based on the column visibility states. The\n\t\t * methodology here is to use the layout array from _fnDetectHeader, modified for\n\t\t * the instantaneous column visibility, to construct the new layout. The grid is\n\t\t * traversed over cell at a time in a rows x columns grid fashion, although each \n\t\t * cell insert can cover multiple elements in the grid - which is tracks using the\n\t\t * aApplied array. Cell inserts in the grid will only occur where there isn't\n\t\t * already a cell in that position.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param array {objects} aoSource Layout array from _fnDetectHeader\n\t\t *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc, \n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDrawHead( oSettings, aoSource, bIncludeHidden )\n\t\t{\n\t\t\tvar i, iLen, j, jLen, k, kLen, n, nLocalTr;\n\t\t\tvar aoLocal = [];\n\t\t\tvar aApplied = [];\n\t\t\tvar iColumns = oSettings.aoColumns.length;\n\t\t\tvar iRowspan, iColspan;\n\t\t\n\t\t\tif (  bIncludeHidden === undefined )\n\t\t\t{\n\t\t\t\tbIncludeHidden = false;\n\t\t\t}\n\t\t\n\t\t\t/* Make a copy of the master layout array, but without the visible columns in it */\n\t\t\tfor ( i=0, iLen=aoSource.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taoLocal[i] = aoSource[i].slice();\n\t\t\t\taoLocal[i].nTr = aoSource[i].nTr;\n\t\t\n\t\t\t\t/* Remove any columns which are currently hidden */\n\t\t\t\tfor ( j=iColumns-1 ; j>=0 ; j-- )\n\t\t\t\t{\n\t\t\t\t\tif ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )\n\t\t\t\t\t{\n\t\t\t\t\t\taoLocal[i].splice( j, 1 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t/* Prep the applied array - it needs an element for each row */\n\t\t\t\taApplied.push( [] );\n\t\t\t}\n\t\t\n\t\t\tfor ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnLocalTr = aoLocal[i].nTr;\n\t\t\t\t\n\t\t\t\t/* All cells are going to be replaced, so empty out the row */\n\t\t\t\tif ( nLocalTr )\n\t\t\t\t{\n\t\t\t\t\twhile( (n = nLocalTr.firstChild) )\n\t\t\t\t\t{\n\t\t\t\t\t\tnLocalTr.removeChild( n );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tfor ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tiRowspan = 1;\n\t\t\t\t\tiColspan = 1;\n\t\t\n\t\t\t\t\t/* Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t\t\t * insert point. If there is, then there is nothing to do.\n\t\t\t\t\t */\n\t\t\t\t\tif ( aApplied[i][j] === undefined )\n\t\t\t\t\t{\n\t\t\t\t\t\tnLocalTr.appendChild( aoLocal[i][j].cell );\n\t\t\t\t\t\taApplied[i][j] = 1;\n\t\t\n\t\t\t\t\t\t/* Expand the cell to cover as many rows as needed */\n\t\t\t\t\t\twhile ( aoLocal[i+iRowspan] !== undefined &&\n\t\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taApplied[i+iRowspan][j] = 1;\n\t\t\t\t\t\t\tiRowspan++;\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t/* Expand the cell to cover as many columns as needed */\n\t\t\t\t\t\twhile ( aoLocal[i][j+iColspan] !== undefined &&\n\t\t\t\t\t\t        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Must update the applied array over the rows for the columns */\n\t\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taApplied[i+k][j+iColspan] = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tiColspan++;\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t/* Do the actual expansion in the DOM */\n\t\t\t\t\t\taoLocal[i][j].cell.rowSpan = iRowspan;\n\t\t\t\t\t\taoLocal[i][j].cell.colSpan = iColspan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Insert the required TR nodes into the table for display\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDraw( oSettings )\n\t\t{\n\t\t\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\t\t\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\t\t\tif ( $.inArray( false, aPreDraw ) !== -1 )\n\t\t\t{\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar i, iLen, n;\n\t\t\tvar anRows = [];\n\t\t\tvar iRowCount = 0;\n\t\t\tvar iStripes = oSettings.asStripeClasses.length;\n\t\t\tvar iOpenRows = oSettings.aoOpenRows.length;\n\t\t\t\n\t\t\toSettings.bDrawing = true;\n\t\t\t\n\t\t\t/* Check and see if we have an initial draw position from state saving */\n\t\t\tif ( oSettings.iInitDisplayStart !== undefined && oSettings.iInitDisplayStart != -1 )\n\t\t\t{\n\t\t\t\tif ( oSettings.oFeatures.bServerSide )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = oSettings.iInitDisplayStart;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = (oSettings.iInitDisplayStart >= oSettings.fnRecordsDisplay()) ?\n\t\t\t\t\t\t0 : oSettings.iInitDisplayStart;\n\t\t\t\t}\n\t\t\t\toSettings.iInitDisplayStart = -1;\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* Server-side processing draw intercept */\n\t\t\tif ( oSettings.bDeferLoading )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = false;\n\t\t\t\toSettings.iDraw++;\n\t\t\t}\n\t\t\telse if ( !oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\toSettings.iDraw++;\n\t\t\t}\n\t\t\telse if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings.aiDisplay.length !== 0 )\n\t\t\t{\n\t\t\t\tvar iStart = oSettings._iDisplayStart;\n\t\t\t\tvar iEnd = oSettings._iDisplayEnd;\n\t\t\t\t\n\t\t\t\tif ( oSettings.oFeatures.bServerSide )\n\t\t\t\t{\n\t\t\t\t\tiStart = 0;\n\t\t\t\t\tiEnd = oSettings.aoData.length;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t\t\t{\n\t\t\t\t\tvar aoData = oSettings.aoData[ oSettings.aiDisplay[j] ];\n\t\t\t\t\tif ( aoData.nTr === null )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnCreateTr( oSettings, oSettings.aiDisplay[j] );\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar nRow = aoData.nTr;\n\t\t\t\t\t\n\t\t\t\t\t/* Remove the old striping classes and then add the new one */\n\t\t\t\t\tif ( iStripes !== 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sStripe = oSettings.asStripeClasses[ iRowCount % iStripes ];\n\t\t\t\t\t\tif ( aoData._sRowStripe != sStripe )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );\n\t\t\t\t\t\t\taoData._sRowStripe = sStripe;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Row callback functions - might want to manipulate the row */\n\t\t\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null, \n\t\t\t\t\t\t[nRow, oSettings.aoData[ oSettings.aiDisplay[j] ]._aData, iRowCount, j] );\n\t\t\t\t\t\n\t\t\t\t\tanRows.push( nRow );\n\t\t\t\t\tiRowCount++;\n\t\t\t\t\t\n\t\t\t\t\t/* If there is an open row - and it is attached to this parent - attach it on redraw */\n\t\t\t\t\tif ( iOpenRows !== 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tfor ( var k=0 ; k<iOpenRows ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( nRow == oSettings.aoOpenRows[k].nParent )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tanRows.push( oSettings.aoOpenRows[k].nTr );\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Table is empty - create a row with an empty message in it */\n\t\t\t\tanRows[ 0 ] = document.createElement( 'tr' );\n\t\t\t\t\n\t\t\t\tif ( oSettings.asStripeClasses[0] )\n\t\t\t\t{\n\t\t\t\t\tanRows[ 0 ].className = oSettings.asStripeClasses[0];\n\t\t\t\t}\n\t\t\n\t\t\t\tvar oLang = oSettings.oLanguage;\n\t\t\t\tvar sZero = oLang.sZeroRecords;\n\t\t\t\tif ( oSettings.iDraw == 1 && oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide )\n\t\t\t\t{\n\t\t\t\t\tsZero = oLang.sLoadingRecords;\n\t\t\t\t}\n\t\t\t\telse if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )\n\t\t\t\t{\n\t\t\t\t\tsZero = oLang.sEmptyTable;\n\t\t\t\t}\n\t\t\n\t\t\t\tvar nTd = document.createElement( 'td' );\n\t\t\t\tnTd.setAttribute( 'valign', \"top\" );\n\t\t\t\tnTd.colSpan = _fnVisbleColumns( oSettings );\n\t\t\t\tnTd.className = oSettings.oClasses.sRowEmpty;\n\t\t\t\tnTd.innerHTML = _fnInfoMacros( oSettings, sZero );\n\t\t\t\t\n\t\t\t\tanRows[ iRowCount ].appendChild( nTd );\n\t\t\t}\n\t\t\t\n\t\t\t/* Header and footer callbacks */\n\t\t\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0], \n\t\t\t\t_fnGetDataMaster( oSettings ), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ] );\n\t\t\t\n\t\t\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0], \n\t\t\t\t_fnGetDataMaster( oSettings ), oSettings._iDisplayStart, oSettings.fnDisplayEnd(), oSettings.aiDisplay ] );\n\t\t\t\n\t\t\t/* \n\t\t\t * Need to remove any old row from the display - note we can't just empty the tbody using\n\t\t\t * $().html('') since this will unbind the jQuery event handlers (even although the node \n\t\t\t * still exists!) - equally we can't use innerHTML, since IE throws an exception.\n\t\t\t */\n\t\t\tvar\n\t\t\t\tnAddFrag = document.createDocumentFragment(),\n\t\t\t\tnRemoveFrag = document.createDocumentFragment(),\n\t\t\t\tnBodyPar, nTrs;\n\t\t\t\n\t\t\tif ( oSettings.nTBody )\n\t\t\t{\n\t\t\t\tnBodyPar = oSettings.nTBody.parentNode;\n\t\t\t\tnRemoveFrag.appendChild( oSettings.nTBody );\n\t\t\t\t\n\t\t\t\t/* When doing infinite scrolling, only remove child rows when sorting, filtering or start\n\t\t\t\t * up. When not infinite scroll, always do it.\n\t\t\t\t */\n\t\t\t\tif ( !oSettings.oScroll.bInfinite || !oSettings._bInitComplete ||\n\t\t\t\t \toSettings.bSorted || oSettings.bFiltered )\n\t\t\t\t{\n\t\t\t\t\twhile( (n = oSettings.nTBody.firstChild) )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.nTBody.removeChild( n );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Put the draw table into the dom */\n\t\t\t\tfor ( i=0, iLen=anRows.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tnAddFrag.appendChild( anRows[i] );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toSettings.nTBody.appendChild( nAddFrag );\n\t\t\t\tif ( nBodyPar !== null )\n\t\t\t\t{\n\t\t\t\t\tnBodyPar.appendChild( oSettings.nTBody );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Call all required callback functions for the end of a draw */\n\t\t\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );\n\t\t\t\n\t\t\t/* Draw is complete, sorting and filtering must be as well */\n\t\t\toSettings.bSorted = false;\n\t\t\toSettings.bFiltered = false;\n\t\t\toSettings.bDrawing = false;\n\t\t\t\n\t\t\tif ( oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t\tif ( !oSettings._bInitComplete )\n\t\t\t\t{\n\t\t\t\t\t_fnInitComplete( oSettings );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table - taking account of the various features which are enabled\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnReDraw( oSettings )\n\t\t{\n\t\t\tif ( oSettings.oFeatures.bSort )\n\t\t\t{\n\t\t\t\t/* Sorting will refilter and draw for us */\n\t\t\t\t_fnSort( oSettings, oSettings.oPreviousSearch );\n\t\t\t}\n\t\t\telse if ( oSettings.oFeatures.bFilter )\n\t\t\t{\n\t\t\t\t/* Filtering will redraw for us */\n\t\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Add the options to the page HTML for the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAddOptionsHtml ( oSettings )\n\t\t{\n\t\t\t/*\n\t\t\t * Create a temporary, empty, div which we can later on replace with what we have generated\n\t\t\t * we do it this way to rendering the 'options' html offline - speed :-)\n\t\t\t */\n\t\t\tvar nHolding = $('<div></div>')[0];\n\t\t\toSettings.nTable.parentNode.insertBefore( nHolding, oSettings.nTable );\n\t\t\t\n\t\t\t/* \n\t\t\t * All DataTables are wrapped in a div\n\t\t\t */\n\t\t\toSettings.nTableWrapper = $('<div id=\"'+oSettings.sTableId+'_wrapper\" class=\"'+oSettings.oClasses.sWrapper+'\" role=\"grid\"></div>')[0];\n\t\t\toSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;\n\t\t\n\t\t\t/* Track where we want to insert the option */\n\t\t\tvar nInsertNode = oSettings.nTableWrapper;\n\t\t\t\n\t\t\t/* Loop over the user set positioning and place the elements as needed */\n\t\t\tvar aDom = oSettings.sDom.split('');\n\t\t\tvar nTmp, iPushFeature, cOption, nNewNode, cNext, sAttr, j;\n\t\t\tfor ( var i=0 ; i<aDom.length ; i++ )\n\t\t\t{\n\t\t\t\tiPushFeature = 0;\n\t\t\t\tcOption = aDom[i];\n\t\t\t\t\n\t\t\t\tif ( cOption == '<' )\n\t\t\t\t{\n\t\t\t\t\t/* New container div */\n\t\t\t\t\tnNewNode = $('<div></div>')[0];\n\t\t\t\t\t\n\t\t\t\t\t/* Check to see if we should append an id and/or a class name to the container */\n\t\t\t\t\tcNext = aDom[i+1];\n\t\t\t\t\tif ( cNext == \"'\" || cNext == '\"' )\n\t\t\t\t\t{\n\t\t\t\t\t\tsAttr = \"\";\n\t\t\t\t\t\tj = 2;\n\t\t\t\t\t\twhile ( aDom[i+j] != cNext )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsAttr += aDom[i+j];\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* Replace jQuery UI constants */\n\t\t\t\t\t\tif ( sAttr == \"H\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsAttr = oSettings.oClasses.sJUIHeader;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( sAttr == \"F\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsAttr = oSettings.oClasses.sJUIFooter;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif ( sAttr.indexOf('.') != -1 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar aSplit = sAttr.split('.');\n\t\t\t\t\t\t\tnNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);\n\t\t\t\t\t\t\tnNewNode.className = aSplit[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( sAttr.charAt(0) == \"#\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnNewNode.id = sAttr.substr(1, sAttr.length-1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnNewNode.className = sAttr;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\ti += j; /* Move along the position array */\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnInsertNode.appendChild( nNewNode );\n\t\t\t\t\tnInsertNode = nNewNode;\n\t\t\t\t}\n\t\t\t\telse if ( cOption == '>' )\n\t\t\t\t{\n\t\t\t\t\t/* End container div */\n\t\t\t\t\tnInsertNode = nInsertNode.parentNode;\n\t\t\t\t}\n\t\t\t\telse if ( cOption == 'l' && oSettings.oFeatures.bPaginate && oSettings.oFeatures.bLengthChange )\n\t\t\t\t{\n\t\t\t\t\t/* Length */\n\t\t\t\t\tnTmp = _fnFeatureHtmlLength( oSettings );\n\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t}\n\t\t\t\telse if ( cOption == 'f' && oSettings.oFeatures.bFilter )\n\t\t\t\t{\n\t\t\t\t\t/* Filter */\n\t\t\t\t\tnTmp = _fnFeatureHtmlFilter( oSettings );\n\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t}\n\t\t\t\telse if ( cOption == 'r' && oSettings.oFeatures.bProcessing )\n\t\t\t\t{\n\t\t\t\t\t/* pRocessing */\n\t\t\t\t\tnTmp = _fnFeatureHtmlProcessing( oSettings );\n\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t}\n\t\t\t\telse if ( cOption == 't' )\n\t\t\t\t{\n\t\t\t\t\t/* Table */\n\t\t\t\t\tnTmp = _fnFeatureHtmlTable( oSettings );\n\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t}\n\t\t\t\telse if ( cOption ==  'i' && oSettings.oFeatures.bInfo )\n\t\t\t\t{\n\t\t\t\t\t/* Info */\n\t\t\t\t\tnTmp = _fnFeatureHtmlInfo( oSettings );\n\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t}\n\t\t\t\telse if ( cOption == 'p' && oSettings.oFeatures.bPaginate )\n\t\t\t\t{\n\t\t\t\t\t/* Pagination */\n\t\t\t\t\tnTmp = _fnFeatureHtmlPaginate( oSettings );\n\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t}\n\t\t\t\telse if ( DataTable.ext.aoFeatures.length !== 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Plug-in features */\n\t\t\t\t\tvar aoFeatures = DataTable.ext.aoFeatures;\n\t\t\t\t\tfor ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( cOption == aoFeatures[k].cFeature )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnTmp = aoFeatures[k].fnInit( oSettings );\n\t\t\t\t\t\t\tif ( nTmp )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tiPushFeature = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Add to the 2D features array */\n\t\t\t\tif ( iPushFeature == 1 && nTmp !== null )\n\t\t\t\t{\n\t\t\t\t\tif ( typeof oSettings.aanFeatures[cOption] !== 'object' )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aanFeatures[cOption] = [];\n\t\t\t\t\t}\n\t\t\t\t\toSettings.aanFeatures[cOption].push( nTmp );\n\t\t\t\t\tnInsertNode.appendChild( nTmp );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Built our DOM structure - replace the holding div with what we want */\n\t\t\tnHolding.parentNode.replaceChild( oSettings.nTableWrapper, nHolding );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Use the DOM source to create up an array of header cells. The idea here is to\n\t\t * create a layout grid (array) of rows x columns, which contains a reference\n\t\t * to the cell that that point in the grid (regardless of col/rowspan), such that\n\t\t * any column / row could be removed and the new grid constructed\n\t\t *  @param array {object} aLayout Array to store the calculated layout in\n\t\t *  @param {node} nThead The header/footer element for the table\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDetectHeader ( aLayout, nThead )\n\t\t{\n\t\t\tvar nTrs = $(nThead).children('tr');\n\t\t\tvar nTr, nCell;\n\t\t\tvar i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;\n\t\t\tvar bUnique;\n\t\t\tvar fnShiftCol = function ( a, i, j ) {\n\t\t\t\tvar k = a[i];\n\t\t                while ( k[j] ) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\treturn j;\n\t\t\t};\n\t\t\n\t\t\taLayout.splice( 0, aLayout.length );\n\t\t\t\n\t\t\t/* We know how many rows there are in the layout - so prep it */\n\t\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taLayout.push( [] );\n\t\t\t}\n\t\t\t\n\t\t\t/* Calculate a layout array */\n\t\t\tfor ( i=0, iLen=nTrs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tnTr = nTrs[i];\n\t\t\t\tiColumn = 0;\n\t\t\t\t\n\t\t\t\t/* For every cell in the row... */\n\t\t\t\tnCell = nTr.firstChild;\n\t\t\t\twhile ( nCell ) {\n\t\t\t\t\tif ( nCell.nodeName.toUpperCase() == \"TD\" ||\n\t\t\t\t\t     nCell.nodeName.toUpperCase() == \"TH\" )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Get the col and rowspan attributes from the DOM and sanitise them */\n\t\t\t\t\t\tiColspan = nCell.getAttribute('colspan') * 1;\n\t\t\t\t\t\tiRowspan = nCell.getAttribute('rowspan') * 1;\n\t\t\t\t\t\tiColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;\n\t\t\t\t\t\tiRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;\n\t\t\n\t\t\t\t\t\t/* There might be colspan cells already in this row, so shift our target \n\t\t\t\t\t\t * accordingly\n\t\t\t\t\t\t */\n\t\t\t\t\t\tiColShifted = fnShiftCol( aLayout, i, iColumn );\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* Cache calculation for unique columns */\n\t\t\t\t\t\tbUnique = iColspan === 1 ? true : false;\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* If there is col / rowspan, copy the information into the layout grid */\n\t\t\t\t\t\tfor ( l=0 ; l<iColspan ; l++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( k=0 ; k<iRowspan ; k++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taLayout[i+k][iColShifted+l] = {\n\t\t\t\t\t\t\t\t\t\"cell\": nCell,\n\t\t\t\t\t\t\t\t\t\"unique\": bUnique\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\taLayout[i+k].nTr = nTr;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnCell = nCell.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of unique th elements, one for each column\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} nHeader automatically detect the layout from this node - optional\n\t\t *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional\n\t\t *  @returns array {node} aReturn list of unique th's\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetUniqueThs ( oSettings, nHeader, aLayout )\n\t\t{\n\t\t\tvar aReturn = [];\n\t\t\tif ( !aLayout )\n\t\t\t{\n\t\t\t\taLayout = oSettings.aoHeader;\n\t\t\t\tif ( nHeader )\n\t\t\t\t{\n\t\t\t\t\taLayout = [];\n\t\t\t\t\t_fnDetectHeader( aLayout, nHeader );\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tfor ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfor ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( aLayout[i][j].unique && \n\t\t\t\t\t\t (!aReturn[j] || !oSettings.bSortCellsTop) )\n\t\t\t\t\t{\n\t\t\t\t\t\taReturn[j] = aLayout[i][j].cell;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn aReturn;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * Update the table using an Ajax call\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {boolean} Block the table drawing or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAjaxUpdate( oSettings )\n\t\t{\n\t\t\tif ( oSettings.bAjaxDataGet )\n\t\t\t{\n\t\t\t\toSettings.iDraw++;\n\t\t\t\t_fnProcessingDisplay( oSettings, true );\n\t\t\t\tvar iColumns = oSettings.aoColumns.length;\n\t\t\t\tvar aoData = _fnAjaxParameters( oSettings );\n\t\t\t\t_fnServerParams( oSettings, aoData );\n\t\t\t\t\n\t\t\t\toSettings.fnServerData.call( oSettings.oInstance, oSettings.sAjaxSource, aoData,\n\t\t\t\t\tfunction(json) {\n\t\t\t\t\t\t_fnAjaxUpdateDraw( oSettings, json );\n\t\t\t\t\t}, oSettings );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Build up the parameters in an object needed for a server-side processing request\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {bool} block the table drawing or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAjaxParameters( oSettings )\n\t\t{\n\t\t\tvar iColumns = oSettings.aoColumns.length;\n\t\t\tvar aoData = [], mDataProp, aaSort, aDataSort;\n\t\t\tvar i, j;\n\t\t\t\n\t\t\taoData.push( { \"name\": \"sEcho\",          \"value\": oSettings.iDraw } );\n\t\t\taoData.push( { \"name\": \"iColumns\",       \"value\": iColumns } );\n\t\t\taoData.push( { \"name\": \"sColumns\",       \"value\": _fnColumnOrdering(oSettings) } );\n\t\t\taoData.push( { \"name\": \"iDisplayStart\",  \"value\": oSettings._iDisplayStart } );\n\t\t\taoData.push( { \"name\": \"iDisplayLength\", \"value\": oSettings.oFeatures.bPaginate !== false ?\n\t\t\t\toSettings._iDisplayLength : -1 } );\n\t\t\t\t\n\t\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t\t{\n\t\t\t  mDataProp = oSettings.aoColumns[i].mData;\n\t\t\t\taoData.push( { \"name\": \"mDataProp_\"+i, \"value\": typeof(mDataProp)===\"function\" ? 'function' : mDataProp } );\n\t\t\t}\n\t\t\t\n\t\t\t/* Filtering */\n\t\t\tif ( oSettings.oFeatures.bFilter !== false )\n\t\t\t{\n\t\t\t\taoData.push( { \"name\": \"sSearch\", \"value\": oSettings.oPreviousSearch.sSearch } );\n\t\t\t\taoData.push( { \"name\": \"bRegex\",  \"value\": oSettings.oPreviousSearch.bRegex } );\n\t\t\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoData.push( { \"name\": \"sSearch_\"+i,     \"value\": oSettings.aoPreSearchCols[i].sSearch } );\n\t\t\t\t\taoData.push( { \"name\": \"bRegex_\"+i,      \"value\": oSettings.aoPreSearchCols[i].bRegex } );\n\t\t\t\t\taoData.push( { \"name\": \"bSearchable_\"+i, \"value\": oSettings.aoColumns[i].bSearchable } );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Sorting */\n\t\t\tif ( oSettings.oFeatures.bSort !== false )\n\t\t\t{\n\t\t\t\tvar iCounter = 0;\n\t\t\n\t\t\t\taaSort = ( oSettings.aaSortingFixed !== null ) ?\n\t\t\t\t\toSettings.aaSortingFixed.concat( oSettings.aaSorting ) :\n\t\t\t\t\toSettings.aaSorting.slice();\n\t\t\t\t\n\t\t\t\tfor ( i=0 ; i<aaSort.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\taDataSort = oSettings.aoColumns[ aaSort[i][0] ].aDataSort;\n\t\t\t\t\t\n\t\t\t\t\tfor ( j=0 ; j<aDataSort.length ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taoData.push( { \"name\": \"iSortCol_\"+iCounter,  \"value\": aDataSort[j] } );\n\t\t\t\t\t\taoData.push( { \"name\": \"sSortDir_\"+iCounter,  \"value\": aaSort[i][1] } );\n\t\t\t\t\t\tiCounter++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taoData.push( { \"name\": \"iSortingCols\",   \"value\": iCounter } );\n\t\t\t\t\n\t\t\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoData.push( { \"name\": \"bSortable_\"+i,  \"value\": oSettings.aoColumns[i].bSortable } );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn aoData;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Add Ajax parameters from plug-ins\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param array {objects} aoData name/value pairs to send to the server\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnServerParams( oSettings, aoData )\n\t\t{\n\t\t\t_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [aoData] );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Data the data from the server (nuking the old) and redraw the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} json json data return from the server.\n\t\t *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n\t\t *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n\t\t *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n\t\t *  @param {array} json.aaData The data to display on this page\n\t\t *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnAjaxUpdateDraw ( oSettings, json )\n\t\t{\n\t\t\tif ( json.sEcho !== undefined )\n\t\t\t{\n\t\t\t\t/* Protect against old returns over-writing a new one. Possible when you get\n\t\t\t\t * very fast interaction, and later queries are completed much faster\n\t\t\t\t */\n\t\t\t\tif ( json.sEcho*1 < oSettings.iDraw )\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toSettings.iDraw = json.sEcho * 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( !oSettings.oScroll.bInfinite ||\n\t\t\t\t   (oSettings.oScroll.bInfinite && (oSettings.bSorted || oSettings.bFiltered)) )\n\t\t\t{\n\t\t\t\t_fnClearTable( oSettings );\n\t\t\t}\n\t\t\toSettings._iRecordsTotal = parseInt(json.iTotalRecords, 10);\n\t\t\toSettings._iRecordsDisplay = parseInt(json.iTotalDisplayRecords, 10);\n\t\t\t\n\t\t\t/* Determine if reordering is required */\n\t\t\tvar sOrdering = _fnColumnOrdering(oSettings);\n\t\t\tvar bReOrder = (json.sColumns !== undefined && sOrdering !== \"\" && json.sColumns != sOrdering );\n\t\t\tvar aiIndex;\n\t\t\tif ( bReOrder )\n\t\t\t{\n\t\t\t\taiIndex = _fnReOrderIndex( oSettings, json.sColumns );\n\t\t\t}\n\t\t\t\n\t\t\tvar aData = _fnGetObjectDataFn( oSettings.sAjaxDataProp )( json );\n\t\t\tfor ( var i=0, iLen=aData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( bReOrder )\n\t\t\t\t{\n\t\t\t\t\t/* If we need to re-order, then create a new array with the correct order and add it */\n\t\t\t\t\tvar aDataSorted = [];\n\t\t\t\t\tfor ( var j=0, jLen=oSettings.aoColumns.length ; j<jLen ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taDataSorted.push( aData[i][ aiIndex[j] ] );\n\t\t\t\t\t}\n\t\t\t\t\t_fnAddData( oSettings, aDataSorted );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t/* No re-order required, sever got it \"right\" - just straight add */\n\t\t\t\t\t_fnAddData( oSettings, aData[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\toSettings.bAjaxDataGet = false;\n\t\t\t_fnDraw( oSettings );\n\t\t\toSettings.bAjaxDataGet = true;\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * Generate the node required for filtering text\n\t\t *  @returns {node} Filter control element\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlFilter ( oSettings )\n\t\t{\n\t\t\tvar oPreviousSearch = oSettings.oPreviousSearch;\n\t\t\t\n\t\t\tvar sSearchStr = oSettings.oLanguage.sSearch;\n\t\t\tsSearchStr = (sSearchStr.indexOf('_INPUT_') !== -1) ?\n\t\t\t  sSearchStr.replace('_INPUT_', '<input type=\"text\" />') :\n\t\t\t  sSearchStr===\"\" ? '<input type=\"text\" />' : sSearchStr+' <input type=\"text\" />';\n\t\t\t\n\t\t\tvar nFilter = document.createElement( 'div' );\n\t\t\tnFilter.className = oSettings.oClasses.sFilter;\n\t\t\tnFilter.innerHTML = '<label>'+sSearchStr+'</label>';\n\t\t\tif ( !oSettings.aanFeatures.f )\n\t\t\t{\n\t\t\t\tnFilter.id = oSettings.sTableId+'_filter';\n\t\t\t}\n\t\t\t\n\t\t\tvar jqFilter = $('input[type=\"text\"]', nFilter);\n\t\t\n\t\t\t// Store a reference to the input element, so other input elements could be\n\t\t\t// added to the filter wrapper if needed (submit button for example)\n\t\t\tnFilter._DT_Input = jqFilter[0];\n\t\t\n\t\t\tjqFilter.val( oPreviousSearch.sSearch.replace('\"','&quot;') );\n\t\t\tjqFilter.bind( 'keyup.DT', function(e) {\n\t\t\t\t/* Update all other filter input elements for the new display */\n\t\t\t\tvar n = oSettings.aanFeatures.f;\n\t\t\t\tvar val = this.value===\"\" ? \"\" : this.value; // mental IE8 fix :-(\n\t\t\n\t\t\t\tfor ( var i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( n[i] != $(this).parents('div.dataTables_filter')[0] )\n\t\t\t\t\t{\n\t\t\t\t\t\t$(n[i]._DT_Input).val( val );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Now do the filter */\n\t\t\t\tif ( val != oPreviousSearch.sSearch )\n\t\t\t\t{\n\t\t\t\t\t_fnFilterComplete( oSettings, { \n\t\t\t\t\t\t\"sSearch\": val, \n\t\t\t\t\t\t\"bRegex\": oPreviousSearch.bRegex,\n\t\t\t\t\t\t\"bSmart\": oPreviousSearch.bSmart ,\n\t\t\t\t\t\t\"bCaseInsensitive\": oPreviousSearch.bCaseInsensitive \n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t\n\t\t\tjqFilter\n\t\t\t\t.attr('aria-controls', oSettings.sTableId)\n\t\t\t\t.bind( 'keypress.DT', function(e) {\n\t\t\t\t\t/* Prevent form submission */\n\t\t\t\t\tif ( e.keyCode == 13 )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\treturn nFilter;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the table using both the global filter and column based filtering\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} oSearch search information\n\t\t *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterComplete ( oSettings, oInput, iForce )\n\t\t{\n\t\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\t\tvar aoPrevSearch = oSettings.aoPreSearchCols;\n\t\t\tvar fnSaveFilter = function ( oFilter ) {\n\t\t\t\t/* Save the filtering values */\n\t\t\t\toPrevSearch.sSearch = oFilter.sSearch;\n\t\t\t\toPrevSearch.bRegex = oFilter.bRegex;\n\t\t\t\toPrevSearch.bSmart = oFilter.bSmart;\n\t\t\t\toPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;\n\t\t\t};\n\t\t\n\t\t\t/* In server-side processing all filtering is done by the server, so no point hanging around here */\n\t\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\t/* Global filter */\n\t\t\t\t_fnFilter( oSettings, oInput.sSearch, iForce, oInput.bRegex, oInput.bSmart, oInput.bCaseInsensitive );\n\t\t\t\tfnSaveFilter( oInput );\n\t\t\n\t\t\t\t/* Now do the individual column filter */\n\t\t\t\tfor ( var i=0 ; i<oSettings.aoPreSearchCols.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\t_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, aoPrevSearch[i].bRegex, \n\t\t\t\t\t\taoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Custom filtering */\n\t\t\t\t_fnFilterCustom( oSettings );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfnSaveFilter( oInput );\n\t\t\t}\n\t\t\t\n\t\t\t/* Tell the draw function we have been filtering */\n\t\t\toSettings.bFiltered = true;\n\t\t\t$(oSettings.oInstance).trigger('filter', oSettings);\n\t\t\t\n\t\t\t/* Redraw the table */\n\t\t\toSettings._iDisplayStart = 0;\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t_fnDraw( oSettings );\n\t\t\t\n\t\t\t/* Rebuild search array 'offline' */\n\t\t\t_fnBuildSearchArray( oSettings, 0 );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Apply custom filtering functions\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterCustom( oSettings )\n\t\t{\n\t\t\tvar afnFilters = DataTable.ext.afnFiltering;\n\t\t\tvar aiFilterColumns = _fnGetColumns( oSettings, 'bSearchable' );\n\t\t\n\t\t\tfor ( var i=0, iLen=afnFilters.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar iCorrector = 0;\n\t\t\t\tfor ( var j=0, jLen=oSettings.aiDisplay.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tvar iDisIndex = oSettings.aiDisplay[j-iCorrector];\n\t\t\t\t\tvar bTest = afnFilters[i](\n\t\t\t\t\t\toSettings,\n\t\t\t\t\t\t_fnGetRowData( oSettings, iDisIndex, 'filter', aiFilterColumns ),\n\t\t\t\t\t\tiDisIndex\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\t/* Check if we should use this row based on the filtering function */\n\t\t\t\t\tif ( !bTest )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aiDisplay.splice( j-iCorrector, 1 );\n\t\t\t\t\t\tiCorrector++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the table on a per-column basis\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sInput string to filter on\n\t\t *  @param {int} iColumn column to filter\n\t\t *  @param {bool} bRegex treat search string as a regular expression or not\n\t\t *  @param {bool} bSmart use smart filtering or not\n\t\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterColumn ( oSettings, sInput, iColumn, bRegex, bSmart, bCaseInsensitive )\n\t\t{\n\t\t\tif ( sInput === \"\" )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar iIndexCorrector = 0;\n\t\t\tvar rpSearch = _fnFilterCreateSearch( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\t\n\t\t\tfor ( var i=oSettings.aiDisplay.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\tvar sData = _fnDataToSearch( _fnGetCellData( oSettings, oSettings.aiDisplay[i], iColumn, 'filter' ),\n\t\t\t\t\toSettings.aoColumns[iColumn].sType );\n\t\t\t\tif ( ! rpSearch.test( sData ) )\n\t\t\t\t{\n\t\t\t\t\toSettings.aiDisplay.splice( i, 1 );\n\t\t\t\t\tiIndexCorrector++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the data table based on user input and draw the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sInput string to filter on\n\t\t *  @param {int} iForce optional - force a research of the master array (1) or not (undefined or 0)\n\t\t *  @param {bool} bRegex treat as a regular expression or not\n\t\t *  @param {bool} bSmart perform smart filtering or not\n\t\t *  @param {bool} bCaseInsensitive Do case insenstive matching or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilter( oSettings, sInput, iForce, bRegex, bSmart, bCaseInsensitive )\n\t\t{\n\t\t\tvar i;\n\t\t\tvar rpSearch = _fnFilterCreateSearch( sInput, bRegex, bSmart, bCaseInsensitive );\n\t\t\tvar oPrevSearch = oSettings.oPreviousSearch;\n\t\t\t\n\t\t\t/* Check if we are forcing or not - optional parameter */\n\t\t\tif ( !iForce )\n\t\t\t{\n\t\t\t\tiForce = 0;\n\t\t\t}\n\t\t\t\n\t\t\t/* Need to take account of custom filtering functions - always filter */\n\t\t\tif ( DataTable.ext.afnFiltering.length !== 0 )\n\t\t\t{\n\t\t\t\tiForce = 1;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * If the input is blank - we want the full data set\n\t\t\t */\n\t\t\tif ( sInput.length <= 0 )\n\t\t\t{\n\t\t\t\toSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length);\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/*\n\t\t\t\t * We are starting a new search or the new search string is smaller \n\t\t\t\t * then the old one (i.e. delete). Search from the master array\n\t\t\t \t */\n\t\t\t\tif ( oSettings.aiDisplay.length == oSettings.aiDisplayMaster.length ||\n\t\t\t\t\t   oPrevSearch.sSearch.length > sInput.length || iForce == 1 ||\n\t\t\t\t\t   sInput.indexOf(oPrevSearch.sSearch) !== 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Nuke the old display array - we are going to rebuild it */\n\t\t\t\t\toSettings.aiDisplay.splice( 0, oSettings.aiDisplay.length);\n\t\t\t\t\t\n\t\t\t\t\t/* Force a rebuild of the search array */\n\t\t\t\t\t_fnBuildSearchArray( oSettings, 1 );\n\t\t\t\t\t\n\t\t\t\t\t/* Search through all records to populate the search array\n\t\t\t\t\t * The the oSettings.aiDisplayMaster and asDataSearch arrays have 1 to 1 \n\t\t\t\t\t * mapping\n\t\t\t\t\t */\n\t\t\t\t\tfor ( i=0 ; i<oSettings.aiDisplayMaster.length ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( rpSearch.test(oSettings.asDataSearch[i]) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toSettings.aiDisplay.push( oSettings.aiDisplayMaster[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t  }\n\t\t\t  else\n\t\t\t\t{\n\t\t\t  \t/* Using old search array - refine it - do it this way for speed\n\t\t\t  \t * Don't have to search the whole master array again\n\t\t\t\t\t */\n\t\t\t  \tvar iIndexCorrector = 0;\n\t\t\t  \t\n\t\t\t  \t/* Search the current results */\n\t\t\t  \tfor ( i=0 ; i<oSettings.asDataSearch.length ; i++ )\n\t\t\t\t\t{\n\t\t\t  \t\tif ( ! rpSearch.test(oSettings.asDataSearch[i]) )\n\t\t\t\t\t\t{\n\t\t\t  \t\t\toSettings.aiDisplay.splice( i-iIndexCorrector, 1 );\n\t\t\t  \t\t\tiIndexCorrector++;\n\t\t\t  \t\t}\n\t\t\t  \t}\n\t\t\t  }\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Create an array which can be quickly search through\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iMaster use the master data array - optional\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBuildSearchArray ( oSettings, iMaster )\n\t\t{\n\t\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\t/* Clear out the old data */\n\t\t\t\toSettings.asDataSearch = [];\n\t\t\n\t\t\t\tvar aiFilterColumns = _fnGetColumns( oSettings, 'bSearchable' );\n\t\t\t\tvar aiIndex = (iMaster===1) ?\n\t\t\t\t \toSettings.aiDisplayMaster :\n\t\t\t\t \toSettings.aiDisplay;\n\t\t\t\t\n\t\t\t\tfor ( var i=0, iLen=aiIndex.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\toSettings.asDataSearch[i] = _fnBuildSearchRow(\n\t\t\t\t\t\toSettings,\n\t\t\t\t\t\t_fnGetRowData( oSettings, aiIndex[i], 'filter', aiFilterColumns )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a searchable string from a single data row\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {array} aData Row data array to use for the data to search\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBuildSearchRow( oSettings, aData )\n\t\t{\n\t\t\tvar sSearch = aData.join('  ');\n\t\t\t\n\t\t\t/* If it looks like there is an HTML entity in the string, attempt to decode it */\n\t\t\tif ( sSearch.indexOf('&') !== -1 )\n\t\t\t{\n\t\t\t\tsSearch = $('<div>').html(sSearch).text();\n\t\t\t}\n\t\t\t\n\t\t\t// Strip newline characters\n\t\t\treturn sSearch.replace( /[\\n\\r]/g, \" \" );\n\t\t}\n\t\t\n\t\t/**\n\t\t * Build a regular expression object suitable for searching a table\n\t\t *  @param {string} sSearch string to search for\n\t\t *  @param {bool} bRegex treat as a regular expression or not\n\t\t *  @param {bool} bSmart perform smart filtering or not\n\t\t *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n\t\t *  @returns {RegExp} constructed object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFilterCreateSearch( sSearch, bRegex, bSmart, bCaseInsensitive )\n\t\t{\n\t\t\tvar asSearch, sRegExpString;\n\t\t\t\n\t\t\tif ( bSmart )\n\t\t\t{\n\t\t\t\t/* Generate the regular expression to use. Something along the lines of:\n\t\t\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo\\b)(?=.*?\\bthree\\b).*$\n\t\t\t\t */\n\t\t\t\tasSearch = bRegex ? sSearch.split( ' ' ) : _fnEscapeRegex( sSearch ).split( ' ' );\n\t\t\t\tsRegExpString = '^(?=.*?'+asSearch.join( ')(?=.*?' )+').*$';\n\t\t\t\treturn new RegExp( sRegExpString, bCaseInsensitive ? \"i\" : \"\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsSearch = bRegex ? sSearch : _fnEscapeRegex( sSearch );\n\t\t\t\treturn new RegExp( sSearch, bCaseInsensitive ? \"i\" : \"\" );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Convert raw data into something that the user can search on\n\t\t *  @param {string} sData data to be modified\n\t\t *  @param {string} sType data type\n\t\t *  @returns {string} search string\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnDataToSearch ( sData, sType )\n\t\t{\n\t\t\tif ( typeof DataTable.ext.ofnSearch[sType] === \"function\" )\n\t\t\t{\n\t\t\t\treturn DataTable.ext.ofnSearch[sType]( sData );\n\t\t\t}\n\t\t\telse if ( sData === null )\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\telse if ( sType == \"html\" )\n\t\t\t{\n\t\t\t\treturn sData.replace(/[\\r\\n]/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t\t}\n\t\t\telse if ( typeof sData === \"string\" )\n\t\t\t{\n\t\t\t\treturn sData.replace(/[\\r\\n]/g,\" \");\n\t\t\t}\n\t\t\treturn sData;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * scape a string such that it can be used in a regular expression\n\t\t *  @param {string} sVal string to escape\n\t\t *  @returns {string} escaped string\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnEscapeRegex ( sVal )\n\t\t{\n\t\t\tvar acEscape = [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ];\n\t\t\tvar reReplace = new RegExp( '(\\\\' + acEscape.join('|\\\\') + ')', 'g' );\n\t\t\treturn sVal.replace(reReplace, '\\\\$1');\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Generate the node required for the info display\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {node} Information element\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlInfo ( oSettings )\n\t\t{\n\t\t\tvar nInfo = document.createElement( 'div' );\n\t\t\tnInfo.className = oSettings.oClasses.sInfo;\n\t\t\t\n\t\t\t/* Actions that are to be taken once only for this feature */\n\t\t\tif ( !oSettings.aanFeatures.i )\n\t\t\t{\n\t\t\t\t/* Add draw callback */\n\t\t\t\toSettings.aoDrawCallback.push( {\n\t\t\t\t\t\"fn\": _fnUpdateInfo,\n\t\t\t\t\t\"sName\": \"information\"\n\t\t\t\t} );\n\t\t\t\t\n\t\t\t\t/* Add id */\n\t\t\t\tnInfo.id = oSettings.sTableId+'_info';\n\t\t\t}\n\t\t\toSettings.nTable.setAttribute( 'aria-describedby', oSettings.sTableId+'_info' );\n\t\t\t\n\t\t\treturn nInfo;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Update the information elements in the display\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnUpdateInfo ( oSettings )\n\t\t{\n\t\t\t/* Show information about the table */\n\t\t\tif ( !oSettings.oFeatures.bInfo || oSettings.aanFeatures.i.length === 0 )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar\n\t\t\t\toLang = oSettings.oLanguage,\n\t\t\t\tiStart = oSettings._iDisplayStart+1,\n\t\t\t\tiEnd = oSettings.fnDisplayEnd(),\n\t\t\t\tiMax = oSettings.fnRecordsTotal(),\n\t\t\t\tiTotal = oSettings.fnRecordsDisplay(),\n\t\t\t\tsOut;\n\t\t\t\n\t\t\tif ( iTotal === 0 )\n\t\t\t{\n\t\t\t\t/* Empty record set */\n\t\t\t\tsOut = oLang.sInfoEmpty;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t/* Normal record set */\n\t\t\t\tsOut = oLang.sInfo;\n\t\t\t}\n\t\t\n\t\t\tif ( iTotal != iMax )\n\t\t\t{\n\t\t\t\t/* Record set after filtering */\n\t\t\t\tsOut += ' ' + oLang.sInfoFiltered;\n\t\t\t}\n\t\t\n\t\t\t// Convert the macros\n\t\t\tsOut += oLang.sInfoPostFix;\n\t\t\tsOut = _fnInfoMacros( oSettings, sOut );\n\t\t\t\n\t\t\tif ( oLang.fnInfoCallback !== null )\n\t\t\t{\n\t\t\t\tsOut = oLang.fnInfoCallback.call( oSettings.oInstance, \n\t\t\t\t\toSettings, iStart, iEnd, iMax, iTotal, sOut );\n\t\t\t}\n\t\t\t\n\t\t\tvar n = oSettings.aanFeatures.i;\n\t\t\tfor ( var i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t$(n[i]).html( sOut );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tfunction _fnInfoMacros ( oSettings, str )\n\t\t{\n\t\t\tvar\n\t\t\t\tiStart = oSettings._iDisplayStart+1,\n\t\t\t\tsStart = oSettings.fnFormatNumber( iStart ),\n\t\t\t\tiEnd = oSettings.fnDisplayEnd(),\n\t\t\t\tsEnd = oSettings.fnFormatNumber( iEnd ),\n\t\t\t\tiTotal = oSettings.fnRecordsDisplay(),\n\t\t\t\tsTotal = oSettings.fnFormatNumber( iTotal ),\n\t\t\t\tiMax = oSettings.fnRecordsTotal(),\n\t\t\t\tsMax = oSettings.fnFormatNumber( iMax );\n\t\t\n\t\t\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only\n\t\t\t// internally\n\t\t\tif ( oSettings.oScroll.bInfinite )\n\t\t\t{\n\t\t\t\tsStart = oSettings.fnFormatNumber( 1 );\n\t\t\t}\n\t\t\n\t\t\treturn str.\n\t\t\t\treplace(/_START_/g, sStart).\n\t\t\t\treplace(/_END_/g,   sEnd).\n\t\t\t\treplace(/_TOTAL_/g, sTotal).\n\t\t\t\treplace(/_MAX_/g,   sMax);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * Draw the table for the first time, adding all required features\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnInitialise ( oSettings )\n\t\t{\n\t\t\tvar i, iLen, iAjaxStart=oSettings.iInitDisplayStart;\n\t\t\t\n\t\t\t/* Ensure that the table data is fully initialised */\n\t\t\tif ( oSettings.bInitialised === false )\n\t\t\t{\n\t\t\t\tsetTimeout( function(){ _fnInitialise( oSettings ); }, 200 );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Show the display HTML options */\n\t\t\t_fnAddOptionsHtml( oSettings );\n\t\t\t\n\t\t\t/* Build and draw the header / footer for the table */\n\t\t\t_fnBuildHead( oSettings );\n\t\t\t_fnDrawHead( oSettings, oSettings.aoHeader );\n\t\t\tif ( oSettings.nTFoot )\n\t\t\t{\n\t\t\t\t_fnDrawHead( oSettings, oSettings.aoFooter );\n\t\t\t}\n\t\t\n\t\t\t/* Okay to show that something is going on now */\n\t\t\t_fnProcessingDisplay( oSettings, true );\n\t\t\t\n\t\t\t/* Calculate sizes for columns */\n\t\t\tif ( oSettings.oFeatures.bAutoWidth )\n\t\t\t{\n\t\t\t\t_fnCalculateColumnWidths( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].sWidth !== null )\n\t\t\t\t{\n\t\t\t\t\toSettings.aoColumns[i].nTh.style.width = _fnStringToCss( oSettings.aoColumns[i].sWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* If there is default sorting required - let's do it. The sort function will do the\n\t\t\t * drawing for us. Otherwise we draw the table regardless of the Ajax source - this allows\n\t\t\t * the table to look initialised for Ajax sourcing data (show 'loading' message possibly)\n\t\t\t */\n\t\t\tif ( oSettings.oFeatures.bSort )\n\t\t\t{\n\t\t\t\t_fnSort( oSettings );\n\t\t\t}\n\t\t\telse if ( oSettings.oFeatures.bFilter )\n\t\t\t{\n\t\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* if there is an ajax source load the data */\n\t\t\tif ( oSettings.sAjaxSource !== null && !oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\tvar aoData = [];\n\t\t\t\t_fnServerParams( oSettings, aoData );\n\t\t\t\toSettings.fnServerData.call( oSettings.oInstance, oSettings.sAjaxSource, aoData, function(json) {\n\t\t\t\t\tvar aData = (oSettings.sAjaxDataProp !== \"\") ?\n\t\t\t\t\t \t_fnGetObjectDataFn( oSettings.sAjaxDataProp )(json) : json;\n\t\t\n\t\t\t\t\t/* Got the data - add it to the table */\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddData( oSettings, aData[i] );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Reset the init display for cookie saving. We've already done a filter, and\n\t\t\t\t\t * therefore cleared it before. So we need to make it appear 'fresh'\n\t\t\t\t\t */\n\t\t\t\t\toSettings.iInitDisplayStart = iAjaxStart;\n\t\t\t\t\t\n\t\t\t\t\tif ( oSettings.oFeatures.bSort )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnSort( oSettings );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\t\t_fnDraw( oSettings );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t\t\t_fnInitComplete( oSettings, json );\n\t\t\t\t}, oSettings );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Server-side processing initialisation complete is done at the end of _fnDraw */\n\t\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t\t{\n\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t\t_fnInitComplete( oSettings );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Draw the table for the first time, adding all required features\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} [json] JSON from the server that completed the table, if using Ajax source\n\t\t *    with client-side processing (optional)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnInitComplete ( oSettings, json )\n\t\t{\n\t\t\toSettings._bInitComplete = true;\n\t\t\t_fnCallbackFire( oSettings, 'aoInitComplete', 'init', [oSettings, json] );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Language compatibility - when certain options are given, and others aren't, we\n\t\t * need to duplicate the values over, in order to provide backwards compatibility\n\t\t * with older language files.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnLanguageCompat( oLanguage )\n\t\t{\n\t\t\tvar oDefaults = DataTable.defaults.oLanguage;\n\t\t\n\t\t\t/* Backwards compatibility - if there is no sEmptyTable given, then use the same as\n\t\t\t * sZeroRecords - assuming that is given.\n\t\t\t */\n\t\t\tif ( !oLanguage.sEmptyTable && oLanguage.sZeroRecords &&\n\t\t\t\toDefaults.sEmptyTable === \"No data available in table\" )\n\t\t\t{\n\t\t\t\t_fnMap( oLanguage, oLanguage, 'sZeroRecords', 'sEmptyTable' );\n\t\t\t}\n\t\t\n\t\t\t/* Likewise with loading records */\n\t\t\tif ( !oLanguage.sLoadingRecords && oLanguage.sZeroRecords &&\n\t\t\t\toDefaults.sLoadingRecords === \"Loading...\" )\n\t\t\t{\n\t\t\t\t_fnMap( oLanguage, oLanguage, 'sZeroRecords', 'sLoadingRecords' );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * Generate the node required for user display length changing\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {node} Display length feature node\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlLength ( oSettings )\n\t\t{\n\t\t\tif ( oSettings.oScroll.bInfinite )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\t/* This can be overruled by not using the _MENU_ var/macro in the language variable */\n\t\t\tvar sName = 'name=\"'+oSettings.sTableId+'_length\"';\n\t\t\tvar sStdMenu = '<select size=\"1\" '+sName+'>';\n\t\t\tvar i, iLen;\n\t\t\tvar aLengthMenu = oSettings.aLengthMenu;\n\t\t\t\n\t\t\tif ( aLengthMenu.length == 2 && typeof aLengthMenu[0] === 'object' && \n\t\t\t\t\ttypeof aLengthMenu[1] === 'object' )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=aLengthMenu[0].length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tsStdMenu += '<option value=\"'+aLengthMenu[0][i]+'\">'+aLengthMenu[1][i]+'</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=aLengthMenu.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tsStdMenu += '<option value=\"'+aLengthMenu[i]+'\">'+aLengthMenu[i]+'</option>';\n\t\t\t\t}\n\t\t\t}\n\t\t\tsStdMenu += '</select>';\n\t\t\t\n\t\t\tvar nLength = document.createElement( 'div' );\n\t\t\tif ( !oSettings.aanFeatures.l )\n\t\t\t{\n\t\t\t\tnLength.id = oSettings.sTableId+'_length';\n\t\t\t}\n\t\t\tnLength.className = oSettings.oClasses.sLength;\n\t\t\tnLength.innerHTML = '<label>'+oSettings.oLanguage.sLengthMenu.replace( '_MENU_', sStdMenu )+'</label>';\n\t\t\t\n\t\t\t/*\n\t\t\t * Set the length to the current display length - thanks to Andrea Pavlovic for this fix,\n\t\t\t * and Stefan Skopnik for fixing the fix!\n\t\t\t */\n\t\t\t$('select option[value=\"'+oSettings._iDisplayLength+'\"]', nLength).attr(\"selected\", true);\n\t\t\t\n\t\t\t$('select', nLength).bind( 'change.DT', function(e) {\n\t\t\t\tvar iVal = $(this).val();\n\t\t\t\t\n\t\t\t\t/* Update all other length options for the new display */\n\t\t\t\tvar n = oSettings.aanFeatures.l;\n\t\t\t\tfor ( i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( n[i] != this.parentNode )\n\t\t\t\t\t{\n\t\t\t\t\t\t$('select', n[i]).val( iVal );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Redraw the table */\n\t\t\t\toSettings._iDisplayLength = parseInt(iVal, 10);\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\n\t\t\t\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\t\t\t\tif ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = oSettings.fnDisplayEnd() - oSettings._iDisplayLength;\n\t\t\t\t\tif ( oSettings._iDisplayStart < 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( oSettings._iDisplayLength == -1 )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t} );\n\t\t\n\t\t\n\t\t\t$('select', nLength).attr('aria-controls', oSettings.sTableId);\n\t\t\t\n\t\t\treturn nLength;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Recalculate the end point based on the start point\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCalculateEnd( oSettings )\n\t\t{\n\t\t\tif ( oSettings.oFeatures.bPaginate === false )\n\t\t\t{\n\t\t\t\toSettings._iDisplayEnd = oSettings.aiDisplay.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Set the end point of the display - based on how many elements there are\n\t\t\t\t * still to display\n\t\t\t\t */\n\t\t\t\tif ( oSettings._iDisplayStart + oSettings._iDisplayLength > oSettings.aiDisplay.length ||\n\t\t\t\t\t   oSettings._iDisplayLength == -1 )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayEnd = oSettings.aiDisplay.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayEnd = oSettings._iDisplayStart + oSettings._iDisplayLength;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t\t * Note that most of the paging logic is done in \n\t\t * DataTable.ext.oPagination\n\t\t */\n\t\t\n\t\t/**\n\t\t * Generate the node required for default pagination\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {node} Pagination feature node\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlPaginate ( oSettings )\n\t\t{\n\t\t\tif ( oSettings.oScroll.bInfinite )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\tvar nPaginate = document.createElement( 'div' );\n\t\t\tnPaginate.className = oSettings.oClasses.sPaging+oSettings.sPaginationType;\n\t\t\t\n\t\t\tDataTable.ext.oPagination[ oSettings.sPaginationType ].fnInit( oSettings, nPaginate, \n\t\t\t\tfunction( oSettings ) {\n\t\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\t_fnDraw( oSettings );\n\t\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\t/* Add a draw callback for the pagination on first instance, to update the paging display */\n\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t{\n\t\t\t\toSettings.aoDrawCallback.push( {\n\t\t\t\t\t\"fn\": function( oSettings ) {\n\t\t\t\t\t\tDataTable.ext.oPagination[ oSettings.sPaginationType ].fnUpdate( oSettings, function( oSettings ) {\n\t\t\t\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\t\t\t_fnDraw( oSettings );\n\t\t\t\t\t\t} );\n\t\t\t\t\t},\n\t\t\t\t\t\"sName\": \"pagination\"\n\t\t\t\t} );\n\t\t\t}\n\t\t\treturn nPaginate;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Alter the display settings to change the page\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer)\n\t\t *  @returns {bool} true page has changed, false - no change (no effect) eg 'first' on page 1\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnPageChange ( oSettings, mAction )\n\t\t{\n\t\t\tvar iOldStart = oSettings._iDisplayStart;\n\t\t\t\n\t\t\tif ( typeof mAction === \"number\" )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = mAction * oSettings._iDisplayLength;\n\t\t\t\tif ( oSettings._iDisplayStart > oSettings.fnRecordsDisplay() )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( mAction == \"first\" )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t}\n\t\t\telse if ( mAction == \"previous\" )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart = oSettings._iDisplayLength>=0 ?\n\t\t\t\t\toSettings._iDisplayStart - oSettings._iDisplayLength :\n\t\t\t\t\t0;\n\t\t\t\t\n\t\t\t\t/* Correct for under-run */\n\t\t\t\tif ( oSettings._iDisplayStart < 0 )\n\t\t\t\t{\n\t\t\t\t  oSettings._iDisplayStart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( mAction == \"next\" )\n\t\t\t{\n\t\t\t\tif ( oSettings._iDisplayLength >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Make sure we are not over running the display array */\n\t\t\t\t\tif ( oSettings._iDisplayStart + oSettings._iDisplayLength < oSettings.fnRecordsDisplay() )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings._iDisplayStart += oSettings._iDisplayLength;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( mAction == \"last\" )\n\t\t\t{\n\t\t\t\tif ( oSettings._iDisplayLength >= 0 )\n\t\t\t\t{\n\t\t\t\t\tvar iPages = parseInt( (oSettings.fnRecordsDisplay()-1) / oSettings._iDisplayLength, 10 ) + 1;\n\t\t\t\t\toSettings._iDisplayStart = (iPages-1) * oSettings._iDisplayLength;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t_fnLog( oSettings, 0, \"Unknown paging action: \"+mAction );\n\t\t\t}\n\t\t\t$(oSettings.oInstance).trigger('page', oSettings);\n\t\t\t\n\t\t\treturn iOldStart != oSettings._iDisplayStart;\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * Generate the node required for the processing node\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {node} Processing element\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlProcessing ( oSettings )\n\t\t{\n\t\t\tvar nProcessing = document.createElement( 'div' );\n\t\t\t\n\t\t\tif ( !oSettings.aanFeatures.r )\n\t\t\t{\n\t\t\t\tnProcessing.id = oSettings.sTableId+'_processing';\n\t\t\t}\n\t\t\tnProcessing.innerHTML = oSettings.oLanguage.sProcessing;\n\t\t\tnProcessing.className = oSettings.oClasses.sProcessing;\n\t\t\toSettings.nTable.parentNode.insertBefore( nProcessing, oSettings.nTable );\n\t\t\t\n\t\t\treturn nProcessing;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Display or hide the processing indicator\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {bool} bShow Show the processing indicator (true) or not (false)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnProcessingDisplay ( oSettings, bShow )\n\t\t{\n\t\t\tif ( oSettings.oFeatures.bProcessing )\n\t\t\t{\n\t\t\t\tvar an = oSettings.aanFeatures.r;\n\t\t\t\tfor ( var i=0, iLen=an.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tan[i].style.visibility = bShow ? \"visible\" : \"hidden\";\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t$(oSettings.oInstance).trigger('processing', [oSettings, bShow]);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Add any control elements for the table - specifically scrolling\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {node} Node to add to the DOM\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnFeatureHtmlTable ( oSettings )\n\t\t{\n\t\t\t/* Check if scrolling is enabled or not - if not then leave the DOM unaltered */\n\t\t\tif ( oSettings.oScroll.sX === \"\" && oSettings.oScroll.sY === \"\" )\n\t\t\t{\n\t\t\t\treturn oSettings.nTable;\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * The HTML structure that we want to generate in this function is:\n\t\t\t *  div - nScroller\n\t\t\t *    div - nScrollHead\n\t\t\t *      div - nScrollHeadInner\n\t\t\t *        table - nScrollHeadTable\n\t\t\t *          thead - nThead\n\t\t\t *    div - nScrollBody\n\t\t\t *      table - oSettings.nTable\n\t\t\t *        thead - nTheadSize\n\t\t\t *        tbody - nTbody\n\t\t\t *    div - nScrollFoot\n\t\t\t *      div - nScrollFootInner\n\t\t\t *        table - nScrollFootTable\n\t\t\t *          tfoot - nTfoot\n\t\t\t */\n\t\t\tvar\n\t\t\t \tnScroller = document.createElement('div'),\n\t\t\t \tnScrollHead = document.createElement('div'),\n\t\t\t \tnScrollHeadInner = document.createElement('div'),\n\t\t\t \tnScrollBody = document.createElement('div'),\n\t\t\t \tnScrollFoot = document.createElement('div'),\n\t\t\t \tnScrollFootInner = document.createElement('div'),\n\t\t\t \tnScrollHeadTable = oSettings.nTable.cloneNode(false),\n\t\t\t \tnScrollFootTable = oSettings.nTable.cloneNode(false),\n\t\t\t\tnThead = oSettings.nTable.getElementsByTagName('thead')[0],\n\t\t\t \tnTfoot = oSettings.nTable.getElementsByTagName('tfoot').length === 0 ? null : \n\t\t\t\t\toSettings.nTable.getElementsByTagName('tfoot')[0],\n\t\t\t\toClasses = oSettings.oClasses;\n\t\t\t\n\t\t\tnScrollHead.appendChild( nScrollHeadInner );\n\t\t\tnScrollFoot.appendChild( nScrollFootInner );\n\t\t\tnScrollBody.appendChild( oSettings.nTable );\n\t\t\tnScroller.appendChild( nScrollHead );\n\t\t\tnScroller.appendChild( nScrollBody );\n\t\t\tnScrollHeadInner.appendChild( nScrollHeadTable );\n\t\t\tnScrollHeadTable.appendChild( nThead );\n\t\t\tif ( nTfoot !== null )\n\t\t\t{\n\t\t\t\tnScroller.appendChild( nScrollFoot );\n\t\t\t\tnScrollFootInner.appendChild( nScrollFootTable );\n\t\t\t\tnScrollFootTable.appendChild( nTfoot );\n\t\t\t}\n\t\t\t\n\t\t\tnScroller.className = oClasses.sScrollWrapper;\n\t\t\tnScrollHead.className = oClasses.sScrollHead;\n\t\t\tnScrollHeadInner.className = oClasses.sScrollHeadInner;\n\t\t\tnScrollBody.className = oClasses.sScrollBody;\n\t\t\tnScrollFoot.className = oClasses.sScrollFoot;\n\t\t\tnScrollFootInner.className = oClasses.sScrollFootInner;\n\t\t\t\n\t\t\tif ( oSettings.oScroll.bAutoCss )\n\t\t\t{\n\t\t\t\tnScrollHead.style.overflow = \"hidden\";\n\t\t\t\tnScrollHead.style.position = \"relative\";\n\t\t\t\tnScrollFoot.style.overflow = \"hidden\";\n\t\t\t\tnScrollBody.style.overflow = \"auto\";\n\t\t\t}\n\t\t\t\n\t\t\tnScrollHead.style.border = \"0\";\n\t\t\tnScrollHead.style.width = \"100%\";\n\t\t\tnScrollFoot.style.border = \"0\";\n\t\t\tnScrollHeadInner.style.width = oSettings.oScroll.sXInner !== \"\" ?\n\t\t\t\toSettings.oScroll.sXInner : \"100%\"; /* will be overwritten */\n\t\t\t\n\t\t\t/* Modify attributes to respect the clones */\n\t\t\tnScrollHeadTable.removeAttribute('id');\n\t\t\tnScrollHeadTable.style.marginLeft = \"0\";\n\t\t\toSettings.nTable.style.marginLeft = \"0\";\n\t\t\tif ( nTfoot !== null )\n\t\t\t{\n\t\t\t\tnScrollFootTable.removeAttribute('id');\n\t\t\t\tnScrollFootTable.style.marginLeft = \"0\";\n\t\t\t}\n\t\t\t\n\t\t\t/* Move caption elements from the body to the header, footer or leave where it is\n\t\t\t * depending on the configuration. Note that the DTD says there can be only one caption */\n\t\t\tvar nCaption = $(oSettings.nTable).children('caption');\n\t\t\tif ( nCaption.length > 0 )\n\t\t\t{\n\t\t\t\tnCaption = nCaption[0];\n\t\t\t\tif ( nCaption._captionSide === \"top\" )\n\t\t\t\t{\n\t\t\t\t\tnScrollHeadTable.appendChild( nCaption );\n\t\t\t\t}\n\t\t\t\telse if ( nCaption._captionSide === \"bottom\" && nTfoot )\n\t\t\t\t{\n\t\t\t\t\tnScrollFootTable.appendChild( nCaption );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Sizing\n\t\t\t */\n\t\t\t/* When x-scrolling add the width and a scroller to move the header with the body */\n\t\t\tif ( oSettings.oScroll.sX !== \"\" )\n\t\t\t{\n\t\t\t\tnScrollHead.style.width = _fnStringToCss( oSettings.oScroll.sX );\n\t\t\t\tnScrollBody.style.width = _fnStringToCss( oSettings.oScroll.sX );\n\t\t\t\t\n\t\t\t\tif ( nTfoot !== null )\n\t\t\t\t{\n\t\t\t\t\tnScrollFoot.style.width = _fnStringToCss( oSettings.oScroll.sX );\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* When the body is scrolled, then we also want to scroll the headers */\n\t\t\t\t$(nScrollBody).scroll( function (e) {\n\t\t\t\t\tnScrollHead.scrollLeft = this.scrollLeft;\n\t\t\t\t\t\n\t\t\t\t\tif ( nTfoot !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\tnScrollFoot.scrollLeft = this.scrollLeft;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\t/* When yscrolling, add the height */\n\t\t\tif ( oSettings.oScroll.sY !== \"\" )\n\t\t\t{\n\t\t\t\tnScrollBody.style.height = _fnStringToCss( oSettings.oScroll.sY );\n\t\t\t}\n\t\t\t\n\t\t\t/* Redraw - align columns across the tables */\n\t\t\toSettings.aoDrawCallback.push( {\n\t\t\t\t\"fn\": _fnScrollDraw,\n\t\t\t\t\"sName\": \"scrolling\"\n\t\t\t} );\n\t\t\t\n\t\t\t/* Infinite scrolling event handlers */\n\t\t\tif ( oSettings.oScroll.bInfinite )\n\t\t\t{\n\t\t\t\t$(nScrollBody).scroll( function() {\n\t\t\t\t\t/* Use a blocker to stop scrolling from loading more data while other data is still loading */\n\t\t\t\t\tif ( !oSettings.bDrawing && $(this).scrollTop() !== 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Check if we should load the next data set */\n\t\t\t\t\t\tif ( $(this).scrollTop() + $(this).height() > \n\t\t\t\t\t\t\t$(oSettings.nTable).height() - oSettings.oScroll.iLoadGap )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* Only do the redraw if we have to - we might be at the end of the data */\n\t\t\t\t\t\t\tif ( oSettings.fnDisplayEnd() < oSettings.fnRecordsDisplay() )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_fnPageChange( oSettings, 'next' );\n\t\t\t\t\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t\t\t\t\t_fnDraw( oSettings );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\toSettings.nScrollHead = nScrollHead;\n\t\t\toSettings.nScrollFoot = nScrollFoot;\n\t\t\t\n\t\t\treturn nScroller;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Update the various tables for resizing. It's a bit of a pig this function, but\n\t\t * basically the idea to:\n\t\t *   1. Re-create the table inside the scrolling div\n\t\t *   2. Take live measurements from the DOM\n\t\t *   3. Apply the measurements\n\t\t *   4. Clean up\n\t\t *  @param {object} o dataTables settings object\n\t\t *  @returns {node} Node to add to the DOM\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnScrollDraw ( o )\n\t\t{\n\t\t\tvar\n\t\t\t\tnScrollHeadInner = o.nScrollHead.getElementsByTagName('div')[0],\n\t\t\t\tnScrollHeadTable = nScrollHeadInner.getElementsByTagName('table')[0],\n\t\t\t\tnScrollBody = o.nTable.parentNode,\n\t\t\t\ti, iLen, j, jLen, anHeadToSize, anHeadSizers, anFootSizers, anFootToSize, oStyle, iVis,\n\t\t\t\tnTheadSize, nTfootSize,\n\t\t\t\tiWidth, aApplied=[], aAppliedFooter=[], iSanityWidth,\n\t\t\t\tnScrollFootInner = (o.nTFoot !== null) ? o.nScrollFoot.getElementsByTagName('div')[0] : null,\n\t\t\t\tnScrollFootTable = (o.nTFoot !== null) ? nScrollFootInner.getElementsByTagName('table')[0] : null,\n\t\t\t\tie67 = o.oBrowser.bScrollOversize,\n\t\t\t\tzeroOut = function(nSizer) {\n\t\t\t\t\toStyle = nSizer.style;\n\t\t\t\t\toStyle.paddingTop = \"0\";\n\t\t\t\t\toStyle.paddingBottom = \"0\";\n\t\t\t\t\toStyle.borderTopWidth = \"0\";\n\t\t\t\t\toStyle.borderBottomWidth = \"0\";\n\t\t\t\t\toStyle.height = 0;\n\t\t\t\t};\n\t\t\t\n\t\t\t/*\n\t\t\t * 1. Re-create the table inside the scrolling div\n\t\t\t */\n\t\t\t\n\t\t\t/* Remove the old minimised thead and tfoot elements in the inner table */\n\t\t\t$(o.nTable).children('thead, tfoot').remove();\n\t\t\n\t\t\t/* Clone the current header and footer elements and then place it into the inner table */\n\t\t\tnTheadSize = $(o.nTHead).clone()[0];\n\t\t\to.nTable.insertBefore( nTheadSize, o.nTable.childNodes[0] );\n\t\t\tanHeadToSize = o.nTHead.getElementsByTagName('tr');\n\t\t\tanHeadSizers = nTheadSize.getElementsByTagName('tr');\n\t\t\t\n\t\t\tif ( o.nTFoot !== null )\n\t\t\t{\n\t\t\t\tnTfootSize = $(o.nTFoot).clone()[0];\n\t\t\t\to.nTable.insertBefore( nTfootSize, o.nTable.childNodes[1] );\n\t\t\t\tanFootToSize = o.nTFoot.getElementsByTagName('tr');\n\t\t\t\tanFootSizers = nTfootSize.getElementsByTagName('tr');\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * 2. Take live measurements from the DOM - do not alter the DOM itself!\n\t\t\t */\n\t\t\t\n\t\t\t/* Remove old sizing and apply the calculated column widths\n\t\t\t * Get the unique column headers in the newly created (cloned) header. We want to apply the\n\t\t\t * calculated sizes to this header\n\t\t\t */\n\t\t\tif ( o.oScroll.sX === \"\" )\n\t\t\t{\n\t\t\t\tnScrollBody.style.width = '100%';\n\t\t\t\tnScrollHeadInner.parentNode.style.width = '100%';\n\t\t\t}\n\t\t\t\n\t\t\tvar nThs = _fnGetUniqueThs( o, nTheadSize );\n\t\t\tfor ( i=0, iLen=nThs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tiVis = _fnVisibleToColumnIndex( o, i );\n\t\t\t\tnThs[i].style.width = o.aoColumns[iVis].sWidth;\n\t\t\t}\n\t\t\t\n\t\t\tif ( o.nTFoot !== null )\n\t\t\t{\n\t\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\t\tn.style.width = \"\";\n\t\t\t\t}, anFootSizers );\n\t\t\t}\n\t\t\n\t\t\t// If scroll collapse is enabled, when we put the headers back into the body for sizing, we\n\t\t\t// will end up forcing the scrollbar to appear, making our measurements wrong for when we\n\t\t\t// then hide it (end of this function), so add the header height to the body scroller.\n\t\t\tif ( o.oScroll.bCollapse && o.oScroll.sY !== \"\" )\n\t\t\t{\n\t\t\t\tnScrollBody.style.height = (nScrollBody.offsetHeight + o.nTHead.offsetHeight)+\"px\";\n\t\t\t}\n\t\t\t\n\t\t\t/* Size the table as a whole */\n\t\t\tiSanityWidth = $(o.nTable).outerWidth();\n\t\t\tif ( o.oScroll.sX === \"\" )\n\t\t\t{\n\t\t\t\t/* No x scrolling */\n\t\t\t\to.nTable.style.width = \"100%\";\n\t\t\t\t\n\t\t\t\t/* I know this is rubbish - but IE7 will make the width of the table when 100% include\n\t\t\t\t * the scrollbar - which is shouldn't. When there is a scrollbar we need to take this\n\t\t\t\t * into account.\n\t\t\t\t */\n\t\t\t\tif ( ie67 && ($('tbody', nScrollBody).height() > nScrollBody.offsetHeight || \n\t\t\t\t\t$(nScrollBody).css('overflow-y') == \"scroll\")  )\n\t\t\t\t{\n\t\t\t\t\to.nTable.style.width = _fnStringToCss( $(o.nTable).outerWidth() - o.oScroll.iBarWidth);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif ( o.oScroll.sXInner !== \"\" )\n\t\t\t\t{\n\t\t\t\t\t/* x scroll inner has been given - use it */\n\t\t\t\t\to.nTable.style.width = _fnStringToCss(o.oScroll.sXInner);\n\t\t\t\t}\n\t\t\t\telse if ( iSanityWidth == $(nScrollBody).width() &&\n\t\t\t\t   $(nScrollBody).height() < $(o.nTable).height() )\n\t\t\t\t{\n\t\t\t\t\t/* There is y-scrolling - try to take account of the y scroll bar */\n\t\t\t\t\to.nTable.style.width = _fnStringToCss( iSanityWidth-o.oScroll.iBarWidth );\n\t\t\t\t\tif ( $(o.nTable).outerWidth() > iSanityWidth-o.oScroll.iBarWidth )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Not possible to take account of it */\n\t\t\t\t\t\to.nTable.style.width = _fnStringToCss( iSanityWidth );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t/* All else fails */\n\t\t\t\t\to.nTable.style.width = _fnStringToCss( iSanityWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Recalculate the sanity width - now that we've applied the required width, before it was\n\t\t\t * a temporary variable. This is required because the column width calculation is done\n\t\t\t * before this table DOM is created.\n\t\t\t */\n\t\t\tiSanityWidth = $(o.nTable).outerWidth();\n\t\t\t\n\t\t\t/* We want the hidden header to have zero height, so remove padding and borders. Then\n\t\t\t * set the width based on the real headers\n\t\t\t */\n\t\t\t\n\t\t\t// Apply all styles in one pass. Invalidates layout only once because we don't read any \n\t\t\t// DOM properties.\n\t\t\t_fnApplyToChildren( zeroOut, anHeadSizers );\n\t\t\t \n\t\t\t// Read all widths in next pass. Forces layout only once because we do not change \n\t\t\t// any DOM properties.\n\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\taApplied.push( _fnStringToCss( $(nSizer).width() ) );\n\t\t\t}, anHeadSizers );\n\t\t\t \n\t\t\t// Apply all widths in final pass. Invalidates layout only once because we do not\n\t\t\t// read any DOM properties.\n\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\tnToSize.style.width = aApplied[i];\n\t\t\t}, anHeadToSize );\n\t\t\n\t\t\t$(anHeadSizers).height(0);\n\t\t\t\n\t\t\t/* Same again with the footer if we have one */\n\t\t\tif ( o.nTFoot !== null )\n\t\t\t{\n\t\t\t\t_fnApplyToChildren( zeroOut, anFootSizers );\n\t\t\t\t \n\t\t\t\t_fnApplyToChildren( function(nSizer) {\n\t\t\t\t\taAppliedFooter.push( _fnStringToCss( $(nSizer).width() ) );\n\t\t\t\t}, anFootSizers );\n\t\t\t\t \n\t\t\t\t_fnApplyToChildren( function(nToSize, i) {\n\t\t\t\t\tnToSize.style.width = aAppliedFooter[i];\n\t\t\t\t}, anFootToSize );\n\t\t\n\t\t\t\t$(anFootSizers).height(0);\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * 3. Apply the measurements\n\t\t\t */\n\t\t\t\n\t\t\t/* \"Hide\" the header and footer that we used for the sizing. We want to also fix their width\n\t\t\t * to what they currently are\n\t\t\t */\n\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\tnSizer.innerHTML = \"\";\n\t\t\t\tnSizer.style.width = aApplied[i];\n\t\t\t}, anHeadSizers );\n\t\t\t\n\t\t\tif ( o.nTFoot !== null )\n\t\t\t{\n\t\t\t\t_fnApplyToChildren( function(nSizer, i) {\n\t\t\t\t\tnSizer.innerHTML = \"\";\n\t\t\t\t\tnSizer.style.width = aAppliedFooter[i];\n\t\t\t\t}, anFootSizers );\n\t\t\t}\n\t\t\t\n\t\t\t/* Sanity check that the table is of a sensible width. If not then we are going to get\n\t\t\t * misalignment - try to prevent this by not allowing the table to shrink below its min width\n\t\t\t */\n\t\t\tif ( $(o.nTable).outerWidth() < iSanityWidth )\n\t\t\t{\n\t\t\t\t/* The min width depends upon if we have a vertical scrollbar visible or not */\n\t\t\t\tvar iCorrection = ((nScrollBody.scrollHeight > nScrollBody.offsetHeight || \n\t\t\t\t\t$(nScrollBody).css('overflow-y') == \"scroll\")) ?\n\t\t\t\t\t\tiSanityWidth+o.oScroll.iBarWidth : iSanityWidth;\n\t\t\t\t\n\t\t\t\t/* IE6/7 are a law unto themselves... */\n\t\t\t\tif ( ie67 && (nScrollBody.scrollHeight > \n\t\t\t\t\tnScrollBody.offsetHeight || $(nScrollBody).css('overflow-y') == \"scroll\")  )\n\t\t\t\t{\n\t\t\t\t\to.nTable.style.width = _fnStringToCss( iCorrection-o.oScroll.iBarWidth );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Apply the calculated minimum width to the table wrappers */\n\t\t\t\tnScrollBody.style.width = _fnStringToCss( iCorrection );\n\t\t\t\to.nScrollHead.style.width = _fnStringToCss( iCorrection );\n\t\t\t\t\n\t\t\t\tif ( o.nTFoot !== null )\n\t\t\t\t{\n\t\t\t\t\to.nScrollFoot.style.width = _fnStringToCss( iCorrection );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* And give the user a warning that we've stopped the table getting too small */\n\t\t\t\tif ( o.oScroll.sX === \"\" )\n\t\t\t\t{\n\t\t\t\t\t_fnLog( o, 1, \"The table cannot fit into the current element which will cause column\"+\n\t\t\t\t\t\t\" misalignment. The table has been drawn at its minimum possible width.\" );\n\t\t\t\t}\n\t\t\t\telse if ( o.oScroll.sXInner !== \"\" )\n\t\t\t\t{\n\t\t\t\t\t_fnLog( o, 1, \"The table cannot fit into the current element which will cause column\"+\n\t\t\t\t\t\t\" misalignment. Increase the sScrollXInner value or remove it to allow automatic\"+\n\t\t\t\t\t\t\" calculation\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnScrollBody.style.width = _fnStringToCss( '100%' );\n\t\t\t\to.nScrollHead.style.width = _fnStringToCss( '100%' );\n\t\t\t\t\n\t\t\t\tif ( o.nTFoot !== null )\n\t\t\t\t{\n\t\t\t\t\to.nScrollFoot.style.width = _fnStringToCss( '100%' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t * 4. Clean up\n\t\t\t */\n\t\t\tif ( o.oScroll.sY === \"\" )\n\t\t\t{\n\t\t\t\t/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting\n\t\t\t\t * the scrollbar height from the visible display, rather than adding it on. We need to\n\t\t\t\t * set the height in order to sort this. Don't want to do it in any other browsers.\n\t\t\t\t */\n\t\t\t\tif ( ie67 )\n\t\t\t\t{\n\t\t\t\t\tnScrollBody.style.height = _fnStringToCss( o.nTable.offsetHeight+o.oScroll.iBarWidth );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( o.oScroll.sY !== \"\" && o.oScroll.bCollapse )\n\t\t\t{\n\t\t\t\tnScrollBody.style.height = _fnStringToCss( o.oScroll.sY );\n\t\t\t\t\n\t\t\t\tvar iExtra = (o.oScroll.sX !== \"\" && o.nTable.offsetWidth > nScrollBody.offsetWidth) ?\n\t\t\t\t \to.oScroll.iBarWidth : 0;\n\t\t\t\tif ( o.nTable.offsetHeight < nScrollBody.offsetHeight )\n\t\t\t\t{\n\t\t\t\t\tnScrollBody.style.height = _fnStringToCss( o.nTable.offsetHeight+iExtra );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Finally set the width's of the header and footer tables */\n\t\t\tvar iOuterWidth = $(o.nTable).outerWidth();\n\t\t\tnScrollHeadTable.style.width = _fnStringToCss( iOuterWidth );\n\t\t\tnScrollHeadInner.style.width = _fnStringToCss( iOuterWidth );\n\t\t\n\t\t\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t\t\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\t\t\tvar bScrolling = $(o.nTable).height() > nScrollBody.clientHeight || $(nScrollBody).css('overflow-y') == \"scroll\";\n\t\t\tnScrollHeadInner.style.paddingRight = bScrolling ? o.oScroll.iBarWidth+\"px\" : \"0px\";\n\t\t\t\n\t\t\tif ( o.nTFoot !== null )\n\t\t\t{\n\t\t\t\tnScrollFootTable.style.width = _fnStringToCss( iOuterWidth );\n\t\t\t\tnScrollFootInner.style.width = _fnStringToCss( iOuterWidth );\n\t\t\t\tnScrollFootInner.style.paddingRight = bScrolling ? o.oScroll.iBarWidth+\"px\" : \"0px\";\n\t\t\t}\n\t\t\n\t\t\t/* Adjust the position of the header in case we loose the y-scrollbar */\n\t\t\t$(nScrollBody).scroll();\n\t\t\t\n\t\t\t/* If sorting or filtering has occurred, jump the scrolling back to the top */\n\t\t\tif ( o.bSorted || o.bFiltered )\n\t\t\t{\n\t\t\t\tnScrollBody.scrollTop = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Apply a given function to the display child nodes of an element array (typically\n\t\t * TD children of TR rows\n\t\t *  @param {function} fn Method to apply to the objects\n\t\t *  @param array {nodes} an1 List of elements to look through for display children\n\t\t *  @param array {nodes} an2 Another list (identical structure to the first) - optional\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnApplyToChildren( fn, an1, an2 )\n\t\t{\n\t\t\tvar index=0, i=0, iLen=an1.length;\n\t\t\tvar nNode1, nNode2;\n\t\t\n\t\t\twhile ( i < iLen )\n\t\t\t{\n\t\t\t\tnNode1 = an1[i].firstChild;\n\t\t\t\tnNode2 = an2 ? an2[i].firstChild : null;\n\t\t\t\twhile ( nNode1 )\n\t\t\t\t{\n\t\t\t\t\tif ( nNode1.nodeType === 1 )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( an2 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfn( nNode1, nNode2, index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfn( nNode1, index );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\tnNode1 = nNode1.nextSibling;\n\t\t\t\t\tnNode2 = an2 ? nNode2.nextSibling : null;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Convert a CSS unit width to pixels (e.g. 2em)\n\t\t *  @param {string} sWidth width to be converted\n\t\t *  @param {node} nParent parent to get the with for (required for relative widths) - optional\n\t\t *  @returns {int} iWidth width in pixels\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnConvertToWidth ( sWidth, nParent )\n\t\t{\n\t\t\tif ( !sWidth || sWidth === null || sWidth === '' )\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\t\n\t\t\tif ( !nParent )\n\t\t\t{\n\t\t\t\tnParent = document.body;\n\t\t\t}\n\t\t\t\n\t\t\tvar iWidth;\n\t\t\tvar nTmp = document.createElement( \"div\" );\n\t\t\tnTmp.style.width = _fnStringToCss( sWidth );\n\t\t\t\n\t\t\tnParent.appendChild( nTmp );\n\t\t\tiWidth = nTmp.offsetWidth;\n\t\t\tnParent.removeChild( nTmp );\n\t\t\t\n\t\t\treturn ( iWidth );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Calculate the width of columns for the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCalculateColumnWidths ( oSettings )\n\t\t{\n\t\t\tvar iTableWidth = oSettings.nTable.offsetWidth;\n\t\t\tvar iUserInputs = 0;\n\t\t\tvar iTmpWidth;\n\t\t\tvar iVisibleColumns = 0;\n\t\t\tvar iColums = oSettings.aoColumns.length;\n\t\t\tvar i, iIndex, iCorrector, iWidth;\n\t\t\tvar oHeaders = $('th', oSettings.nTHead);\n\t\t\tvar widthAttr = oSettings.nTable.getAttribute('width');\n\t\t\tvar nWrapper = oSettings.nTable.parentNode;\n\t\t\t\n\t\t\t/* Convert any user input sizes into pixel sizes */\n\t\t\tfor ( i=0 ; i<iColums ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t\t{\n\t\t\t\t\tiVisibleColumns++;\n\t\t\t\t\t\n\t\t\t\t\tif ( oSettings.aoColumns[i].sWidth !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\tiTmpWidth = _fnConvertToWidth( oSettings.aoColumns[i].sWidthOrig, \n\t\t\t\t\t\t\tnWrapper );\n\t\t\t\t\t\tif ( iTmpWidth !== null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toSettings.aoColumns[i].sWidth = _fnStringToCss( iTmpWidth );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tiUserInputs++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* If the number of columns in the DOM equals the number that we have to process in \n\t\t\t * DataTables, then we can use the offsets that are created by the web-browser. No custom \n\t\t\t * sizes can be set in order for this to happen, nor scrolling used\n\t\t\t */\n\t\t\tif ( iColums == oHeaders.length && iUserInputs === 0 && iVisibleColumns == iColums &&\n\t\t\t\toSettings.oScroll.sX === \"\" && oSettings.oScroll.sY === \"\" )\n\t\t\t{\n\t\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tiTmpWidth = $(oHeaders[i]).width();\n\t\t\t\t\tif ( iTmpWidth !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aoColumns[i].sWidth = _fnStringToCss( iTmpWidth );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Otherwise we are going to have to do some calculations to get the width of each column.\n\t\t\t\t * Construct a 1 row table with the widest node in the data, and any user defined widths,\n\t\t\t\t * then insert it into the DOM and allow the browser to do all the hard work of\n\t\t\t\t * calculating table widths.\n\t\t\t\t */\n\t\t\t\tvar\n\t\t\t\t\tnCalcTmp = oSettings.nTable.cloneNode( false ),\n\t\t\t\t\tnTheadClone = oSettings.nTHead.cloneNode(true),\n\t\t\t\t\tnBody = document.createElement( 'tbody' ),\n\t\t\t\t\tnTr = document.createElement( 'tr' ),\n\t\t\t\t\tnDivSizing;\n\t\t\t\t\n\t\t\t\tnCalcTmp.removeAttribute( \"id\" );\n\t\t\t\tnCalcTmp.appendChild( nTheadClone );\n\t\t\t\tif ( oSettings.nTFoot !== null )\n\t\t\t\t{\n\t\t\t\t\tnCalcTmp.appendChild( oSettings.nTFoot.cloneNode(true) );\n\t\t\t\t\t_fnApplyToChildren( function(n) {\n\t\t\t\t\t\tn.style.width = \"\";\n\t\t\t\t\t}, nCalcTmp.getElementsByTagName('tr') );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnCalcTmp.appendChild( nBody );\n\t\t\t\tnBody.appendChild( nTr );\n\t\t\t\t\n\t\t\t\t/* Remove any sizing that was previously applied by the styles */\n\t\t\t\tvar jqColSizing = $('thead th', nCalcTmp);\n\t\t\t\tif ( jqColSizing.length === 0 )\n\t\t\t\t{\n\t\t\t\t\tjqColSizing = $('tbody tr:eq(0)>td', nCalcTmp);\n\t\t\t\t}\n\t\t\n\t\t\t\t/* Apply custom sizing to the cloned header */\n\t\t\t\tvar nThs = _fnGetUniqueThs( oSettings, nTheadClone );\n\t\t\t\tiCorrector = 0;\n\t\t\t\tfor ( i=0 ; i<iColums ; i++ )\n\t\t\t\t{\n\t\t\t\t\tvar oColumn = oSettings.aoColumns[i];\n\t\t\t\t\tif ( oColumn.bVisible && oColumn.sWidthOrig !== null && oColumn.sWidthOrig !== \"\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tnThs[i-iCorrector].style.width = _fnStringToCss( oColumn.sWidthOrig );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( oColumn.bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\tnThs[i-iCorrector].style.width = \"\";\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tiCorrector++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t/* Find the biggest td for each column and put it into the table */\n\t\t\t\tfor ( i=0 ; i<iColums ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar nTd = _fnGetWidestNode( oSettings, i );\n\t\t\t\t\t\tif ( nTd !== null )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnTd = nTd.cloneNode(true);\n\t\t\t\t\t\t\tif ( oSettings.aoColumns[i].sContentPadding !== \"\" )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnTd.innerHTML += oSettings.aoColumns[i].sContentPadding;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnTr.appendChild( nTd );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Build the table and 'display' it */\n\t\t\t\tnWrapper.appendChild( nCalcTmp );\n\t\t\t\t\n\t\t\t\t/* When scrolling (X or Y) we want to set the width of the table as appropriate. However,\n\t\t\t\t * when not scrolling leave the table width as it is. This results in slightly different,\n\t\t\t\t * but I think correct behaviour\n\t\t\t\t */\n\t\t\t\tif ( oSettings.oScroll.sX !== \"\" && oSettings.oScroll.sXInner !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tnCalcTmp.style.width = _fnStringToCss(oSettings.oScroll.sXInner);\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.oScroll.sX !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tnCalcTmp.style.width = \"\";\n\t\t\t\t\tif ( $(nCalcTmp).width() < nWrapper.offsetWidth )\n\t\t\t\t\t{\n\t\t\t\t\t\tnCalcTmp.style.width = _fnStringToCss( nWrapper.offsetWidth );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( oSettings.oScroll.sY !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tnCalcTmp.style.width = _fnStringToCss( nWrapper.offsetWidth );\n\t\t\t\t}\n\t\t\t\telse if ( widthAttr )\n\t\t\t\t{\n\t\t\t\t\tnCalcTmp.style.width = _fnStringToCss( widthAttr );\n\t\t\t\t}\n\t\t\t\tnCalcTmp.style.visibility = \"hidden\";\n\t\t\t\t\n\t\t\t\t/* Scrolling considerations */\n\t\t\t\t_fnScrollingWidthAdjust( oSettings, nCalcTmp );\n\t\t\t\t\n\t\t\t\t/* Read the width's calculated by the browser and store them for use by the caller. We\n\t\t\t\t * first of all try to use the elements in the body, but it is possible that there are\n\t\t\t\t * no elements there, under which circumstances we use the header elements\n\t\t\t\t */\n\t\t\t\tvar oNodes = $(\"tbody tr:eq(0)\", nCalcTmp).children();\n\t\t\t\tif ( oNodes.length === 0 )\n\t\t\t\t{\n\t\t\t\t\toNodes = _fnGetUniqueThs( oSettings, $('thead', nCalcTmp)[0] );\n\t\t\t\t}\n\t\t\n\t\t\t\t/* Browsers need a bit of a hand when a width is assigned to any columns when \n\t\t\t\t * x-scrolling as they tend to collapse the table to the min-width, even if\n\t\t\t\t * we sent the column widths. So we need to keep track of what the table width\n\t\t\t\t * should be by summing the user given values, and the automatic values\n\t\t\t\t */\n\t\t\t\tif ( oSettings.oScroll.sX !== \"\" )\n\t\t\t\t{\n\t\t\t\t\tvar iTotal = 0;\n\t\t\t\t\tiCorrector = 0;\n\t\t\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( oSettings.aoColumns[i].sWidthOrig === null )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tiTotal += $(oNodes[iCorrector]).outerWidth();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tiTotal += parseInt(oSettings.aoColumns[i].sWidth.replace('px',''), 10) +\n\t\t\t\t\t\t\t\t\t($(oNodes[iCorrector]).outerWidth() - $(oNodes[iCorrector]).width());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tiCorrector++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnCalcTmp.style.width = _fnStringToCss( iTotal );\n\t\t\t\t\toSettings.nTable.style.width = _fnStringToCss( iTotal );\n\t\t\t\t}\n\t\t\n\t\t\t\tiCorrector = 0;\n\t\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aoColumns[i].bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\tiWidth = $(oNodes[iCorrector]).width();\n\t\t\t\t\t\tif ( iWidth !== null && iWidth > 0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toSettings.aoColumns[i].sWidth = _fnStringToCss( iWidth );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tiCorrector++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tvar cssWidth = $(nCalcTmp).css('width');\n\t\t\t\toSettings.nTable.style.width = (cssWidth.indexOf('%') !== -1) ?\n\t\t\t\t    cssWidth : _fnStringToCss( $(nCalcTmp).outerWidth() );\n\t\t\t\tnCalcTmp.parentNode.removeChild( nCalcTmp );\n\t\t\t}\n\t\t\n\t\t\tif ( widthAttr )\n\t\t\t{\n\t\t\t\toSettings.nTable.style.width = _fnStringToCss( widthAttr );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Adjust a table's width to take account of scrolling\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} n table node\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnScrollingWidthAdjust ( oSettings, n )\n\t\t{\n\t\t\tif ( oSettings.oScroll.sX === \"\" && oSettings.oScroll.sY !== \"\" )\n\t\t\t{\n\t\t\t\t/* When y-scrolling only, we want to remove the width of the scroll bar so the table\n\t\t\t\t * + scroll bar will fit into the area avaialble.\n\t\t\t\t */\n\t\t\t\tvar iOrigWidth = $(n).width();\n\t\t\t\tn.style.width = _fnStringToCss( $(n).outerWidth()-oSettings.oScroll.iBarWidth );\n\t\t\t}\n\t\t\telse if ( oSettings.oScroll.sX !== \"\" )\n\t\t\t{\n\t\t\t\t/* When x-scrolling both ways, fix the table at it's current size, without adjusting */\n\t\t\t\tn.style.width = _fnStringToCss( $(n).outerWidth() );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the widest node\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iCol column of interest\n\t\t *  @returns {node} widest table node\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetWidestNode( oSettings, iCol )\n\t\t{\n\t\t\tvar iMaxIndex = _fnGetMaxLenString( oSettings, iCol );\n\t\t\tif ( iMaxIndex < 0 )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\n\t\t\tif ( oSettings.aoData[iMaxIndex].nTr === null )\n\t\t\t{\n\t\t\t\tvar n = document.createElement('td');\n\t\t\t\tn.innerHTML = _fnGetCellData( oSettings, iMaxIndex, iCol, '' );\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\treturn _fnGetTdNodes(oSettings, iMaxIndex)[iCol];\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the maximum strlen for each data column\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iCol column of interest\n\t\t *  @returns {string} max string length for each column\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetMaxLenString( oSettings, iCol )\n\t\t{\n\t\t\tvar iMax = -1;\n\t\t\tvar iMaxIndex = -1;\n\t\t\t\n\t\t\tfor ( var i=0 ; i<oSettings.aoData.length ; i++ )\n\t\t\t{\n\t\t\t\tvar s = _fnGetCellData( oSettings, i, iCol, 'display' )+\"\";\n\t\t\t\ts = s.replace( /<.*?>/g, \"\" );\n\t\t\t\tif ( s.length > iMax )\n\t\t\t\t{\n\t\t\t\t\tiMax = s.length;\n\t\t\t\t\tiMaxIndex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn iMaxIndex;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Append a CSS unit (only if required) to a string\n\t\t *  @param {array} aArray1 first array\n\t\t *  @param {array} aArray2 second array\n\t\t *  @returns {int} 0 if match, 1 if length is different, 2 if no match\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnStringToCss( s )\n\t\t{\n\t\t\tif ( s === null )\n\t\t\t{\n\t\t\t\treturn \"0px\";\n\t\t\t}\n\t\t\t\n\t\t\tif ( typeof s == 'number' )\n\t\t\t{\n\t\t\t\tif ( s < 0 )\n\t\t\t\t{\n\t\t\t\t\treturn \"0px\";\n\t\t\t\t}\n\t\t\t\treturn s+\"px\";\n\t\t\t}\n\t\t\t\n\t\t\t/* Check if the last character is not 0-9 */\n\t\t\tvar c = s.charCodeAt( s.length-1 );\n\t\t\tif (c < 0x30 || c > 0x39)\n\t\t\t{\n\t\t\t\treturn s;\n\t\t\t}\n\t\t\treturn s+\"px\";\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the width of a scroll bar in this browser being used\n\t\t *  @returns {int} width in pixels\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnScrollBarWidth ()\n\t\t{  \n\t\t\tvar inner = document.createElement('p');\n\t\t\tvar style = inner.style;\n\t\t\tstyle.width = \"100%\";\n\t\t\tstyle.height = \"200px\";\n\t\t\tstyle.padding = \"0px\";\n\t\t\t\n\t\t\tvar outer = document.createElement('div');\n\t\t\tstyle = outer.style;\n\t\t\tstyle.position = \"absolute\";\n\t\t\tstyle.top = \"0px\";\n\t\t\tstyle.left = \"0px\";\n\t\t\tstyle.visibility = \"hidden\";\n\t\t\tstyle.width = \"200px\";\n\t\t\tstyle.height = \"150px\";\n\t\t\tstyle.padding = \"0px\";\n\t\t\tstyle.overflow = \"hidden\";\n\t\t\touter.appendChild(inner);\n\t\t\t\n\t\t\tdocument.body.appendChild(outer);\n\t\t\tvar w1 = inner.offsetWidth;\n\t\t\touter.style.overflow = 'scroll';\n\t\t\tvar w2 = inner.offsetWidth;\n\t\t\tif ( w1 == w2 )\n\t\t\t{\n\t\t\t\tw2 = outer.clientWidth;\n\t\t\t}\n\t\t\t\n\t\t\tdocument.body.removeChild(outer);\n\t\t\treturn (w1 - w2);  \n\t\t}\n\t\t\n\t\t/**\n\t\t * Change the order of the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {bool} bApplyClasses optional - should we apply classes or not\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSort ( oSettings, bApplyClasses )\n\t\t{\n\t\t\tvar\n\t\t\t\ti, iLen, j, jLen, k, kLen,\n\t\t\t\tsDataType, nTh,\n\t\t\t\taaSort = [],\n\t\t\t \taiOrig = [],\n\t\t\t\toSort = DataTable.ext.oSort,\n\t\t\t\taoData = oSettings.aoData,\n\t\t\t\taoColumns = oSettings.aoColumns,\n\t\t\t\toAria = oSettings.oLanguage.oAria;\n\t\t\t\n\t\t\t/* No sorting required if server-side or no sorting array */\n\t\t\tif ( !oSettings.oFeatures.bServerSide && \n\t\t\t\t(oSettings.aaSorting.length !== 0 || oSettings.aaSortingFixed !== null) )\n\t\t\t{\n\t\t\t\taaSort = ( oSettings.aaSortingFixed !== null ) ?\n\t\t\t\t\toSettings.aaSortingFixed.concat( oSettings.aaSorting ) :\n\t\t\t\t\toSettings.aaSorting.slice();\n\t\t\t\t\n\t\t\t\t/* If there is a sorting data type, and a function belonging to it, then we need to\n\t\t\t\t * get the data from the developer's function and apply it for this column\n\t\t\t\t */\n\t\t\t\tfor ( i=0 ; i<aaSort.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tvar iColumn = aaSort[i][0];\n\t\t\t\t\tvar iVisColumn = _fnColumnIndexToVisible( oSettings, iColumn );\n\t\t\t\t\tsDataType = oSettings.aoColumns[ iColumn ].sSortDataType;\n\t\t\t\t\tif ( DataTable.ext.afnSortData[sDataType] )\n\t\t\t\t\t{\n\t\t\t\t\t\tvar aData = DataTable.ext.afnSortData[sDataType].call( \n\t\t\t\t\t\t\toSettings.oInstance, oSettings, iColumn, iVisColumn\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( aData.length === aoData.length )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor ( j=0, jLen=aoData.length ; j<jLen ; j++ )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_fnSetCellData( oSettings, j, iColumn, aData[j] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnLog( oSettings, 0, \"Returned data sort array (col \"+iColumn+\") is the wrong length\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Create a value - key array of the current row positions such that we can use their\n\t\t\t\t * current position during the sort, if values match, in order to perform stable sorting\n\t\t\t\t */\n\t\t\t\tfor ( i=0, iLen=oSettings.aiDisplayMaster.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taiOrig[ oSettings.aiDisplayMaster[i] ] = i;\n\t\t\t\t}\n\t\t\n\t\t\t\t/* Build an internal data array which is specific to the sort, so we can get and prep\n\t\t\t\t * the data to be sorted only once, rather than needing to do it every time the sorting\n\t\t\t\t * function runs. This make the sorting function a very simple comparison\n\t\t\t\t */\n\t\t\t\tvar iSortLen = aaSort.length;\n\t\t\t\tvar fnSortFormat, aDataSort;\n\t\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( j=0 ; j<iSortLen ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taDataSort = aoColumns[ aaSort[j][0] ].aDataSort;\n\t\t\n\t\t\t\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsDataType = aoColumns[ aDataSort[k] ].sType;\n\t\t\t\t\t\t\tfnSortFormat = oSort[ (sDataType ? sDataType : 'string')+\"-pre\" ];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\taoData[i]._aSortData[ aDataSort[k] ] = fnSortFormat ?\n\t\t\t\t\t\t\t\tfnSortFormat( _fnGetCellData( oSettings, i, aDataSort[k], 'sort' ) ) :\n\t\t\t\t\t\t\t\t_fnGetCellData( oSettings, i, aDataSort[k], 'sort' );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t\t\t *  fnLocalSorting = function(a,b){\n\t\t\t\t *  \tvar iTest;\n\t\t\t\t *  \tiTest = oSort['string-asc']('data11', 'data12');\n\t\t\t\t *  \tif (iTest !== 0)\n\t\t\t\t *  \t\treturn iTest;\n\t\t\t\t *    iTest = oSort['numeric-desc']('data21', 'data22');\n\t\t\t\t *    if (iTest !== 0)\n\t\t\t\t *  \t\treturn iTest;\n\t\t\t\t *  \treturn oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t\t *  }\n\t\t\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t\t\t * test the next column. If all columns match, then we use a numeric sort on the row \n\t\t\t\t * positions in the original data array to provide a stable sort.\n\t\t\t\t */\n\t\t\t\toSettings.aiDisplayMaster.sort( function ( a, b ) {\n\t\t\t\t\tvar k, l, lLen, iTest, aDataSort, sDataType;\n\t\t\t\t\tfor ( k=0 ; k<iSortLen ; k++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taDataSort = aoColumns[ aaSort[k][0] ].aDataSort;\n\t\t\n\t\t\t\t\t\tfor ( l=0, lLen=aDataSort.length ; l<lLen ; l++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsDataType = aoColumns[ aDataSort[l] ].sType;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tiTest = oSort[ (sDataType ? sDataType : 'string')+\"-\"+aaSort[k][1] ](\n\t\t\t\t\t\t\t\taoData[a]._aSortData[ aDataSort[l] ],\n\t\t\t\t\t\t\t\taoData[b]._aSortData[ aDataSort[l] ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ( iTest !== 0 )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn iTest;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\t/* Alter the sorting classes to take account of the changes */\n\t\t\tif ( (bApplyClasses === undefined || bApplyClasses) && !oSettings.oFeatures.bDeferRender )\n\t\t\t{\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t}\n\t\t\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tvar sTitle = aoColumns[i].sTitle.replace( /<.*?>/g, \"\" );\n\t\t\t\tnTh = aoColumns[i].nTh;\n\t\t\t\tnTh.removeAttribute('aria-sort');\n\t\t\t\tnTh.removeAttribute('aria-label');\n\t\t\t\t\n\t\t\t\t/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */\n\t\t\t\tif ( aoColumns[i].bSortable )\n\t\t\t\t{\n\t\t\t\t\tif ( aaSort.length > 0 && aaSort[0][0] == i )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTh.setAttribute('aria-sort', aaSort[0][1]==\"asc\" ? \"ascending\" : \"descending\" );\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar nextSort = (aoColumns[i].asSorting[ aaSort[0][2]+1 ]) ? \n\t\t\t\t\t\t\taoColumns[i].asSorting[ aaSort[0][2]+1 ] : aoColumns[i].asSorting[0];\n\t\t\t\t\t\tnTh.setAttribute('aria-label', sTitle+\n\t\t\t\t\t\t\t(nextSort==\"asc\" ? oAria.sSortAscending : oAria.sSortDescending) );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnTh.setAttribute('aria-label', sTitle+\n\t\t\t\t\t\t\t(aoColumns[i].asSorting[0]==\"asc\" ? oAria.sSortAscending : oAria.sSortDescending) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnTh.setAttribute('aria-label', sTitle);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Tell the draw function that we have sorted the data */\n\t\t\toSettings.bSorted = true;\n\t\t\t$(oSettings.oInstance).trigger('sort', oSettings);\n\t\t\t\n\t\t\t/* Copy the master data into the draw array and re-draw */\n\t\t\tif ( oSettings.oFeatures.bFilter )\n\t\t\t{\n\t\t\t\t/* _fnFilter() will redraw the table for us */\n\t\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch, 1 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\toSettings._iDisplayStart = 0; /* reset display back to page 0 */\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort handler (click) to a node\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {node} nNode node to attach the handler to\n\t\t *  @param {int} iDataIndex column sorting index\n\t\t *  @param {function} [fnCallback] callback function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSortAttachListener ( oSettings, nNode, iDataIndex, fnCallback )\n\t\t{\n\t\t\t_fnBindAction( nNode, {}, function (e) {\n\t\t\t\t/* If the column is not sortable - don't to anything */\n\t\t\t\tif ( oSettings.aoColumns[iDataIndex].bSortable === false )\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t * This is a little bit odd I admit... I declare a temporary function inside the scope of\n\t\t\t\t * _fnBuildHead and the click handler in order that the code presented here can be used \n\t\t\t\t * twice - once for when bProcessing is enabled, and another time for when it is \n\t\t\t\t * disabled, as we need to perform slightly different actions.\n\t\t\t\t *   Basically the issue here is that the Javascript engine in modern browsers don't \n\t\t\t\t * appear to allow the rendering engine to update the display while it is still executing\n\t\t\t\t * it's thread (well - it does but only after long intervals). This means that the \n\t\t\t\t * 'processing' display doesn't appear for a table sort. To break the js thread up a bit\n\t\t\t\t * I force an execution break by using setTimeout - but this breaks the expected \n\t\t\t\t * thread continuation for the end-developer's point of view (their code would execute\n\t\t\t\t * too early), so we only do it when we absolutely have to.\n\t\t\t\t */\n\t\t\t\tvar fnInnerSorting = function () {\n\t\t\t\t\tvar iColumn, iNextSort;\n\t\t\t\t\t\n\t\t\t\t\t/* If the shift key is pressed then we are multiple column sorting */\n\t\t\t\t\tif ( e.shiftKey )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Are we already doing some kind of sort on this column? */\n\t\t\t\t\t\tvar bFound = false;\n\t\t\t\t\t\tfor ( var i=0 ; i<oSettings.aaSorting.length ; i++ )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif ( oSettings.aaSorting[i][0] == iDataIndex )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t\t\t\tiColumn = oSettings.aaSorting[i][0];\n\t\t\t\t\t\t\t\tiNextSort = oSettings.aaSorting[i][2]+1;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( !oSettings.aoColumns[iColumn].asSorting[iNextSort] )\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t/* Reached the end of the sorting options, remove from multi-col sort */\n\t\t\t\t\t\t\t\t\toSettings.aaSorting.splice( i, 1 );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t/* Move onto next sorting direction */\n\t\t\t\t\t\t\t\t\toSettings.aaSorting[i][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];\n\t\t\t\t\t\t\t\t\toSettings.aaSorting[i][2] = iNextSort;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* No sort yet - add it in */\n\t\t\t\t\t\tif ( bFound === false )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toSettings.aaSorting.push( [ iDataIndex, \n\t\t\t\t\t\t\t\toSettings.aoColumns[iDataIndex].asSorting[0], 0 ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t/* If no shift key then single column sort */\n\t\t\t\t\t\tif ( oSettings.aaSorting.length == 1 && oSettings.aaSorting[0][0] == iDataIndex )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tiColumn = oSettings.aaSorting[0][0];\n\t\t\t\t\t\t\tiNextSort = oSettings.aaSorting[0][2]+1;\n\t\t\t\t\t\t\tif ( !oSettings.aoColumns[iColumn].asSorting[iNextSort] )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tiNextSort = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toSettings.aaSorting[0][1] = oSettings.aoColumns[iColumn].asSorting[iNextSort];\n\t\t\t\t\t\t\toSettings.aaSorting[0][2] = iNextSort;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\toSettings.aaSorting.splice( 0, oSettings.aaSorting.length );\n\t\t\t\t\t\t\toSettings.aaSorting.push( [ iDataIndex, \n\t\t\t\t\t\t\t\toSettings.aoColumns[iDataIndex].asSorting[0], 0 ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Run the sort */\n\t\t\t\t\t_fnSort( oSettings );\n\t\t\t\t}; /* /fnInnerSorting */\n\t\t\t\t\n\t\t\t\tif ( !oSettings.oFeatures.bProcessing )\n\t\t\t\t{\n\t\t\t\t\tfnInnerSorting();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnProcessingDisplay( oSettings, true );\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\tfnInnerSorting();\n\t\t\t\t\t\tif ( !oSettings.oFeatures.bServerSide )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0 );\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Call the user specified callback function - used for async user interaction */\n\t\t\t\tif ( typeof fnCallback == 'function' )\n\t\t\t\t{\n\t\t\t\t\tfnCallback( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Set the sorting classes on the header, Note: it is safe to call this function \n\t\t * when bSort and bSortClasses are false\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSortingClasses( oSettings )\n\t\t{\n\t\t\tvar i, iLen, j, jLen, iFound;\n\t\t\tvar aaSort, sClass;\n\t\t\tvar iColumns = oSettings.aoColumns.length;\n\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\n\t\t\tfor ( i=0 ; i<iColumns ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].bSortable )\n\t\t\t\t{\n\t\t\t\t\t$(oSettings.aoColumns[i].nTh).removeClass( oClasses.sSortAsc +\" \"+ oClasses.sSortDesc +\n\t\t\t\t\t\t\" \"+ oSettings.aoColumns[i].sSortingClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings.aaSortingFixed !== null )\n\t\t\t{\n\t\t\t\taaSort = oSettings.aaSortingFixed.concat( oSettings.aaSorting );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taaSort = oSettings.aaSorting.slice();\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the required classes to the header */\n\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoColumns[i].bSortable )\n\t\t\t\t{\n\t\t\t\t\tsClass = oSettings.aoColumns[i].sSortingClass;\n\t\t\t\t\tiFound = -1;\n\t\t\t\t\tfor ( j=0 ; j<aaSort.length ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( aaSort[j][0] == i )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsClass = ( aaSort[j][1] == \"asc\" ) ?\n\t\t\t\t\t\t\t\toClasses.sSortAsc : oClasses.sSortDesc;\n\t\t\t\t\t\t\tiFound = j;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$(oSettings.aoColumns[i].nTh).addClass( sClass );\n\t\t\t\t\t\n\t\t\t\t\tif ( oSettings.bJUI )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* jQuery UI uses extra markup */\n\t\t\t\t\t\tvar jqSpan = $(\"span.\"+oClasses.sSortIcon,  oSettings.aoColumns[i].nTh);\n\t\t\t\t\t\tjqSpan.removeClass(oClasses.sSortJUIAsc +\" \"+ oClasses.sSortJUIDesc +\" \"+ \n\t\t\t\t\t\t\toClasses.sSortJUI +\" \"+ oClasses.sSortJUIAscAllowed +\" \"+ oClasses.sSortJUIDescAllowed );\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar sSpanClass;\n\t\t\t\t\t\tif ( iFound == -1 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t \tsSpanClass = oSettings.aoColumns[i].sSortingClassJUI;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( aaSort[iFound][1] == \"asc\" )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsSpanClass = oClasses.sSortJUIAsc;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsSpanClass = oClasses.sSortJUIDesc;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tjqSpan.addClass( sSpanClass );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t/* No sorting on this column, so add the base class. This will have been assigned by\n\t\t\t\t\t * _fnAddColumn\n\t\t\t\t\t */\n\t\t\t\t\t$(oSettings.aoColumns[i].nTh).addClass( oSettings.aoColumns[i].sSortingClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* \n\t\t\t * Apply the required classes to the table body\n\t\t\t * Note that this is given as a feature switch since it can significantly slow down a sort\n\t\t\t * on large data sets (adding and removing of classes is always slow at the best of times..)\n\t\t\t * Further to this, note that this code is admittedly fairly ugly. It could be made a lot \n\t\t\t * simpler using jQuery selectors and add/removeClass, but that is significantly slower\n\t\t\t * (on the order of 5 times slower) - hence the direct DOM manipulation here.\n\t\t\t * Note that for deferred drawing we do use jQuery - the reason being that taking the first\n\t\t\t * row found to see if the whole column needs processed can miss classes since the first\n\t\t\t * column might be new.\n\t\t\t */\n\t\t\tsClass = oClasses.sSortColumn;\n\t\t\t\n\t\t\tif ( oSettings.oFeatures.bSort && oSettings.oFeatures.bSortClasses )\n\t\t\t{\n\t\t\t\tvar nTds = _fnGetTdNodes( oSettings );\n\t\t\t\t\n\t\t\t\t/* Determine what the sorting class for each column should be */\n\t\t\t\tvar iClass, iTargetCol;\n\t\t\t\tvar asClasses = [];\n\t\t\t\tfor (i = 0; i < iColumns; i++)\n\t\t\t\t{\n\t\t\t\t\tasClasses.push(\"\");\n\t\t\t\t}\n\t\t\t\tfor (i = 0, iClass = 1; i < aaSort.length; i++)\n\t\t\t\t{\n\t\t\t\t\tiTargetCol = parseInt( aaSort[i][0], 10 );\n\t\t\t\t\tasClasses[iTargetCol] = sClass + iClass;\n\t\t\t\t\t\n\t\t\t\t\tif ( iClass < 3 )\n\t\t\t\t\t{\n\t\t\t\t\t\tiClass++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Make changes to the classes for each cell as needed */\n\t\t\t\tvar reClass = new RegExp(sClass + \"[123]\");\n\t\t\t\tvar sTmpClass, sCurrentClass, sNewClass;\n\t\t\t\tfor ( i=0, iLen=nTds.length; i<iLen; i++ )\n\t\t\t\t{\n\t\t\t\t\t/* Determine which column we're looking at */\n\t\t\t\t\tiTargetCol = i % iColumns;\n\t\t\t\t\t\n\t\t\t\t\t/* What is the full list of classes now */\n\t\t\t\t\tsCurrentClass = nTds[i].className;\n\t\t\t\t\t/* What sorting class should be applied? */\n\t\t\t\t\tsNewClass = asClasses[iTargetCol];\n\t\t\t\t\t/* What would the new full list be if we did a replacement? */\n\t\t\t\t\tsTmpClass = sCurrentClass.replace(reClass, sNewClass);\n\t\t\t\t\t\n\t\t\t\t\tif ( sTmpClass != sCurrentClass )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* We changed something */\n\t\t\t\t\t\tnTds[i].className = $.trim( sTmpClass );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sNewClass.length > 0 && sCurrentClass.indexOf(sNewClass) == -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* We need to add a class */\n\t\t\t\t\t\tnTds[i].className = sCurrentClass + \" \" + sNewClass;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t/**\n\t\t * Save the state of a table in a cookie such that the page can be reloaded\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSaveState ( oSettings )\n\t\t{\n\t\t\tif ( !oSettings.oFeatures.bStateSave || oSettings.bDestroying )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\n\t\t\t/* Store the interesting variables */\n\t\t\tvar i, iLen, bInfinite=oSettings.oScroll.bInfinite;\n\t\t\tvar oState = {\n\t\t\t\t\"iCreate\":      new Date().getTime(),\n\t\t\t\t\"iStart\":       (bInfinite ? 0 : oSettings._iDisplayStart),\n\t\t\t\t\"iEnd\":         (bInfinite ? oSettings._iDisplayLength : oSettings._iDisplayEnd),\n\t\t\t\t\"iLength\":      oSettings._iDisplayLength,\n\t\t\t\t\"aaSorting\":    $.extend( true, [], oSettings.aaSorting ),\n\t\t\t\t\"oSearch\":      $.extend( true, {}, oSettings.oPreviousSearch ),\n\t\t\t\t\"aoSearchCols\": $.extend( true, [], oSettings.aoPreSearchCols ),\n\t\t\t\t\"abVisCols\":    []\n\t\t\t};\n\t\t\n\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toState.abVisCols.push( oSettings.aoColumns[i].bVisible );\n\t\t\t}\n\t\t\n\t\t\t_fnCallbackFire( oSettings, \"aoStateSaveParams\", 'stateSaveParams', [oSettings, oState] );\n\t\t\t\n\t\t\toSettings.fnStateSave.call( oSettings.oInstance, oSettings, oState );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Attempt to load a saved table state from a cookie\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {object} oInit DataTables init object so we can override settings\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnLoadState ( oSettings, oInit )\n\t\t{\n\t\t\tif ( !oSettings.oFeatures.bStateSave )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\n\t\t\tvar oData = oSettings.fnStateLoad.call( oSettings.oInstance, oSettings );\n\t\t\tif ( !oData )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Allow custom and plug-in manipulation functions to alter the saved data set and\n\t\t\t * cancelling of loading by returning false\n\t\t\t */\n\t\t\tvar abStateLoad = _fnCallbackFire( oSettings, 'aoStateLoadParams', 'stateLoadParams', [oSettings, oData] );\n\t\t\tif ( $.inArray( false, abStateLoad ) !== -1 )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Store the saved state so it might be accessed at any time */\n\t\t\toSettings.oLoadedState = $.extend( true, {}, oData );\n\t\t\t\n\t\t\t/* Restore key features */\n\t\t\toSettings._iDisplayStart    = oData.iStart;\n\t\t\toSettings.iInitDisplayStart = oData.iStart;\n\t\t\toSettings._iDisplayEnd      = oData.iEnd;\n\t\t\toSettings._iDisplayLength   = oData.iLength;\n\t\t\toSettings.aaSorting         = oData.aaSorting.slice();\n\t\t\toSettings.saved_aaSorting   = oData.aaSorting.slice();\n\t\t\t\n\t\t\t/* Search filtering  */\n\t\t\t$.extend( oSettings.oPreviousSearch, oData.oSearch );\n\t\t\t$.extend( true, oSettings.aoPreSearchCols, oData.aoSearchCols );\n\t\t\t\n\t\t\t/* Column visibility state\n\t\t\t * Pass back visibility settings to the init handler, but to do not here override\n\t\t\t * the init object that the user might have passed in\n\t\t\t */\n\t\t\toInit.saved_aoColumns = [];\n\t\t\tfor ( var i=0 ; i<oData.abVisCols.length ; i++ )\n\t\t\t{\n\t\t\t\toInit.saved_aoColumns[i] = {};\n\t\t\t\toInit.saved_aoColumns[i].bVisible = oData.abVisCols[i];\n\t\t\t}\n\t\t\n\t\t\t_fnCallbackFire( oSettings, 'aoStateLoaded', 'stateLoaded', [oSettings, oData] );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a new cookie with a value to store the state of a table\n\t\t *  @param {string} sName name of the cookie to create\n\t\t *  @param {string} sValue the value the cookie should take\n\t\t *  @param {int} iSecs duration of the cookie\n\t\t *  @param {string} sBaseName sName is made up of the base + file name - this is the base\n\t\t *  @param {function} fnCallback User definable function to modify the cookie\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCreateCookie ( sName, sValue, iSecs, sBaseName, fnCallback )\n\t\t{\n\t\t\tvar date = new Date();\n\t\t\tdate.setTime( date.getTime()+(iSecs*1000) );\n\t\t\t\n\t\t\t/* \n\t\t\t * Shocking but true - it would appear IE has major issues with having the path not having\n\t\t\t * a trailing slash on it. We need the cookie to be available based on the path, so we\n\t\t\t * have to append the file name to the cookie name. Appalling. Thanks to vex for adding the\n\t\t\t * patch to use at least some of the path\n\t\t\t */\n\t\t\tvar aParts = window.location.pathname.split('/');\n\t\t\tvar sNameFile = sName + '_' + aParts.pop().replace(/[\\/:]/g,\"\").toLowerCase();\n\t\t\tvar sFullCookie, oData;\n\t\t\t\n\t\t\tif ( fnCallback !== null )\n\t\t\t{\n\t\t\t\toData = (typeof $.parseJSON === 'function') ? \n\t\t\t\t\t$.parseJSON( sValue ) : eval( '('+sValue+')' );\n\t\t\t\tsFullCookie = fnCallback( sNameFile, oData, date.toGMTString(),\n\t\t\t\t\taParts.join('/')+\"/\" );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsFullCookie = sNameFile + \"=\" + encodeURIComponent(sValue) +\n\t\t\t\t\t\"; expires=\" + date.toGMTString() +\"; path=\" + aParts.join('/')+\"/\";\n\t\t\t}\n\t\t\t\n\t\t\t/* Are we going to go over the cookie limit of 4KiB? If so, try to delete a cookies\n\t\t\t * belonging to DataTables.\n\t\t\t */\n\t\t\tvar\n\t\t\t\taCookies =document.cookie.split(';'),\n\t\t\t\tiNewCookieLen = sFullCookie.split(';')[0].length,\n\t\t\t\taOldCookies = [];\n\t\t\t\n\t\t\tif ( iNewCookieLen+document.cookie.length+10 > 4096 ) /* Magic 10 for padding */\n\t\t\t{\n\t\t\t\tfor ( var i=0, iLen=aCookies.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( aCookies[i].indexOf( sBaseName ) != -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* It's a DataTables cookie, so eval it and check the time stamp */\n\t\t\t\t\t\tvar aSplitCookie = aCookies[i].split('=');\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toData = eval( '('+decodeURIComponent(aSplitCookie[1])+')' );\n\t\t\n\t\t\t\t\t\t\tif ( oData && oData.iCreate )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taOldCookies.push( {\n\t\t\t\t\t\t\t\t\t\"name\": aSplitCookie[0],\n\t\t\t\t\t\t\t\t\t\"time\": oData.iCreate\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch( e ) {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// Make sure we delete the oldest ones first\n\t\t\t\taOldCookies.sort( function (a, b) {\n\t\t\t\t\treturn b.time - a.time;\n\t\t\t\t} );\n\t\t\n\t\t\t\t// Eliminate as many old DataTables cookies as we need to\n\t\t\t\twhile ( iNewCookieLen + document.cookie.length + 10 > 4096 ) {\n\t\t\t\t\tif ( aOldCookies.length === 0 ) {\n\t\t\t\t\t\t// Deleted all DT cookies and still not enough space. Can't state save\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar old = aOldCookies.pop();\n\t\t\t\t\tdocument.cookie = old.name+\"=; expires=Thu, 01-Jan-1970 00:00:01 GMT; path=\"+\n\t\t\t\t\t\taParts.join('/') + \"/\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdocument.cookie = sFullCookie;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Read an old cookie to get a cookie with an old table state\n\t\t *  @param {string} sName name of the cookie to read\n\t\t *  @returns {string} contents of the cookie - or null if no cookie with that name found\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnReadCookie ( sName )\n\t\t{\n\t\t\tvar\n\t\t\t\taParts = window.location.pathname.split('/'),\n\t\t\t\tsNameEQ = sName + '_' + aParts[aParts.length-1].replace(/[\\/:]/g,\"\").toLowerCase() + '=',\n\t\t\t \tsCookieContents = document.cookie.split(';');\n\t\t\t\n\t\t\tfor( var i=0 ; i<sCookieContents.length ; i++ )\n\t\t\t{\n\t\t\t\tvar c = sCookieContents[i];\n\t\t\t\t\n\t\t\t\twhile (c.charAt(0)==' ')\n\t\t\t\t{\n\t\t\t\t\tc = c.substring(1,c.length);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (c.indexOf(sNameEQ) === 0)\n\t\t\t\t{\n\t\t\t\t\treturn decodeURIComponent( c.substring(sNameEQ.length,c.length) );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Return the settings object for a particular table\n\t\t *  @param {node} nTable table we are using as a dataTable\n\t\t *  @returns {object} Settings object - or null if not found\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnSettingsFromNode ( nTable )\n\t\t{\n\t\t\tfor ( var i=0 ; i<DataTable.settings.length ; i++ )\n\t\t\t{\n\t\t\t\tif ( DataTable.settings[i].nTable === nTable )\n\t\t\t\t{\n\t\t\t\t\treturn DataTable.settings[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Return an array with the TR nodes for the table\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @returns {array} TR array\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetTrNodes ( oSettings )\n\t\t{\n\t\t\tvar aNodes = [];\n\t\t\tvar aoData = oSettings.aoData;\n\t\t\tfor ( var i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( aoData[i].nTr !== null )\n\t\t\t\t{\n\t\t\t\t\taNodes.push( aoData[i].nTr );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aNodes;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Return an flat array with all TD nodes for the table, or row\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} [iIndividualRow] aoData index to get the nodes for - optional \n\t\t *    if not given then the return array will contain all nodes for the table\n\t\t *  @returns {array} TD array\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnGetTdNodes ( oSettings, iIndividualRow )\n\t\t{\n\t\t\tvar anReturn = [];\n\t\t\tvar iCorrector;\n\t\t\tvar anTds, nTd;\n\t\t\tvar iRow, iRows=oSettings.aoData.length,\n\t\t\t\tiColumn, iColumns, oData, sNodeName, iStart=0, iEnd=iRows;\n\t\t\t\n\t\t\t/* Allow the collection to be limited to just one row */\n\t\t\tif ( iIndividualRow !== undefined )\n\t\t\t{\n\t\t\t\tiStart = iIndividualRow;\n\t\t\t\tiEnd = iIndividualRow+1;\n\t\t\t}\n\t\t\n\t\t\tfor ( iRow=iStart ; iRow<iEnd ; iRow++ )\n\t\t\t{\n\t\t\t\toData = oSettings.aoData[iRow];\n\t\t\t\tif ( oData.nTr !== null )\n\t\t\t\t{\n\t\t\t\t\t/* get the TD child nodes - taking into account text etc nodes */\n\t\t\t\t\tanTds = [];\n\t\t\t\t\tnTd = oData.nTr.firstChild;\n\t\t\t\t\twhile ( nTd )\n\t\t\t\t\t{\n\t\t\t\t\t\tsNodeName = nTd.nodeName.toLowerCase();\n\t\t\t\t\t\tif ( sNodeName == 'td' || sNodeName == 'th' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tanTds.push( nTd );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnTd = nTd.nextSibling;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tiCorrector = 0;\n\t\t\t\t\tfor ( iColumn=0, iColumns=oSettings.aoColumns.length ; iColumn<iColumns ; iColumn++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( oSettings.aoColumns[iColumn].bVisible )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tanReturn.push( anTds[iColumn-iCorrector] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tanReturn.push( oData._anHidden[iColumn] );\n\t\t\t\t\t\t\tiCorrector++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\treturn anReturn;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Log an error message\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {int} iLevel log error messages, or display them to the user\n\t\t *  @param {string} sMesg error message\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnLog( oSettings, iLevel, sMesg )\n\t\t{\n\t\t\tvar sAlert = (oSettings===null) ?\n\t\t\t\t\"DataTables warning: \"+sMesg :\n\t\t\t\t\"DataTables warning (table id = '\"+oSettings.sTableId+\"'): \"+sMesg;\n\t\t\t\n\t\t\tif ( iLevel === 0 )\n\t\t\t{\n\t\t\t\tif ( DataTable.ext.sErrMode == 'alert' )\n\t\t\t\t{\n\t\t\t\t\talert( sAlert );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(sAlert);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if ( window.console && console.log )\n\t\t\t{\n\t\t\t\tconsole.log( sAlert );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * See if a property is defined on one object, if so assign it to the other object\n\t\t *  @param {object} oRet target object\n\t\t *  @param {object} oSrc source object\n\t\t *  @param {string} sName property\n\t\t *  @param {string} [sMappedName] name to map too - optional, sName used if not given\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnMap( oRet, oSrc, sName, sMappedName )\n\t\t{\n\t\t\tif ( sMappedName === undefined )\n\t\t\t{\n\t\t\t\tsMappedName = sName;\n\t\t\t}\n\t\t\tif ( oSrc[sName] !== undefined )\n\t\t\t{\n\t\t\t\toRet[sMappedName] = oSrc[sName];\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Extend objects - very similar to jQuery.extend, but deep copy objects, and shallow\n\t\t * copy arrays. The reason we need to do this, is that we don't want to deep copy array\n\t\t * init values (such as aaSorting) since the dev wouldn't be able to override them, but\n\t\t * we do want to deep copy arrays.\n\t\t *  @param {object} oOut Object to extend\n\t\t *  @param {object} oExtender Object from which the properties will be applied to oOut\n\t\t *  @returns {object} oOut Reference, just for convenience - oOut === the return.\n\t\t *  @memberof DataTable#oApi\n\t\t *  @todo This doesn't take account of arrays inside the deep copied objects.\n\t\t */\n\t\tfunction _fnExtend( oOut, oExtender )\n\t\t{\n\t\t\tvar val;\n\t\t\t\n\t\t\tfor ( var prop in oExtender )\n\t\t\t{\n\t\t\t\tif ( oExtender.hasOwnProperty(prop) )\n\t\t\t\t{\n\t\t\t\t\tval = oExtender[prop];\n\t\t\n\t\t\t\t\tif ( typeof oInit[prop] === 'object' && val !== null && $.isArray(val) === false )\n\t\t\t\t\t{\n\t\t\t\t\t\t$.extend( true, oOut[prop], val );\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\toOut[prop] = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\treturn oOut;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Bind an event handers to allow a click or return key to activate the callback.\n\t\t * This is good for accessibility since a return on the keyboard will have the\n\t\t * same effect as a click, if the element has focus.\n\t\t *  @param {element} n Element to bind the action to\n\t\t *  @param {object} oData Data object to pass to the triggered function\n\t\t *  @param {function} fn Callback function for when the event is triggered\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBindAction( n, oData, fn )\n\t\t{\n\t\t\t$(n)\n\t\t\t\t.bind( 'click.DT', oData, function (e) {\n\t\t\t\t\t\tn.blur(); // Remove focus outline for mouse users\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t} )\n\t\t\t\t.bind( 'keypress.DT', oData, function (e){\n\t\t\t\t\tif ( e.which === 13 ) {\n\t\t\t\t\t\tfn(e);\n\t\t\t\t\t} } )\n\t\t\t\t.bind( 'selectstart.DT', function () {\n\t\t\t\t\t/* Take the brutal approach to cancelling text selection */\n\t\t\t\t\treturn false;\n\t\t\t\t\t} );\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Register a callback function. Easily allows a callback function to be added to\n\t\t * an array store of callback functions that can then all be called together.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t\t *  @param {function} fn Function to be called back\n\t\t *  @param {string} sName Identifying name for the callback (i.e. a label)\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCallbackReg( oSettings, sStore, fn, sName )\n\t\t{\n\t\t\tif ( fn )\n\t\t\t{\n\t\t\t\toSettings[sStore].push( {\n\t\t\t\t\t\"fn\": fn,\n\t\t\t\t\t\"sName\": sName\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Fire callback functions and trigger events. Note that the loop over the callback\n\t\t * array store is done backwards! Further note that you do not want to fire off triggers\n\t\t * in time sensitive applications (for example cell creation) as its slow.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @param {string} sStore Name of the array storage for the callbacks in oSettings\n\t\t *  @param {string} sTrigger Name of the jQuery custom event to trigger. If null no trigger\n\t\t *    is fired\n\t\t *  @param {array} aArgs Array of arguments to pass to the callback function / trigger\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnCallbackFire( oSettings, sStore, sTrigger, aArgs )\n\t\t{\n\t\t\tvar aoStore = oSettings[sStore];\n\t\t\tvar aRet =[];\n\t\t\n\t\t\tfor ( var i=aoStore.length-1 ; i>=0 ; i-- )\n\t\t\t{\n\t\t\t\taRet.push( aoStore[i].fn.apply( oSettings.oInstance, aArgs ) );\n\t\t\t}\n\t\t\n\t\t\tif ( sTrigger !== null )\n\t\t\t{\n\t\t\t\t$(oSettings.oInstance).trigger(sTrigger, aArgs);\n\t\t\t}\n\t\t\n\t\t\treturn aRet;\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * JSON stringify. If JSON.stringify it provided by the browser, json2.js or any other\n\t\t * library, then we use that as it is fast, safe and accurate. If the function isn't \n\t\t * available then we need to built it ourselves - the inspiration for this function comes\n\t\t * from Craig Buckler ( http://www.sitepoint.com/javascript-json-serialization/ ). It is\n\t\t * not perfect and absolutely should not be used as a replacement to json2.js - but it does\n\t\t * do what we need, without requiring a dependency for DataTables.\n\t\t *  @param {object} o JSON object to be converted\n\t\t *  @returns {string} JSON string\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tvar _fnJsonString = (window.JSON) ? JSON.stringify : function( o )\n\t\t{\n\t\t\t/* Not an object or array */\n\t\t\tvar sType = typeof o;\n\t\t\tif (sType !== \"object\" || o === null)\n\t\t\t{\n\t\t\t\t// simple data type\n\t\t\t\tif (sType === \"string\")\n\t\t\t\t{\n\t\t\t\t\to = '\"'+o+'\"';\n\t\t\t\t}\n\t\t\t\treturn o+\"\";\n\t\t\t}\n\t\t\n\t\t\t/* If object or array, need to recurse over it */\n\t\t\tvar\n\t\t\t\tsProp, mValue,\n\t\t\t\tjson = [],\n\t\t\t\tbArr = $.isArray(o);\n\t\t\t\n\t\t\tfor (sProp in o)\n\t\t\t{\n\t\t\t\tmValue = o[sProp];\n\t\t\t\tsType = typeof mValue;\n\t\t\n\t\t\t\tif (sType === \"string\")\n\t\t\t\t{\n\t\t\t\t\tmValue = '\"'+mValue+'\"';\n\t\t\t\t}\n\t\t\t\telse if (sType === \"object\" && mValue !== null)\n\t\t\t\t{\n\t\t\t\t\tmValue = _fnJsonString(mValue);\n\t\t\t\t}\n\t\t\n\t\t\t\tjson.push((bArr ? \"\" : '\"'+sProp+'\":') + mValue);\n\t\t\t}\n\t\t\n\t\t\treturn (bArr ? \"[\" : \"{\") + json + (bArr ? \"]\" : \"}\");\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * From some browsers (specifically IE6/7) we need special handling to work around browser\n\t\t * bugs - this function is used to detect when these workarounds are needed.\n\t\t *  @param {object} oSettings dataTables settings object\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnBrowserDetect( oSettings )\n\t\t{\n\t\t\t/* IE6/7 will oversize a width 100% element inside a scrolling element, to include the\n\t\t\t * width of the scrollbar, while other browsers ensure the inner element is contained\n\t\t\t * without forcing scrolling\n\t\t\t */\n\t\t\tvar n = $(\n\t\t\t\t'<div style=\"position:absolute; top:0; left:0; height:1px; width:1px; overflow:hidden\">'+\n\t\t\t\t\t'<div style=\"position:absolute; top:1px; left:1px; width:100px; overflow:scroll;\">'+\n\t\t\t\t\t\t'<div id=\"DT_BrowserTest\" style=\"width:100%; height:10px;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t'</div>')[0];\n\t\t\n\t\t\tdocument.body.appendChild( n );\n\t\t\toSettings.oBrowser.bScrollOversize = $('#DT_BrowserTest', n)[0].offsetWidth === 100 ? true : false;\n\t\t\tdocument.body.removeChild( n );\n\t\t}\n\t\t\n\n\t\t/**\n\t\t * Perform a jQuery selector action on the table's TR elements (from the tbody) and\n\t\t * return the resulting jQuery object.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter\n\t\t *    criterion (\"applied\") or all TR elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be \n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {object} jQuery object, filtered by the given selector.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Highlight every second row\n\t\t *      oTable.$('tr:odd').css('backgroundColor', 'blue');\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to rows with 'Webkit' in them, add a background colour and then\n\t\t *      // remove the filter, thus highlighting the 'Webkit' rows only.\n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      oTable.$('tr', {\"filter\": \"applied\"}).css('backgroundColor', 'blue');\n\t\t *      oTable.fnFilter('');\n\t\t *    } );\n\t\t */\n\t\tthis.$ = function ( sSelector, oOpts )\n\t\t{\n\t\t\tvar i, iLen, a = [], tr;\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tvar aoData = oSettings.aoData;\n\t\t\tvar aiDisplay = oSettings.aiDisplay;\n\t\t\tvar aiDisplayMaster = oSettings.aiDisplayMaster;\n\t\t\n\t\t\tif ( !oOpts )\n\t\t\t{\n\t\t\t\toOpts = {};\n\t\t\t}\n\t\t\n\t\t\toOpts = $.extend( {}, {\n\t\t\t\t\"filter\": \"none\", // applied\n\t\t\t\t\"order\": \"current\", // \"original\"\n\t\t\t\t\"page\": \"all\" // current\n\t\t\t}, oOpts );\n\t\t\n\t\t\t// Current page implies that order=current and fitler=applied, since it is fairly\n\t\t\t// senseless otherwise\n\t\t\tif ( oOpts.page == 'current' )\n\t\t\t{\n\t\t\t\tfor ( i=oSettings._iDisplayStart, iLen=oSettings.fnDisplayEnd() ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\ttr = aoData[ aiDisplay[i] ].nTr;\n\t\t\t\t\tif ( tr )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( tr );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oOpts.order == \"current\" && oOpts.filter == \"none\" )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=aiDisplayMaster.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\ttr = aoData[ aiDisplayMaster[i] ].nTr;\n\t\t\t\t\tif ( tr )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( tr );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oOpts.order == \"current\" && oOpts.filter == \"applied\" )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=aiDisplay.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\ttr = aoData[ aiDisplay[i] ].nTr;\n\t\t\t\t\tif ( tr )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( tr );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oOpts.order == \"original\" && oOpts.filter == \"none\" )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\ttr = aoData[ i ].nTr ;\n\t\t\t\t\tif ( tr )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( tr );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( oOpts.order == \"original\" && oOpts.filter == \"applied\" )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\ttr = aoData[ i ].nTr;\n\t\t\t\t\tif ( $.inArray( i, aiDisplay ) !== -1 && tr )\n\t\t\t\t\t{\n\t\t\t\t\t\ta.push( tr );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t_fnLog( oSettings, 1, \"Unknown selection options\" );\n\t\t\t}\n\t\t\n\t\t\t/* We need to filter on the TR elements and also 'find' in their descendants\n\t\t\t * to make the selector act like it would in a full table - so we need\n\t\t\t * to build both results and then combine them together\n\t\t\t */\n\t\t\tvar jqA = $(a);\n\t\t\tvar jqTRs = jqA.filter( sSelector );\n\t\t\tvar jqDescendants = jqA.find( sSelector );\n\t\t\n\t\t\treturn $( [].concat($.makeArray(jqTRs), $.makeArray(jqDescendants)) );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Almost identical to $ in operation, but in this case returns the data for the matched\n\t\t * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes\n\t\t * rather than any descendants, so the data can be obtained for the row/cell. If matching\n\t\t * rows are found, the data returned is the original data array/object that was used to  \n\t\t * create the row (or a generated array if from a DOM source).\n\t\t *\n\t\t * This method is often useful in-combination with $ where both functions are given the\n\t\t * same parameters and the array indexes will match identically.\n\t\t *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on\n\t\t *  @param {object} [oOpts] Optional parameters for modifying the rows to be included\n\t\t *  @param {string} [oOpts.filter=none] Select elements that meet the current filter\n\t\t *    criterion (\"applied\") or all elements (i.e. no filter).\n\t\t *  @param {string} [oOpts.order=current] Order of the data in the processed array.\n\t\t *    Can be either 'current', whereby the current sorting of the table is used, or\n\t\t *    'original' whereby the original order the data was read into the table is used.\n\t\t *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page\n\t\t *    (\"current\") or not (\"all\"). If 'current' is given, then order is assumed to be \n\t\t *    'current' and filter is 'applied', regardless of what they might be given as.\n\t\t *  @returns {array} Data for the matched elements. If any elements, as a result of the\n\t\t *    selector, were not TR, TD or TH elements in the DataTable, they will have a null \n\t\t *    entry in the array.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Get the data from the first row in the table\n\t\t *      var data = oTable._('tr:first');\n\t\t *\n\t\t *      // Do something useful with the data\n\t\t *      alert( \"First cell is: \"+data[0] );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *\n\t\t *      // Filter to 'Webkit' and get all data for \n\t\t *      oTable.fnFilter('Webkit');\n\t\t *      var data = oTable._('tr', {\"filter\": \"applied\"});\n\t\t *      \n\t\t *      // Do something with the data\n\t\t *      alert( data.length+\" rows matched the filter\" );\n\t\t *    } );\n\t\t */\n\t\tthis._ = function ( sSelector, oOpts )\n\t\t{\n\t\t\tvar aOut = [];\n\t\t\tvar i, iLen, iIndex;\n\t\t\tvar aTrs = this.$( sSelector, oOpts );\n\t\t\n\t\t\tfor ( i=0, iLen=aTrs.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\taOut.push( this.fnGetData(aTrs[i]) );\n\t\t\t}\n\t\t\n\t\t\treturn aOut;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Add a single new row or multiple rows of data to the table. Please note\n\t\t * that this is suitable for client-side processing only - if you are using \n\t\t * server-side processing (i.e. \"bServerSide\": true), then to add data, you\n\t\t * must add it to the data source, i.e. the server-side, through an Ajax call.\n\t\t *  @param {array|object} mData The data to be added to the table. This can be:\n\t\t *    <ul>\n\t\t *      <li>1D array of data - add a single row with the data provided</li>\n\t\t *      <li>2D array of arrays - add multiple rows in a single call</li>\n\t\t *      <li>object - data object when using <i>mData</i></li>\n\t\t *      <li>array of objects - multiple data objects when using <i>mData</i></li>\n\t\t *    </ul>\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @returns {array} An array of integers, representing the list of indexes in \n\t\t *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to \n\t\t *    the table.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    // Global var for counter\n\t\t *    var giCount = 2;\n\t\t *    \n\t\t *    $(document).ready(function() {\n\t\t *      $('#example').dataTable();\n\t\t *    } );\n\t\t *    \n\t\t *    function fnClickAddRow() {\n\t\t *      $('#example').dataTable().fnAddData( [\n\t\t *        giCount+\".1\",\n\t\t *        giCount+\".2\",\n\t\t *        giCount+\".3\",\n\t\t *        giCount+\".4\" ]\n\t\t *      );\n\t\t *        \n\t\t *      giCount++;\n\t\t *    }\n\t\t */\n\t\tthis.fnAddData = function( mData, bRedraw )\n\t\t{\n\t\t\tif ( mData.length === 0 )\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\t\n\t\t\tvar aiReturn = [];\n\t\t\tvar iTest;\n\t\t\t\n\t\t\t/* Find settings from table node */\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\t\n\t\t\t/* Check if we want to add multiple rows or not */\n\t\t\tif ( typeof mData[0] === \"object\" && mData[0] !== null )\n\t\t\t{\n\t\t\t\tfor ( var i=0 ; i<mData.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tiTest = _fnAddData( oSettings, mData[i] );\n\t\t\t\t\tif ( iTest == -1 )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn aiReturn;\n\t\t\t\t\t}\n\t\t\t\t\taiReturn.push( iTest );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tiTest = _fnAddData( oSettings, mData );\n\t\t\t\tif ( iTest == -1 )\n\t\t\t\t{\n\t\t\t\t\treturn aiReturn;\n\t\t\t\t}\n\t\t\t\taiReturn.push( iTest );\n\t\t\t}\n\t\t\t\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw )\n\t\t\t{\n\t\t\t\t_fnReDraw( oSettings );\n\t\t\t}\n\t\t\treturn aiReturn;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will make DataTables recalculate the column sizes, based on the data \n\t\t * contained in the table and the sizes applied to the columns (in the DOM, CSS or \n\t\t * through the sWidth parameter). This can be useful when the width of the table's \n\t\t * parent element changes (for example a window resize).\n\t\t *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *      \n\t\t *      $(window).bind('resize', function () {\n\t\t *        oTable.fnAdjustColumnSizing();\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnAdjustColumnSizing = function ( bRedraw )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode(this[DataTable.ext.iApiIndex]);\n\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw )\n\t\t\t{\n\t\t\t\tthis.fnDraw( false );\n\t\t\t}\n\t\t\telse if ( oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\" )\n\t\t\t{\n\t\t\t\t/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */\n\t\t\t\tthis.oApi._fnScrollDraw(oSettings);\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Quickly and simply clear a table\n\t\t *  @param {bool} [bRedraw=true] redraw the table or not\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)\n\t\t *      oTable.fnClearTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClearTable = function( bRedraw )\n\t\t{\n\t\t\t/* Find settings from table node */\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\t_fnClearTable( oSettings );\n\t\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw )\n\t\t\t{\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * The exact opposite of 'opening' a row, this function will close any rows which \n\t\t * are currently 'open'.\n\t\t *  @param {node} nTr the table row to 'close'\n\t\t *  @returns {int} 0 on success, or 1 if failed (can't find the row)\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *      \n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *      \n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnClose = function( nTr )\n\t\t{\n\t\t\t/* Find settings from table node */\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\t\n\t\t\tfor ( var i=0 ; i<oSettings.aoOpenRows.length ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoOpenRows[i].nParent == nTr )\n\t\t\t\t{\n\t\t\t\t\tvar nTrParent = oSettings.aoOpenRows[i].nTr.parentNode;\n\t\t\t\t\tif ( nTrParent )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Remove it if it is currently on display */\n\t\t\t\t\t\tnTrParent.removeChild( oSettings.aoOpenRows[i].nTr );\n\t\t\t\t\t}\n\t\t\t\t\toSettings.aoOpenRows.splice( i, 1 );\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 1;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Remove a row for the table\n\t\t *  @param {mixed} mTarget The index of the row from aoData to be deleted, or\n\t\t *    the TR element you want to delete\n\t\t *  @param {function|null} [fnCallBack] Callback function\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @returns {array} The row that was deleted\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Immediately remove the first row\n\t\t *      oTable.fnDeleteRow( 0 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnDeleteRow = function( mTarget, fnCallBack, bRedraw )\n\t\t{\n\t\t\t/* Find settings from table node */\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tvar i, iLen, iAODataIndex;\n\t\t\t\n\t\t\tiAODataIndex = (typeof mTarget === 'object') ? \n\t\t\t\t_fnNodeToDataIndex(oSettings, mTarget) : mTarget;\n\t\t\t\n\t\t\t/* Return the data array from this row */\n\t\t\tvar oData = oSettings.aoData.splice( iAODataIndex, 1 );\n\t\t\n\t\t\t/* Update the _DT_RowIndex parameter */\n\t\t\tfor ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoData[i].nTr !== null )\n\t\t\t\t{\n\t\t\t\t\toSettings.aoData[i].nTr._DT_RowIndex = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove the target row from the search array */\n\t\t\tvar iDisplayIndex = $.inArray( iAODataIndex, oSettings.aiDisplay );\n\t\t\toSettings.asDataSearch.splice( iDisplayIndex, 1 );\n\t\t\t\n\t\t\t/* Delete from the display arrays */\n\t\t\t_fnDeleteIndex( oSettings.aiDisplayMaster, iAODataIndex );\n\t\t\t_fnDeleteIndex( oSettings.aiDisplay, iAODataIndex );\n\t\t\t\n\t\t\t/* If there is a user callback function - call it */\n\t\t\tif ( typeof fnCallBack === \"function\" )\n\t\t\t{\n\t\t\t\tfnCallBack.call( this, oSettings, oData );\n\t\t\t}\n\t\t\t\n\t\t\t/* Check for an 'overflow' they case for displaying the table */\n\t\t\tif ( oSettings._iDisplayStart >= oSettings.fnRecordsDisplay() )\n\t\t\t{\n\t\t\t\toSettings._iDisplayStart -= oSettings._iDisplayLength;\n\t\t\t\tif ( oSettings._iDisplayStart < 0 )\n\t\t\t\t{\n\t\t\t\t\toSettings._iDisplayStart = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw )\n\t\t\t{\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\treturn oData;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Restore the table to it's original state in the DOM by removing all of DataTables \n\t\t * enhancements, alterations to the DOM structure of the table and event listeners.\n\t\t *  @param {boolean} [bRemove=false] Completely remove the table from the DOM\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      // This example is fairly pointless in reality, but shows how fnDestroy can be used\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnDestroy();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDestroy = function ( bRemove )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tvar nOrig = oSettings.nTableWrapper.parentNode;\n\t\t\tvar nBody = oSettings.nTBody;\n\t\t\tvar i, iLen;\n\t\t\n\t\t\tbRemove = (bRemove===undefined) ? false : bRemove;\n\t\t\t\n\t\t\t/* Flag to note that the table is currently being destroyed - no action should be taken */\n\t\t\toSettings.bDestroying = true;\n\t\t\t\n\t\t\t/* Fire off the destroy callbacks for plug-ins etc */\n\t\t\t_fnCallbackFire( oSettings, \"aoDestroyCallback\", \"destroy\", [oSettings] );\n\t\t\n\t\t\t/* If the table is not being removed, restore the hidden columns */\n\t\t\tif ( !bRemove )\n\t\t\t{\n\t\t\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aoColumns[i].bVisible === false )\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.fnSetColumnVis( i, true );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Blitz all DT events */\n\t\t\t$(oSettings.nTableWrapper).find('*').andSelf().unbind('.DT');\n\t\t\t\n\t\t\t/* If there is an 'empty' indicator row, remove it */\n\t\t\t$('tbody>tr>td.'+oSettings.oClasses.sRowEmpty, oSettings.nTable).parent().remove();\n\t\t\t\n\t\t\t/* When scrolling we had to break the table up - restore it */\n\t\t\tif ( oSettings.nTable != oSettings.nTHead.parentNode )\n\t\t\t{\n\t\t\t\t$(oSettings.nTable).children('thead').remove();\n\t\t\t\toSettings.nTable.appendChild( oSettings.nTHead );\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings.nTFoot && oSettings.nTable != oSettings.nTFoot.parentNode )\n\t\t\t{\n\t\t\t\t$(oSettings.nTable).children('tfoot').remove();\n\t\t\t\toSettings.nTable.appendChild( oSettings.nTFoot );\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove the DataTables generated nodes, events and classes */\n\t\t\toSettings.nTable.parentNode.removeChild( oSettings.nTable );\n\t\t\t$(oSettings.nTableWrapper).remove();\n\t\t\t\n\t\t\toSettings.aaSorting = [];\n\t\t\toSettings.aaSortingFixed = [];\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t$(_fnGetTrNodes( oSettings )).removeClass( oSettings.asStripeClasses.join(' ') );\n\t\t\t\n\t\t\t$('th, td', oSettings.nTHead).removeClass( [\n\t\t\t\toSettings.oClasses.sSortable,\n\t\t\t\toSettings.oClasses.sSortableAsc,\n\t\t\t\toSettings.oClasses.sSortableDesc,\n\t\t\t\toSettings.oClasses.sSortableNone ].join(' ')\n\t\t\t);\n\t\t\tif ( oSettings.bJUI )\n\t\t\t{\n\t\t\t\t$('th span.'+oSettings.oClasses.sSortIcon\n\t\t\t\t\t+ ', td span.'+oSettings.oClasses.sSortIcon, oSettings.nTHead).remove();\n\t\t\n\t\t\t\t$('th, td', oSettings.nTHead).each( function () {\n\t\t\t\t\tvar jqWrapper = $('div.'+oSettings.oClasses.sSortJUIWrapper, this);\n\t\t\t\t\tvar kids = jqWrapper.contents();\n\t\t\t\t\t$(this).append( kids );\n\t\t\t\t\tjqWrapper.remove();\n\t\t\t\t} );\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the TR elements back into the table in their original order */\n\t\t\tif ( !bRemove && oSettings.nTableReinsertBefore )\n\t\t\t{\n\t\t\t\tnOrig.insertBefore( oSettings.nTable, oSettings.nTableReinsertBefore );\n\t\t\t}\n\t\t\telse if ( !bRemove )\n\t\t\t{\n\t\t\t\tnOrig.appendChild( oSettings.nTable );\n\t\t\t}\n\t\t\n\t\t\tfor ( i=0, iLen=oSettings.aoData.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoData[i].nTr !== null )\n\t\t\t\t{\n\t\t\t\t\tnBody.appendChild( oSettings.aoData[i].nTr );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Restore the width of the original table */\n\t\t\tif ( oSettings.oFeatures.bAutoWidth === true )\n\t\t\t{\n\t\t\t  oSettings.nTable.style.width = _fnStringToCss(oSettings.sDestroyWidth);\n\t\t\t}\n\t\t\t\n\t\t\t/* If the were originally stripe classes - then we add them back here. Note\n\t\t\t * this is not fool proof (for example if not all rows had stripe classes - but\n\t\t\t * it's a good effort without getting carried away\n\t\t\t */\n\t\t\tiLen = oSettings.asDestroyStripes.length;\n\t\t\tif (iLen)\n\t\t\t{\n\t\t\t\tvar anRows = $(nBody).children('tr');\n\t\t\t\tfor ( i=0 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tanRows.filter(':nth-child(' + iLen + 'n + ' + i + ')').addClass( oSettings.asDestroyStripes[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove the settings object from the settings array */\n\t\t\tfor ( i=0, iLen=DataTable.settings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( DataTable.settings[i] == oSettings )\n\t\t\t\t{\n\t\t\t\t\tDataTable.settings.splice( i, 1 );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* End it all */\n\t\t\toSettings = null;\n\t\t\toInit = null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Redraw the table\n\t\t *  @param {bool} [bComplete=true] Re-filter and resort (if enabled) the table before the draw.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)\n\t\t *      oTable.fnDraw();\n\t\t *    } );\n\t\t */\n\t\tthis.fnDraw = function( bComplete )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tif ( bComplete === false )\n\t\t\t{\n\t\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t_fnReDraw( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Filter the input based on data\n\t\t *  @param {string} sInput String to filter the table on\n\t\t *  @param {int|null} [iColumn] Column to limit filtering to\n\t\t *  @param {bool} [bRegex=false] Treat as regular expression or not\n\t\t *  @param {bool} [bSmart=true] Perform smart filtering or not\n\t\t *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)\n\t\t *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Sometime later - filter...\n\t\t *      oTable.fnFilter( 'test string' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\t\n\t\t\tif ( !oSettings.oFeatures.bFilter )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tif ( bRegex === undefined || bRegex === null )\n\t\t\t{\n\t\t\t\tbRegex = false;\n\t\t\t}\n\t\t\t\n\t\t\tif ( bSmart === undefined || bSmart === null )\n\t\t\t{\n\t\t\t\tbSmart = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( bShowGlobal === undefined || bShowGlobal === null )\n\t\t\t{\n\t\t\t\tbShowGlobal = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( bCaseInsensitive === undefined || bCaseInsensitive === null )\n\t\t\t{\n\t\t\t\tbCaseInsensitive = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( iColumn === undefined || iColumn === null )\n\t\t\t{\n\t\t\t\t/* Global filter */\n\t\t\t\t_fnFilterComplete( oSettings, {\n\t\t\t\t\t\"sSearch\":sInput+\"\",\n\t\t\t\t\t\"bRegex\": bRegex,\n\t\t\t\t\t\"bSmart\": bSmart,\n\t\t\t\t\t\"bCaseInsensitive\": bCaseInsensitive\n\t\t\t\t}, 1 );\n\t\t\t\t\n\t\t\t\tif ( bShowGlobal && oSettings.aanFeatures.f )\n\t\t\t\t{\n\t\t\t\t\tvar n = oSettings.aanFeatures.f;\n\t\t\t\t\tfor ( var i=0, iLen=n.length ; i<iLen ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\t// IE9 throws an 'unknown error' if document.activeElement is used\n\t\t\t\t\t\t// inside an iframe or frame...\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif ( n[i]._DT_Input != document.activeElement )\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$(n[i]._DT_Input).val( sInput );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch ( e ) {\n\t\t\t\t\t\t\t$(n[i]._DT_Input).val( sInput );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Single column filter */\n\t\t\t\t$.extend( oSettings.aoPreSearchCols[ iColumn ], {\n\t\t\t\t\t\"sSearch\": sInput+\"\",\n\t\t\t\t\t\"bRegex\": bRegex,\n\t\t\t\t\t\"bSmart\": bSmart,\n\t\t\t\t\t\"bCaseInsensitive\": bCaseInsensitive\n\t\t\t\t} );\n\t\t\t\t_fnFilterComplete( oSettings, oSettings.oPreviousSearch, 1 );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the data for the whole table, an individual row or an individual cell based on the \n\t\t * provided parameters.\n\t\t *  @param {int|node} [mRow] A TR row node, TD/TH cell node or an integer. If given as\n\t\t *    a TR node then the data source for the whole row will be returned. If given as a\n\t\t *    TD/TH cell node then iCol will be automatically calculated and the data for the\n\t\t *    cell returned. If given as an integer, then this is treated as the aoData internal\n\t\t *    data index for the row (see fnGetPosition) and the data for that row used.\n\t\t *  @param {int} [iCol] Optional column index that you want the data of.\n\t\t *  @returns {array|object|string} If mRow is undefined, then the data for all rows is\n\t\t *    returned. If mRow is defined, just data for that row, and is iCol is\n\t\t *    defined, only data for the designated cell is returned.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    // Row data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('tr').click( function () {\n\t\t *        var data = oTable.fnGetData( this );\n\t\t *        // ... do something with the array / object of data for the row\n\t\t *      } );\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Individual cell data\n\t\t *    $(document).ready(function() {\n\t\t *      oTable = $('#example').dataTable();\n\t\t *\n\t\t *      oTable.$('td').click( function () {\n\t\t *        var sData = oTable.fnGetData( this );\n\t\t *        alert( 'The cell clicked on had the value of '+sData );\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetData = function( mRow, iCol )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\t\n\t\t\tif ( mRow !== undefined )\n\t\t\t{\n\t\t\t\tvar iRow = mRow;\n\t\t\t\tif ( typeof mRow === 'object' )\n\t\t\t\t{\n\t\t\t\t\tvar sNode = mRow.nodeName.toLowerCase();\n\t\t\t\t\tif (sNode === \"tr\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tiRow = _fnNodeToDataIndex(oSettings, mRow);\n\t\t\t\t\t}\n\t\t\t\t\telse if ( sNode === \"td\" )\n\t\t\t\t\t{\n\t\t\t\t\t\tiRow = _fnNodeToDataIndex(oSettings, mRow.parentNode);\n\t\t\t\t\t\tiCol = _fnNodeToColumnIndex( oSettings, iRow, mRow );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( iCol !== undefined )\n\t\t\t\t{\n\t\t\t\t\treturn _fnGetCellData( oSettings, iRow, iCol, '' );\n\t\t\t\t}\n\t\t\t\treturn (oSettings.aoData[iRow]!==undefined) ?\n\t\t\t\t\toSettings.aoData[iRow]._aData : null;\n\t\t\t}\n\t\t\treturn _fnGetDataMaster( oSettings );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get an array of the TR nodes that are used in the table's body. Note that you will \n\t\t * typically want to use the '$' API method in preference to this as it is more \n\t\t * flexible.\n\t\t *  @param {int} [iRow] Optional row index for the TR element you want\n\t\t *  @returns {array|node} If iRow is undefined, returns an array of all TR elements\n\t\t *    in the table's body, or iRow is defined, just the TR element requested.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Get the nodes from the table\n\t\t *      var nNodes = oTable.fnGetNodes( );\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetNodes = function( iRow )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\t\n\t\t\tif ( iRow !== undefined ) {\n\t\t\t\treturn (oSettings.aoData[iRow]!==undefined) ?\n\t\t\t\t\toSettings.aoData[iRow].nTr : null;\n\t\t\t}\n\t\t\treturn _fnGetTrNodes( oSettings );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the array indexes of a particular cell from it's DOM element\n\t\t * and column index including hidden columns\n\t\t *  @param {node} nNode this can either be a TR, TD or TH in the table's body\n\t\t *  @returns {int} If nNode is given as a TR, then a single index is returned, or\n\t\t *    if given as a cell, an array of [row index, column index (visible), \n\t\t *    column index (all)] is given.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      $('#example tbody td').click( function () {\n\t\t *        // Get the position of the current data from the node\n\t\t *        var aPos = oTable.fnGetPosition( this );\n\t\t *        \n\t\t *        // Get the data array for this row\n\t\t *        var aData = oTable.fnGetData( aPos[0] );\n\t\t *        \n\t\t *        // Update the data array and return the value\n\t\t *        aData[ aPos[1] ] = 'clicked';\n\t\t *        this.innerHTML = 'clicked';\n\t\t *      } );\n\t\t *      \n\t\t *      // Init DataTables\n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnGetPosition = function( nNode )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tvar sNodeName = nNode.nodeName.toUpperCase();\n\t\t\t\n\t\t\tif ( sNodeName == \"TR\" )\n\t\t\t{\n\t\t\t\treturn _fnNodeToDataIndex(oSettings, nNode);\n\t\t\t}\n\t\t\telse if ( sNodeName == \"TD\" || sNodeName == \"TH\" )\n\t\t\t{\n\t\t\t\tvar iDataIndex = _fnNodeToDataIndex( oSettings, nNode.parentNode );\n\t\t\t\tvar iColumnIndex = _fnNodeToColumnIndex( oSettings, iDataIndex, nNode );\n\t\t\t\treturn [ iDataIndex, _fnColumnIndexToVisible(oSettings, iColumnIndex ), iColumnIndex ];\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Check to see if a row is 'open' or not.\n\t\t *  @param {node} nTr the table row to check\n\t\t *  @returns {boolean} true if the row is currently open, false otherwise\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *      \n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *      \n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnIsOpen = function( nTr )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tvar aoOpenRows = oSettings.aoOpenRows;\n\t\t\t\n\t\t\tfor ( var i=0 ; i<oSettings.aoOpenRows.length ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aoOpenRows[i].nParent == nTr )\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * This function will place a new row directly after a row which is currently \n\t\t * on display on the page, with the HTML contents that is passed into the \n\t\t * function. This can be used, for example, to ask for confirmation that a \n\t\t * particular record should be deleted.\n\t\t *  @param {node} nTr The table row to 'open'\n\t\t *  @param {string|node|jQuery} mHtml The HTML to put into the row\n\t\t *  @param {string} sClass Class to give the new TD cell\n\t\t *  @returns {node} The row opened. Note that if the table row passed in as the\n\t\t *    first parameter, is not found in the table, this method will silently\n\t\t *    return.\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable;\n\t\t *      \n\t\t *      // 'open' an information row when a row is clicked on\n\t\t *      $('#example tbody tr').click( function () {\n\t\t *        if ( oTable.fnIsOpen(this) ) {\n\t\t *          oTable.fnClose( this );\n\t\t *        } else {\n\t\t *          oTable.fnOpen( this, \"Temporary row opened\", \"info_row\" );\n\t\t *        }\n\t\t *      } );\n\t\t *      \n\t\t *      oTable = $('#example').dataTable();\n\t\t *    } );\n\t\t */\n\t\tthis.fnOpen = function( nTr, mHtml, sClass )\n\t\t{\n\t\t\t/* Find settings from table node */\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\n\t\t\t/* Check that the row given is in the table */\n\t\t\tvar nTableRows = _fnGetTrNodes( oSettings );\n\t\t\tif ( $.inArray(nTr, nTableRows) === -1 )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* the old open one if there is one */\n\t\t\tthis.fnClose( nTr );\n\t\t\t\n\t\t\tvar nNewRow = document.createElement(\"tr\");\n\t\t\tvar nNewCell = document.createElement(\"td\");\n\t\t\tnNewRow.appendChild( nNewCell );\n\t\t\tnNewCell.className = sClass;\n\t\t\tnNewCell.colSpan = _fnVisbleColumns( oSettings );\n\t\t\n\t\t\tif (typeof mHtml === \"string\")\n\t\t\t{\n\t\t\t\tnNewCell.innerHTML = mHtml;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$(nNewCell).html( mHtml );\n\t\t\t}\n\t\t\n\t\t\t/* If the nTr isn't on the page at the moment - then we don't insert at the moment */\n\t\t\tvar nTrs = $('tr', oSettings.nTBody);\n\t\t\tif ( $.inArray(nTr, nTrs) != -1  )\n\t\t\t{\n\t\t\t\t$(nNewRow).insertAfter(nTr);\n\t\t\t}\n\t\t\t\n\t\t\toSettings.aoOpenRows.push( {\n\t\t\t\t\"nTr\": nNewRow,\n\t\t\t\t\"nParent\": nTr\n\t\t\t} );\n\t\t\t\n\t\t\treturn nNewRow;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Change the pagination - provides the internal logic for pagination in a simple API \n\t\t * function. With this function you can have a DataTables table go to the next, \n\t\t * previous, first or last pages.\n\t\t *  @param {string|int} mAction Paging action to take: \"first\", \"previous\", \"next\" or \"last\"\n\t\t *    or page number to jump to (integer), note that page 0 is the first page.\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnPageChange( 'next' );\n\t\t *    } );\n\t\t */\n\t\tthis.fnPageChange = function ( mAction, bRedraw )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\t_fnPageChange( oSettings, mAction );\n\t\t\t_fnCalculateEnd( oSettings );\n\t\t\t\n\t\t\tif ( bRedraw === undefined || bRedraw )\n\t\t\t{\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Show a particular column\n\t\t *  @param {int} iCol The column whose display should be changed\n\t\t *  @param {bool} bShow Show (true) or hide (false) the column\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Hide the second column after initialisation\n\t\t *      oTable.fnSetColumnVis( 1, false );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSetColumnVis = function ( iCol, bShow, bRedraw )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tvar i, iLen;\n\t\t\tvar aoColumns = oSettings.aoColumns;\n\t\t\tvar aoData = oSettings.aoData;\n\t\t\tvar nTd, bAppend, iBefore;\n\t\t\t\n\t\t\t/* No point in doing anything if we are requesting what is already true */\n\t\t\tif ( aoColumns[iCol].bVisible == bShow )\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Show the column */\n\t\t\tif ( bShow )\n\t\t\t{\n\t\t\t\tvar iInsert = 0;\n\t\t\t\tfor ( i=0 ; i<iCol ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( aoColumns[i].bVisible )\n\t\t\t\t\t{\n\t\t\t\t\t\tiInsert++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Need to decide if we should use appendChild or insertBefore */\n\t\t\t\tbAppend = (iInsert >= _fnVisbleColumns( oSettings ));\n\t\t\n\t\t\t\t/* Which coloumn should we be inserting before? */\n\t\t\t\tif ( !bAppend )\n\t\t\t\t{\n\t\t\t\t\tfor ( i=iCol ; i<aoColumns.length ; i++ )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( aoColumns[i].bVisible )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tiBefore = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( aoData[i].nTr !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\tif ( bAppend )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taoData[i].nTr.appendChild( \n\t\t\t\t\t\t\t\taoData[i]._anHidden[iCol]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taoData[i].nTr.insertBefore(\n\t\t\t\t\t\t\t\taoData[i]._anHidden[iCol], \n\t\t\t\t\t\t\t\t_fnGetTdNodes( oSettings, i )[iBefore] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Remove a column from display */\n\t\t\t\tfor ( i=0, iLen=aoData.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( aoData[i].nTr !== null )\n\t\t\t\t\t{\n\t\t\t\t\t\tnTd = _fnGetTdNodes( oSettings, i )[iCol];\n\t\t\t\t\t\taoData[i]._anHidden[iCol] = nTd;\n\t\t\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Clear to set the visible flag */\n\t\t\taoColumns[iCol].bVisible = bShow;\n\t\t\n\t\t\t/* Redraw the header and footer based on the new column visibility */\n\t\t\t_fnDrawHead( oSettings, oSettings.aoHeader );\n\t\t\tif ( oSettings.nTFoot )\n\t\t\t{\n\t\t\t\t_fnDrawHead( oSettings, oSettings.aoFooter );\n\t\t\t}\n\t\t\t\n\t\t\t/* If there are any 'open' rows, then we need to alter the colspan for this col change */\n\t\t\tfor ( i=0, iLen=oSettings.aoOpenRows.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\toSettings.aoOpenRows[i].nTr.colSpan = _fnVisbleColumns( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* Do a redraw incase anything depending on the table columns needs it \n\t\t\t * (built-in: scrolling) \n\t\t\t */\n\t\t\tif ( bRedraw === undefined || bRedraw )\n\t\t\t{\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t\t_fnDraw( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t_fnSaveState( oSettings );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Get the settings for a particular table for external manipulation\n\t\t *  @returns {object} DataTables settings object. See \n\t\t *    {@link DataTable.models.oSettings}\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      var oSettings = oTable.fnSettings();\n\t\t *      \n\t\t *      // Show an example parameter from the settings\n\t\t *      alert( oSettings._iDisplayStart );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSettings = function()\n\t\t{\n\t\t\treturn _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Sort the table by a particular column\n\t\t *  @param {int} iCol the data index to sort on. Note that this will not match the \n\t\t *    'display index' if you have hidden data entries\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Sort immediately with columns 0 and 1\n\t\t *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSort = function( aaSort )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\toSettings.aaSorting = aaSort;\n\t\t\t_fnSort( oSettings );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Attach a sort listener to an element for a given column\n\t\t *  @param {node} nNode the element to attach the sort listener to\n\t\t *  @param {int} iColumn the column that a click on this node will sort on\n\t\t *  @param {function} [fnCallback] callback function when sort is run\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      \n\t\t *      // Sort on column 1, when 'sorter' is clicked on\n\t\t *      oTable.fnSortListener( document.getElementById('sorter'), 1 );\n\t\t *    } );\n\t\t */\n\t\tthis.fnSortListener = function( nNode, iColumn, fnCallback )\n\t\t{\n\t\t\t_fnSortAttachListener( _fnSettingsFromNode( this[DataTable.ext.iApiIndex] ), nNode, iColumn,\n\t\t\t \tfnCallback );\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Update a table cell or row - this method will accept either a single value to\n\t\t * update the cell with, an array of values with one element for each column or\n\t\t * an object in the same format as the original data source. The function is\n\t\t * self-referencing in order to make the multi column updates easier.\n\t\t *  @param {object|array|string} mData Data to update the cell/row with\n\t\t *  @param {node|int} mRow TR element you want to update or the aoData index\n\t\t *  @param {int} [iColumn] The column to update (not used of mData is an array or object)\n\t\t *  @param {bool} [bRedraw=true] Redraw the table or not\n\t\t *  @param {bool} [bAction=true] Perform pre-draw actions or not\n\t\t *  @returns {int} 0 on success, 1 on error\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell\n\t\t *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], 1, 0 ); // Row\n\t\t *    } );\n\t\t */\n\t\tthis.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )\n\t\t{\n\t\t\tvar oSettings = _fnSettingsFromNode( this[DataTable.ext.iApiIndex] );\n\t\t\tvar i, iLen, sDisplay;\n\t\t\tvar iRow = (typeof mRow === 'object') ? \n\t\t\t\t_fnNodeToDataIndex(oSettings, mRow) : mRow;\n\t\t\t\n\t\t\tif ( $.isArray(mData) && iColumn === undefined )\n\t\t\t{\n\t\t\t\t/* Array update - update the whole row */\n\t\t\t\toSettings.aoData[iRow]._aData = mData.slice();\n\t\t\t\t\n\t\t\t\t/* Flag to the function that we are recursing */\n\t\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tthis.fnUpdate( _fnGetCellData( oSettings, iRow, i ), iRow, i, false, false );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( $.isPlainObject(mData) && iColumn === undefined )\n\t\t\t{\n\t\t\t\t/* Object update - update the whole row - assume the developer gets the object right */\n\t\t\t\toSettings.aoData[iRow]._aData = $.extend( true, {}, mData );\n\t\t\n\t\t\t\tfor ( i=0 ; i<oSettings.aoColumns.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\tthis.fnUpdate( _fnGetCellData( oSettings, iRow, i ), iRow, i, false, false );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Individual cell update */\n\t\t\t\t_fnSetCellData( oSettings, iRow, iColumn, mData );\n\t\t\t\tsDisplay = _fnGetCellData( oSettings, iRow, iColumn, 'display' );\n\t\t\t\t\n\t\t\t\tvar oCol = oSettings.aoColumns[iColumn];\n\t\t\t\tif ( oCol.fnRender !== null )\n\t\t\t\t{\n\t\t\t\t\tsDisplay = _fnRender( oSettings, iRow, iColumn );\n\t\t\t\t\tif ( oCol.bUseRendered )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnSetCellData( oSettings, iRow, iColumn, sDisplay );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( oSettings.aoData[iRow].nTr !== null )\n\t\t\t\t{\n\t\t\t\t\t/* Do the actual HTML update */\n\t\t\t\t\t_fnGetTdNodes( oSettings, iRow )[iColumn].innerHTML = sDisplay;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Modify the search index for this row (strictly this is likely not needed, since fnReDraw\n\t\t\t * will rebuild the search array - however, the redraw might be disabled by the user)\n\t\t\t */\n\t\t\tvar iDisplayIndex = $.inArray( iRow, oSettings.aiDisplay );\n\t\t\toSettings.asDataSearch[iDisplayIndex] = _fnBuildSearchRow(\n\t\t\t\toSettings, \n\t\t\t\t_fnGetRowData( oSettings, iRow, 'filter', _fnGetColumns( oSettings, 'bSearchable' ) )\n\t\t\t);\n\t\t\t\n\t\t\t/* Perform pre-draw actions */\n\t\t\tif ( bAction === undefined || bAction )\n\t\t\t{\n\t\t\t\t_fnAdjustColumnSizing( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* Redraw the table */\n\t\t\tif ( bRedraw === undefined || bRedraw )\n\t\t\t{\n\t\t\t\t_fnReDraw( oSettings );\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t\t\n\t\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t\t * to ensure compatibility.\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t\t *    version, or false if this version of DataTales is not suitable\n\t\t *  @method\n\t\t *  @dtopt API\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\tthis.fnVersionCheck = DataTable.ext.fnVersionCheck;\n\t\t\n\t\t\n\t\t/*\n\t\t * This is really a good bit rubbish this method of exposing the internal methods\n\t\t * publicly... - To be fixed in 2.0 using methods on the prototype\n\t\t */\n\t\t\n\t\t\n\t\t/**\n\t\t * Create a wrapper function for exporting an internal functions to an external API.\n\t\t *  @param {string} sFunc API function name\n\t\t *  @returns {function} wrapped function\n\t\t *  @memberof DataTable#oApi\n\t\t */\n\t\tfunction _fnExternApiFunc (sFunc)\n\t\t{\n\t\t\treturn function() {\n\t\t\t\tvar aArgs = [_fnSettingsFromNode(this[DataTable.ext.iApiIndex])].concat( \n\t\t\t\t\tArray.prototype.slice.call(arguments) );\n\t\t\t\treturn DataTable.ext.oApi[sFunc].apply( this, aArgs );\n\t\t\t};\n\t\t}\n\t\t\n\t\t\n\t\t/**\n\t\t * Reference to internal functions for use by plug-in developers. Note that these\n\t\t * methods are references to internal functions and are considered to be private.\n\t\t * If you use these methods, be aware that they are liable to change between versions\n\t\t * (check the upgrade notes).\n\t\t *  @namespace\n\t\t */\n\t\tthis.oApi = {\n\t\t\t\"_fnExternApiFunc\": _fnExternApiFunc,\n\t\t\t\"_fnInitialise\": _fnInitialise,\n\t\t\t\"_fnInitComplete\": _fnInitComplete,\n\t\t\t\"_fnLanguageCompat\": _fnLanguageCompat,\n\t\t\t\"_fnAddColumn\": _fnAddColumn,\n\t\t\t\"_fnColumnOptions\": _fnColumnOptions,\n\t\t\t\"_fnAddData\": _fnAddData,\n\t\t\t\"_fnCreateTr\": _fnCreateTr,\n\t\t\t\"_fnGatherData\": _fnGatherData,\n\t\t\t\"_fnBuildHead\": _fnBuildHead,\n\t\t\t\"_fnDrawHead\": _fnDrawHead,\n\t\t\t\"_fnDraw\": _fnDraw,\n\t\t\t\"_fnReDraw\": _fnReDraw,\n\t\t\t\"_fnAjaxUpdate\": _fnAjaxUpdate,\n\t\t\t\"_fnAjaxParameters\": _fnAjaxParameters,\n\t\t\t\"_fnAjaxUpdateDraw\": _fnAjaxUpdateDraw,\n\t\t\t\"_fnServerParams\": _fnServerParams,\n\t\t\t\"_fnAddOptionsHtml\": _fnAddOptionsHtml,\n\t\t\t\"_fnFeatureHtmlTable\": _fnFeatureHtmlTable,\n\t\t\t\"_fnScrollDraw\": _fnScrollDraw,\n\t\t\t\"_fnAdjustColumnSizing\": _fnAdjustColumnSizing,\n\t\t\t\"_fnFeatureHtmlFilter\": _fnFeatureHtmlFilter,\n\t\t\t\"_fnFilterComplete\": _fnFilterComplete,\n\t\t\t\"_fnFilterCustom\": _fnFilterCustom,\n\t\t\t\"_fnFilterColumn\": _fnFilterColumn,\n\t\t\t\"_fnFilter\": _fnFilter,\n\t\t\t\"_fnBuildSearchArray\": _fnBuildSearchArray,\n\t\t\t\"_fnBuildSearchRow\": _fnBuildSearchRow,\n\t\t\t\"_fnFilterCreateSearch\": _fnFilterCreateSearch,\n\t\t\t\"_fnDataToSearch\": _fnDataToSearch,\n\t\t\t\"_fnSort\": _fnSort,\n\t\t\t\"_fnSortAttachListener\": _fnSortAttachListener,\n\t\t\t\"_fnSortingClasses\": _fnSortingClasses,\n\t\t\t\"_fnFeatureHtmlPaginate\": _fnFeatureHtmlPaginate,\n\t\t\t\"_fnPageChange\": _fnPageChange,\n\t\t\t\"_fnFeatureHtmlInfo\": _fnFeatureHtmlInfo,\n\t\t\t\"_fnUpdateInfo\": _fnUpdateInfo,\n\t\t\t\"_fnFeatureHtmlLength\": _fnFeatureHtmlLength,\n\t\t\t\"_fnFeatureHtmlProcessing\": _fnFeatureHtmlProcessing,\n\t\t\t\"_fnProcessingDisplay\": _fnProcessingDisplay,\n\t\t\t\"_fnVisibleToColumnIndex\": _fnVisibleToColumnIndex,\n\t\t\t\"_fnColumnIndexToVisible\": _fnColumnIndexToVisible,\n\t\t\t\"_fnNodeToDataIndex\": _fnNodeToDataIndex,\n\t\t\t\"_fnVisbleColumns\": _fnVisbleColumns,\n\t\t\t\"_fnCalculateEnd\": _fnCalculateEnd,\n\t\t\t\"_fnConvertToWidth\": _fnConvertToWidth,\n\t\t\t\"_fnCalculateColumnWidths\": _fnCalculateColumnWidths,\n\t\t\t\"_fnScrollingWidthAdjust\": _fnScrollingWidthAdjust,\n\t\t\t\"_fnGetWidestNode\": _fnGetWidestNode,\n\t\t\t\"_fnGetMaxLenString\": _fnGetMaxLenString,\n\t\t\t\"_fnStringToCss\": _fnStringToCss,\n\t\t\t\"_fnDetectType\": _fnDetectType,\n\t\t\t\"_fnSettingsFromNode\": _fnSettingsFromNode,\n\t\t\t\"_fnGetDataMaster\": _fnGetDataMaster,\n\t\t\t\"_fnGetTrNodes\": _fnGetTrNodes,\n\t\t\t\"_fnGetTdNodes\": _fnGetTdNodes,\n\t\t\t\"_fnEscapeRegex\": _fnEscapeRegex,\n\t\t\t\"_fnDeleteIndex\": _fnDeleteIndex,\n\t\t\t\"_fnReOrderIndex\": _fnReOrderIndex,\n\t\t\t\"_fnColumnOrdering\": _fnColumnOrdering,\n\t\t\t\"_fnLog\": _fnLog,\n\t\t\t\"_fnClearTable\": _fnClearTable,\n\t\t\t\"_fnSaveState\": _fnSaveState,\n\t\t\t\"_fnLoadState\": _fnLoadState,\n\t\t\t\"_fnCreateCookie\": _fnCreateCookie,\n\t\t\t\"_fnReadCookie\": _fnReadCookie,\n\t\t\t\"_fnDetectHeader\": _fnDetectHeader,\n\t\t\t\"_fnGetUniqueThs\": _fnGetUniqueThs,\n\t\t\t\"_fnScrollBarWidth\": _fnScrollBarWidth,\n\t\t\t\"_fnApplyToChildren\": _fnApplyToChildren,\n\t\t\t\"_fnMap\": _fnMap,\n\t\t\t\"_fnGetRowData\": _fnGetRowData,\n\t\t\t\"_fnGetCellData\": _fnGetCellData,\n\t\t\t\"_fnSetCellData\": _fnSetCellData,\n\t\t\t\"_fnGetObjectDataFn\": _fnGetObjectDataFn,\n\t\t\t\"_fnSetObjectDataFn\": _fnSetObjectDataFn,\n\t\t\t\"_fnApplyColumnDefs\": _fnApplyColumnDefs,\n\t\t\t\"_fnBindAction\": _fnBindAction,\n\t\t\t\"_fnExtend\": _fnExtend,\n\t\t\t\"_fnCallbackReg\": _fnCallbackReg,\n\t\t\t\"_fnCallbackFire\": _fnCallbackFire,\n\t\t\t\"_fnJsonString\": _fnJsonString,\n\t\t\t\"_fnRender\": _fnRender,\n\t\t\t\"_fnNodeToColumnIndex\": _fnNodeToColumnIndex,\n\t\t\t\"_fnInfoMacros\": _fnInfoMacros,\n\t\t\t\"_fnBrowserDetect\": _fnBrowserDetect,\n\t\t\t\"_fnGetColumns\": _fnGetColumns\n\t\t};\n\t\t\n\t\t$.extend( DataTable.ext.oApi, this.oApi );\n\t\t\n\t\tfor ( var sFunc in DataTable.ext.oApi )\n\t\t{\n\t\t\tif ( sFunc )\n\t\t\t{\n\t\t\t\tthis[sFunc] = _fnExternApiFunc(sFunc);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tvar _that = this;\n\t\tthis.each(function() {\n\t\t\tvar i=0, iLen, j, jLen, k, kLen;\n\t\t\tvar sId = this.getAttribute( 'id' );\n\t\t\tvar bInitHandedOff = false;\n\t\t\tvar bUsePassedData = false;\n\t\t\t\n\t\t\t\n\t\t\t/* Sanity check */\n\t\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t\t{\n\t\t\t\t_fnLog( null, 0, \"Attempted to initialise DataTables on a node which is not a \"+\n\t\t\t\t\t\"table: \"+this.nodeName );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t/* Check to see if we are re-initialising a table */\n\t\t\tfor ( i=0, iLen=DataTable.settings.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t/* Base check on table node */\n\t\t\t\tif ( DataTable.settings[i].nTable == this )\n\t\t\t\t{\n\t\t\t\t\tif ( oInit === undefined || oInit.bRetrieve )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn DataTable.settings[i].oInstance;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( oInit.bDestroy )\n\t\t\t\t\t{\n\t\t\t\t\t\tDataTable.settings[i].oInstance.fnDestroy();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnLog( DataTable.settings[i], 0, \"Cannot reinitialise DataTable.\\n\\n\"+\n\t\t\t\t\t\t\t\"To retrieve the DataTables object for this table, pass no arguments or see \"+\n\t\t\t\t\t\t\t\"the docs for bRetrieve and bDestroy\" );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t\t */\n\t\t\t\tif ( DataTable.settings[i].sTableId == this.id )\n\t\t\t\t{\n\t\t\t\t\tDataTable.settings.splice( i, 1 );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/* Ensure the table has an ID - required for accessibility */\n\t\t\tif ( sId === null || sId === \"\" )\n\t\t\t{\n\t\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._oExternConfig.iNextUnique++);\n\t\t\t\tthis.id = sId;\n\t\t\t}\n\t\t\t\n\t\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\t\"nTable\":        this,\n\t\t\t\t\"oApi\":          _that.oApi,\n\t\t\t\t\"oInit\":         oInit,\n\t\t\t\t\"sDestroyWidth\": $(this).width(),\n\t\t\t\t\"sInstance\":     sId,\n\t\t\t\t\"sTableId\":      sId\n\t\t\t} );\n\t\t\tDataTable.settings.push( oSettings );\n\t\t\t\n\t\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\t\toSettings.oInstance = (_that.length===1) ? _that : $(this).dataTable();\n\t\t\t\n\t\t\t/* Setting up the initialisation object */\n\t\t\tif ( !oInit )\n\t\t\t{\n\t\t\t\toInit = {};\n\t\t\t}\n\t\t\t\n\t\t\t// Backwards compatibility, before we apply all the defaults\n\t\t\tif ( oInit.oLanguage )\n\t\t\t{\n\t\t\t\t_fnLanguageCompat( oInit.oLanguage );\n\t\t\t}\n\t\t\t\n\t\t\toInit = _fnExtend( $.extend(true, {}, DataTable.defaults), oInit );\n\t\t\t\n\t\t\t// Map the initialisation options onto the settings object\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bPaginate\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bLengthChange\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bFilter\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bSort\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bInfo\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bProcessing\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bAutoWidth\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bSortClasses\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bServerSide\" );\n\t\t\t_fnMap( oSettings.oFeatures, oInit, \"bDeferRender\" );\n\t\t\t_fnMap( oSettings.oScroll, oInit, \"sScrollX\", \"sX\" );\n\t\t\t_fnMap( oSettings.oScroll, oInit, \"sScrollXInner\", \"sXInner\" );\n\t\t\t_fnMap( oSettings.oScroll, oInit, \"sScrollY\", \"sY\" );\n\t\t\t_fnMap( oSettings.oScroll, oInit, \"bScrollCollapse\", \"bCollapse\" );\n\t\t\t_fnMap( oSettings.oScroll, oInit, \"bScrollInfinite\", \"bInfinite\" );\n\t\t\t_fnMap( oSettings.oScroll, oInit, \"iScrollLoadGap\", \"iLoadGap\" );\n\t\t\t_fnMap( oSettings.oScroll, oInit, \"bScrollAutoCss\", \"bAutoCss\" );\n\t\t\t_fnMap( oSettings, oInit, \"asStripeClasses\" );\n\t\t\t_fnMap( oSettings, oInit, \"asStripClasses\", \"asStripeClasses\" ); // legacy\n\t\t\t_fnMap( oSettings, oInit, \"fnServerData\" );\n\t\t\t_fnMap( oSettings, oInit, \"fnFormatNumber\" );\n\t\t\t_fnMap( oSettings, oInit, \"sServerMethod\" );\n\t\t\t_fnMap( oSettings, oInit, \"aaSorting\" );\n\t\t\t_fnMap( oSettings, oInit, \"aaSortingFixed\" );\n\t\t\t_fnMap( oSettings, oInit, \"aLengthMenu\" );\n\t\t\t_fnMap( oSettings, oInit, \"sPaginationType\" );\n\t\t\t_fnMap( oSettings, oInit, \"sAjaxSource\" );\n\t\t\t_fnMap( oSettings, oInit, \"sAjaxDataProp\" );\n\t\t\t_fnMap( oSettings, oInit, \"iCookieDuration\" );\n\t\t\t_fnMap( oSettings, oInit, \"sCookiePrefix\" );\n\t\t\t_fnMap( oSettings, oInit, \"sDom\" );\n\t\t\t_fnMap( oSettings, oInit, \"bSortCellsTop\" );\n\t\t\t_fnMap( oSettings, oInit, \"iTabIndex\" );\n\t\t\t_fnMap( oSettings, oInit, \"oSearch\", \"oPreviousSearch\" );\n\t\t\t_fnMap( oSettings, oInit, \"aoSearchCols\", \"aoPreSearchCols\" );\n\t\t\t_fnMap( oSettings, oInit, \"iDisplayLength\", \"_iDisplayLength\" );\n\t\t\t_fnMap( oSettings, oInit, \"bJQueryUI\", \"bJUI\" );\n\t\t\t_fnMap( oSettings, oInit, \"fnCookieCallback\" );\n\t\t\t_fnMap( oSettings, oInit, \"fnStateLoad\" );\n\t\t\t_fnMap( oSettings, oInit, \"fnStateSave\" );\n\t\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\t\n\t\t\t/* Callback functions which are array driven */\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );\n\t\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );\n\t\t\t\n\t\t\tif ( oSettings.oFeatures.bServerSide && oSettings.oFeatures.bSort &&\n\t\t\t\t   oSettings.oFeatures.bSortClasses )\n\t\t\t{\n\t\t\t\t/* Enable sort classes for server-side processing. Safe to do it here, since server-side\n\t\t\t\t * processing must be enabled by the developer\n\t\t\t\t */\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSortingClasses, 'server_side_sort_classes' );\n\t\t\t}\n\t\t\telse if ( oSettings.oFeatures.bDeferRender )\n\t\t\t{\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSortingClasses, 'defer_sort_classes' );\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.bJQueryUI )\n\t\t\t{\n\t\t\t\t/* Use the JUI classes object for display. You could clone the oStdClasses object if \n\t\t\t\t * you want to have multiple tables with multiple independent classes \n\t\t\t\t */\n\t\t\t\t$.extend( oSettings.oClasses, DataTable.ext.oJUIClasses );\n\t\t\t\t\n\t\t\t\tif ( oInit.sDom === DataTable.defaults.sDom && DataTable.defaults.sDom === \"lfrtip\" )\n\t\t\t\t{\n\t\t\t\t\t/* Set the DOM to use a layout suitable for jQuery UI's theming */\n\t\t\t\t\toSettings.sDom = '<\"H\"lfr>t<\"F\"ip>';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$.extend( oSettings.oClasses, DataTable.ext.oStdClasses );\n\t\t\t}\n\t\t\t$(this).addClass( oSettings.oClasses.sTable );\n\t\t\t\n\t\t\t/* Calculate the scroll bar width and cache it for use later on */\n\t\t\tif ( oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\" )\n\t\t\t{\n\t\t\t\toSettings.oScroll.iBarWidth = _fnScrollBarWidth();\n\t\t\t}\n\t\t\t\n\t\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t\t{\n\t\t\t\t/* Display start point, taking into account the save saving */\n\t\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t\t}\n\t\t\t\n\t\t\t/* Must be done after everything which can be overridden by a cookie! */\n\t\t\tif ( oInit.bStateSave )\n\t\t\t{\n\t\t\t\toSettings.oFeatures.bStateSave = true;\n\t\t\t\t_fnLoadState( oSettings, oInit );\n\t\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.iDeferLoading !== null )\n\t\t\t{\n\t\t\t\toSettings.bDeferLoading = true;\n\t\t\t\tvar tmp = $.isArray( oInit.iDeferLoading );\n\t\t\t\toSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;\n\t\t\t\toSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;\n\t\t\t}\n\t\t\t\n\t\t\tif ( oInit.aaData !== null )\n\t\t\t{\n\t\t\t\tbUsePassedData = true;\n\t\t\t}\n\t\t\t\n\t\t\t/* Language definitions */\n\t\t\tif ( oInit.oLanguage.sUrl !== \"\" )\n\t\t\t{\n\t\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that \n\t\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t\t */\n\t\t\t\toSettings.oLanguage.sUrl = oInit.oLanguage.sUrl;\n\t\t\t\t$.getJSON( oSettings.oLanguage.sUrl, null, function( json ) {\n\t\t\t\t\t_fnLanguageCompat( json );\n\t\t\t\t\t$.extend( true, oSettings.oLanguage, oInit.oLanguage, json );\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t} );\n\t\t\t\tbInitHandedOff = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$.extend( true, oSettings.oLanguage, oInit.oLanguage );\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t * Stripes\n\t\t\t */\n\t\t\tif ( oInit.asStripeClasses === null )\n\t\t\t{\n\t\t\t\toSettings.asStripeClasses =[\n\t\t\t\t\toSettings.oClasses.sStripeOdd,\n\t\t\t\t\toSettings.oClasses.sStripeEven\n\t\t\t\t];\n\t\t\t}\n\t\t\t\n\t\t\t/* Remove row stripe classes if they are already on the table row */\n\t\t\tiLen=oSettings.asStripeClasses.length;\n\t\t\toSettings.asDestroyStripes = [];\n\t\t\tif (iLen)\n\t\t\t{\n\t\t\t\tvar bStripeRemove = false;\n\t\t\t\tvar anRows = $(this).children('tbody').children('tr:lt(' + iLen + ')');\n\t\t\t\tfor ( i=0 ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tif ( anRows.hasClass( oSettings.asStripeClasses[i] ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tbStripeRemove = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\t/* Store the classes which we are about to remove so they can be re-added on destroy */\n\t\t\t\t\t\toSettings.asDestroyStripes.push( oSettings.asStripeClasses[i] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ( bStripeRemove )\n\t\t\t\t{\n\t\t\t\t\tanRows.removeClass( oSettings.asStripeClasses.join(' ') );\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/*\n\t\t\t * Columns\n\t\t\t * See if we should load columns automatically or use defined ones\n\t\t\t */\n\t\t\tvar anThs = [];\n\t\t\tvar aoColumnsInit;\n\t\t\tvar nThead = this.getElementsByTagName('thead');\n\t\t\tif ( nThead.length !== 0 )\n\t\t\t{\n\t\t\t\t_fnDetectHeader( oSettings.aoHeader, nThead[0] );\n\t\t\t\tanThs = _fnGetUniqueThs( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* If not given a column array, generate one with nulls */\n\t\t\tif ( oInit.aoColumns === null )\n\t\t\t{\n\t\t\t\taoColumnsInit = [];\n\t\t\t\tfor ( i=0, iLen=anThs.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\taoColumnsInit.push( null );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoColumnsInit = oInit.aoColumns;\n\t\t\t}\n\t\t\t\n\t\t\t/* Add the columns */\n\t\t\tfor ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\t/* Short cut - use the loop to check if we have column visibility state to restore */\n\t\t\t\tif ( oInit.saved_aoColumns !== undefined && oInit.saved_aoColumns.length == iLen )\n\t\t\t\t{\n\t\t\t\t\tif ( aoColumnsInit[i] === null )\n\t\t\t\t\t{\n\t\t\t\t\t\taoColumnsInit[i] = {};\n\t\t\t\t\t}\n\t\t\t\t\taoColumnsInit[i].bVisible = oInit.saved_aoColumns[i].bVisible;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t_fnAddColumn( oSettings, anThs ? anThs[i] : null );\n\t\t\t}\n\t\t\t\n\t\t\t/* Apply the column definitions */\n\t\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {\n\t\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t\t} );\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * Check the aaSorting array\n\t\t\t */\n\t\t\tfor ( i=0, iLen=oSettings.aaSorting.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( oSettings.aaSorting[i][0] >= oSettings.aoColumns.length )\n\t\t\t\t{\n\t\t\t\t\toSettings.aaSorting[i][0] = 0;\n\t\t\t\t}\n\t\t\t\tvar oColumn = oSettings.aoColumns[ oSettings.aaSorting[i][0] ];\n\t\t\t\t\n\t\t\t\t/* Add a default sorting index */\n\t\t\t\tif ( oSettings.aaSorting[i][2] === undefined )\n\t\t\t\t{\n\t\t\t\t\toSettings.aaSorting[i][2] = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* If aaSorting is not defined, then we use the first indicator in asSorting */\n\t\t\t\tif ( oInit.aaSorting === undefined && oSettings.saved_aaSorting === undefined )\n\t\t\t\t{\n\t\t\t\t\toSettings.aaSorting[i][1] = oColumn.asSorting[0];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Set the current sorting index based on aoColumns.asSorting */\n\t\t\t\tfor ( j=0, jLen=oColumn.asSorting.length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\tif ( oSettings.aaSorting[i][1] == oColumn.asSorting[j] )\n\t\t\t\t\t{\n\t\t\t\t\t\toSettings.aaSorting[i][2] = j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\t\n\t\t\t/* Browser support detection */\n\t\t\t_fnBrowserDetect( oSettings );\n\t\t\t\n\t\t\t// Work around for Webkit bug 83867 - store the caption-side before removing from doc\n\t\t\tvar captions = $(this).children('caption').each( function () {\n\t\t\t\tthis._captionSide = $(this).css('caption-side');\n\t\t\t} );\n\t\t\t\n\t\t\tvar thead = $(this).children('thead');\n\t\t\tif ( thead.length === 0 )\n\t\t\t{\n\t\t\t\tthead = [ document.createElement( 'thead' ) ];\n\t\t\t\tthis.appendChild( thead[0] );\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\t\n\t\t\tvar tbody = $(this).children('tbody');\n\t\t\tif ( tbody.length === 0 )\n\t\t\t{\n\t\t\t\ttbody = [ document.createElement( 'tbody' ) ];\n\t\t\t\tthis.appendChild( tbody[0] );\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\toSettings.nTBody.setAttribute( \"role\", \"alert\" );\n\t\t\toSettings.nTBody.setAttribute( \"aria-live\", \"polite\" );\n\t\t\toSettings.nTBody.setAttribute( \"aria-relevant\", \"all\" );\n\t\t\t\n\t\t\tvar tfoot = $(this).children('tfoot');\n\t\t\tif ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== \"\" || oSettings.oScroll.sY !== \"\") )\n\t\t\t{\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = [ document.createElement( 'tfoot' ) ];\n\t\t\t\tthis.appendChild( tfoot[0] );\n\t\t\t}\n\t\t\t\n\t\t\tif ( tfoot.length > 0 )\n\t\t\t{\n\t\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t\t_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );\n\t\t\t}\n\t\t\t\n\t\t\t/* Check if there is data passing into the constructor */\n\t\t\tif ( bUsePassedData )\n\t\t\t{\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ )\n\t\t\t\t{\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t/* Grab the data from the page */\n\t\t\t\t_fnGatherData( oSettings );\n\t\t\t}\n\t\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false )\n\t\t\t{\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t} );\n\t\t_that = null;\n\t\treturn this;\n\t};\n\n\t\n\t\n\t/**\n\t * Provide a common method for plug-ins to check the version of DataTables being used, in order\n\t * to ensure compatibility.\n\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note that the\n\t *    formats \"X\" and \"X.Y\" are also acceptable.\n\t *  @returns {boolean} true if this version of DataTables is greater or equal to the required\n\t *    version, or false if this version of DataTales is not suitable\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    alert( $.fn.dataTable.fnVersionCheck( '1.9.0' ) );\n\t */\n\tDataTable.fnVersionCheck = function( sVersion )\n\t{\n\t\t/* This is cheap, but effective */\n\t\tvar fnZPad = function (Zpad, count)\n\t\t{\n\t\t\twhile(Zpad.length < count) {\n\t\t\t\tZpad += '0';\n\t\t\t}\n\t\t\treturn Zpad;\n\t\t};\n\t\tvar aThis = DataTable.ext.sVersion.split('.');\n\t\tvar aThat = sVersion.split('.');\n\t\tvar sThis = '', sThat = '';\n\t\t\n\t\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tsThis += fnZPad( aThis[i], 3 );\n\t\t\tsThat += fnZPad( aThat[i], 3 );\n\t\t}\n\t\t\n\t\treturn parseInt(sThis, 10) >= parseInt(sThat, 10);\n\t};\n\t\n\t\n\t/**\n\t * Check if a TABLE node is a DataTable table already or not.\n\t *  @param {node} nTable The TABLE node to check if it is a DataTable or not (note that other\n\t *    node types can be passed in, but will always return false).\n\t *  @returns {boolean} true the table given is a DataTable, or false otherwise\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    var ex = document.getElementById('example');\n\t *    if ( ! $.fn.DataTable.fnIsDataTable( ex ) ) {\n\t *      $(ex).dataTable();\n\t *    }\n\t */\n\tDataTable.fnIsDataTable = function ( nTable )\n\t{\n\t\tvar o = DataTable.settings;\n\t\n\t\tfor ( var i=0 ; i<o.length ; i++ )\n\t\t{\n\t\t\tif ( o[i].nTable === nTable || o[i].nScrollHead === nTable || o[i].nScrollFoot === nTable )\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\n\t\treturn false;\n\t};\n\t\n\t\n\t/**\n\t * Get all DataTable tables that have been initialised - optionally you can select to\n\t * get only currently visible tables.\n\t *  @param {boolean} [bVisible=false] Flag to indicate if you want all (default) or \n\t *    visible tables only.\n\t *  @returns {array} Array of TABLE nodes (not DataTable instances) which are DataTables\n\t *  @static\n\t *  @dtopt API-Static\n\t *\n\t *  @example\n\t *    var table = $.fn.dataTable.fnTables(true);\n\t *    if ( table.length > 0 ) {\n\t *      $(table).dataTable().fnAdjustColumnSizing();\n\t *    }\n\t */\n\tDataTable.fnTables = function ( bVisible )\n\t{\n\t\tvar out = [];\n\t\n\t\tjQuery.each( DataTable.settings, function (i, o) {\n\t\t\tif ( !bVisible || (bVisible === true && $(o.nTable).is(':visible')) )\n\t\t\t{\n\t\t\t\tout.push( o.nTable );\n\t\t\t}\n\t\t} );\n\t\n\t\treturn out;\n\t};\n\t\n\n\t/**\n\t * Version string for plug-ins to check compatibility. Allowed format is\n\t * a.b.c.d.e where: a:int, b:int, c:int, d:string(dev|beta), e:int. d and\n\t * e are optional\n\t *  @member\n\t *  @type string\n\t *  @default Version number\n\t */\n\tDataTable.version = \"1.9.4\";\n\n\t/**\n\t * Private data store, containing all of the settings objects that are created for the\n\t * tables on a given page.\n\t * \n\t * Note that the <i>DataTable.settings</i> object is aliased to <i>jQuery.fn.dataTableExt</i> \n\t * through which it may be accessed and manipulated, or <i>jQuery.fn.dataTable.settings</i>.\n\t *  @member\n\t *  @type array\n\t *  @default []\n\t *  @private\n\t */\n\tDataTable.settings = [];\n\n\t/**\n\t * Object models container, for the various models that DataTables has available\n\t * to it. These models define the objects that are used to hold the active state \n\t * and configuration of the table.\n\t *  @namespace\n\t */\n\tDataTable.models = {};\n\t\n\t\n\t/**\n\t * DataTables extension options and plug-ins. This namespace acts as a collection \"area\"\n\t * for plug-ins that can be used to extend the default DataTables behaviour - indeed many\n\t * of the build in methods use this method to provide their own capabilities (sorting methods\n\t * for example).\n\t * \n\t * Note that this namespace is aliased to jQuery.fn.dataTableExt so it can be readily accessed\n\t * and modified by plug-ins.\n\t *  @namespace\n\t */\n\tDataTable.models.ext = {\n\t\t/**\n\t\t * Plug-in filtering functions - this method of filtering is complimentary to the default\n\t\t * type based filtering, and a lot more comprehensive as it allows you complete control\n\t\t * over the filtering logic. Each element in this array is a function (parameters\n\t\t * described below) that is called for every row in the table, and your logic decides if\n\t\t * it should be included in the filtered data set or not.\n\t\t *   <ul>\n\t\t *     <li>\n\t\t *       Function input parameters:\n\t\t *       <ul>\n\t\t *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t\t *         <li>{array|object} Data for the row to be processed (same as the original format\n\t\t *           that was passed in as the data source, or an array from a DOM data source</li>\n\t\t *         <li>{int} Row index in aoData ({@link DataTable.models.oSettings.aoData}), which can\n\t\t *           be useful to retrieve the TR element if you need DOM interaction.</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>\n\t\t *       Function return:\n\t\t *       <ul>\n\t\t *         <li>{boolean} Include the row in the filtered result set (true) or not (false)</li>\n\t\t *       </ul>\n\t\t *     </il>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t *\n\t\t *  @example\n\t\t *    // The following example shows custom filtering being applied to the fourth column (i.e.\n\t\t *    // the aData[3] index) based on two input values from the end-user, matching the data in \n\t\t *    // a certain range.\n\t\t *    $.fn.dataTableExt.afnFiltering.push(\n\t\t *      function( oSettings, aData, iDataIndex ) {\n\t\t *        var iMin = document.getElementById('min').value * 1;\n\t\t *        var iMax = document.getElementById('max').value * 1;\n\t\t *        var iVersion = aData[3] == \"-\" ? 0 : aData[3]*1;\n\t\t *        if ( iMin == \"\" && iMax == \"\" ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( iMin == \"\" && iVersion < iMax ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( iMin < iVersion && \"\" == iMax ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        else if ( iMin < iVersion && iVersion < iMax ) {\n\t\t *          return true;\n\t\t *        }\n\t\t *        return false;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\t\"afnFiltering\": [],\n\t\n\t\n\t\t/**\n\t\t * Plug-in sorting functions - this method of sorting is complimentary to the default type\n\t\t * based sorting that DataTables does automatically, allowing much greater control over the\n\t\t * the data that is being used to sort a column. This is useful if you want to do sorting\n\t\t * based on live data (for example the contents of an 'input' element) rather than just the\n\t\t * static string that DataTables knows of. The way these plug-ins work is that you create\n\t\t * an array of the values you wish to be sorted for the column in question and then return\n\t\t * that array. Which pre-sorting function is run here depends on the sSortDataType parameter\n\t\t * that is used for the column (if any). This is the corollary of <i>ofnSearch</i> for sort \n\t\t * data.\n\t\t *   <ul>\n\t     *     <li>\n\t     *       Function input parameters:\n\t     *       <ul>\n\t\t *         <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t     *         <li>{int} Target column index</li>\n\t     *       </ul>\n\t     *     </li>\n\t\t *     <li>\n\t\t *       Function return:\n\t\t *       <ul>\n\t\t *         <li>{array} Data for the column to be sorted upon</li>\n\t\t *       </ul>\n\t\t *     </il>\n\t\t *   </ul>\n\t\t *  \n\t\t * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for\n\t\t * the different uses that DataTables can put the data to. Specifically <i>mData</i> when\n\t\t * used as a function will give you a 'type' (sorting, filtering etc) that you can use to \n\t\t * prepare the data as required for the different types. As such, this method is deprecated.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *  @deprecated\n\t\t *\n\t\t *  @example\n\t\t *    // Updating the cached sorting information with user entered values in HTML input elements\n\t\t *    jQuery.fn.dataTableExt.afnSortData['dom-text'] = function ( oSettings, iColumn )\n\t\t *    {\n\t\t *      var aData = [];\n\t\t *      $( 'td:eq('+iColumn+') input', oSettings.oApi._fnGetTrNodes(oSettings) ).each( function () {\n\t\t *        aData.push( this.value );\n\t\t *      } );\n\t\t *      return aData;\n\t\t *    }\n\t\t */\n\t\t\"afnSortData\": [],\n\t\n\t\n\t\t/**\n\t\t * Feature plug-ins - This is an array of objects which describe the feature plug-ins that are\n\t\t * available to DataTables. These feature plug-ins are accessible through the sDom initialisation\n\t\t * option. As such, each feature plug-in must describe a function that is used to initialise\n\t\t * itself (fnInit), a character so the feature can be enabled by sDom (cFeature) and the name\n\t\t * of the feature (sFeature). Thus the objects attached to this method must provide:\n\t\t *   <ul>\n\t\t *     <li>{function} fnInit Initialisation of the plug-in\n\t\t *       <ul>\n\t     *         <li>\n\t     *           Function input parameters:\n\t     *           <ul>\n\t\t *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t     *           </ul>\n\t     *         </li>\n\t\t *         <li>\n\t\t *           Function return:\n\t\t *           <ul>\n\t\t *             <li>{node|null} The element which contains your feature. Note that the return\n\t\t *                may also be void if your plug-in does not require to inject any DOM elements \n\t\t *                into DataTables control (sDom) - for example this might be useful when \n\t\t *                developing a plug-in which allows table control via keyboard entry.</li>\n\t\t *           </ul>\n\t\t *         </il>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>{character} cFeature Character that will be matched in sDom - case sensitive</li>\n\t\t *     <li>{string} sFeature Feature name</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t * \n\t\t *  @example\n\t\t *    // How TableTools initialises itself.\n\t\t *    $.fn.dataTableExt.aoFeatures.push( {\n\t\t *      \"fnInit\": function( oSettings ) {\n\t\t *        return new TableTools( { \"oDTSettings\": oSettings } );\n\t\t *      },\n\t\t *      \"cFeature\": \"T\",\n\t\t *      \"sFeature\": \"TableTools\"\n\t\t *    } );\n\t\t */\n\t\t\"aoFeatures\": [],\n\t\n\t\n\t\t/**\n\t\t * Type detection plug-in functions - DataTables utilises types to define how sorting and\n\t\t * filtering behave, and types can be either  be defined by the developer (sType for the\n\t\t * column) or they can be automatically detected by the methods in this array. The functions\n\t\t * defined in the array are quite simple, taking a single parameter (the data to analyse) \n\t\t * and returning the type if it is a known type, or null otherwise.\n\t\t *   <ul>\n\t     *     <li>\n\t     *       Function input parameters:\n\t     *       <ul>\n\t\t *         <li>{*} Data from the column cell to be analysed</li>\n\t     *       </ul>\n\t     *     </li>\n\t\t *     <li>\n\t\t *       Function return:\n\t\t *       <ul>\n\t\t *         <li>{string|null} Data type detected, or null if unknown (and thus pass it\n\t\t *           on to the other type detection functions.</li>\n\t\t *       </ul>\n\t\t *     </il>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t *  \n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    jQuery.fn.dataTableExt.aTypes.push(\n\t\t *      function ( sData ) {\n\t\t *        var sValidChars = \"0123456789.-\";\n\t\t *        var Char;\n\t\t *        \n\t\t *        // Check the numeric part\n\t\t *        for ( i=1 ; i<sData.length ; i++ ) {\n\t\t *          Char = sData.charAt(i); \n\t\t *          if (sValidChars.indexOf(Char) == -1) {\n\t\t *            return null;\n\t\t *          }\n\t\t *        }\n\t\t *        \n\t\t *        // Check prefixed by currency\n\t\t *        if ( sData.charAt(0) == '$' || sData.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\t\"aTypes\": [],\n\t\n\t\n\t\t/**\n\t\t * Provide a common method for plug-ins to check the version of DataTables being used, \n\t\t * in order to ensure compatibility.\n\t\t *  @type function\n\t\t *  @param {string} sVersion Version string to check for, in the format \"X.Y.Z\". Note \n\t\t *    that the formats \"X\" and \"X.Y\" are also acceptable.\n\t\t *  @returns {boolean} true if this version of DataTables is greater or equal to the \n\t\t *    required version, or false if this version of DataTales is not suitable\n\t\t *\n\t\t *  @example\n\t\t *    $(document).ready(function() {\n\t\t *      var oTable = $('#example').dataTable();\n\t\t *      alert( oTable.fnVersionCheck( '1.9.0' ) );\n\t\t *    } );\n\t\t */\n\t\t\"fnVersionCheck\": DataTable.fnVersionCheck,\n\t\n\t\n\t\t/**\n\t\t * Index for what 'this' index API functions should use\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iApiIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * Pre-processing of filtering data plug-ins - When you assign the sType for a column\n\t\t * (or have it automatically detected for you by DataTables or a type detection plug-in), \n\t\t * you will typically be using this for custom sorting, but it can also be used to provide \n\t\t * custom filtering by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be filtered upon. This is done by adding functions this object \n\t\t * with a parameter name which matches the sType for that target column. This is the\n\t\t * corollary of <i>afnSortData</i> for filtering data.\n\t\t *   <ul>\n\t     *     <li>\n\t     *       Function input parameters:\n\t     *       <ul>\n\t\t *         <li>{*} Data from the column cell to be prepared for filtering</li>\n\t     *       </ul>\n\t     *     </li>\n\t\t *     <li>\n\t\t *       Function return:\n\t\t *       <ul>\n\t\t *         <li>{string|null} Formatted string that will be used for the filtering.</li>\n\t\t *       </ul>\n\t\t *     </il>\n\t\t *   </ul>\n\t\t * \n\t\t * Note that as of v1.9, it is typically preferable to use <i>mData</i> to prepare data for\n\t\t * the different uses that DataTables can put the data to. Specifically <i>mData</i> when\n\t\t * used as a function will give you a 'type' (sorting, filtering etc) that you can use to \n\t\t * prepare the data as required for the different types. As such, this method is deprecated.\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *  @deprecated\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTableExt.ofnSearch['title-numeric'] = function ( sData ) {\n\t\t *      return sData.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\t\"ofnSearch\": {},\n\t\n\t\n\t\t/**\n\t\t * Container for all private functions in DataTables so they can be exposed externally\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oApi\": {},\n\t\n\t\n\t\t/**\n\t\t * Storage for the various classes that DataTables uses\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oStdClasses\": {},\n\t\t\n\t\n\t\t/**\n\t\t * Storage for the various classes that DataTables uses - jQuery UI suitable\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oJUIClasses\": {},\n\t\n\t\n\t\t/**\n\t\t * Pagination plug-in methods - The style and controls of the pagination can significantly \n\t\t * impact on how the end user interacts with the data in your table, and DataTables allows \n\t\t * the addition of pagination controls by extending this object, which can then be enabled\n\t\t * through the <i>sPaginationType</i> initialisation parameter. Each pagination type that\n\t\t * is added is an object (the property name of which is what <i>sPaginationType</i> refers\n\t\t * to) that has two properties, both methods that are used by DataTables to update the\n\t\t * control's state.\n\t\t *   <ul>\n\t\t *     <li>\n\t\t *       fnInit -  Initialisation of the paging controls. Called only during initialisation \n\t\t *         of the table. It is expected that this function will add the required DOM elements \n\t\t *         to the page for the paging controls to work. The element pointer \n\t\t *         'oSettings.aanFeatures.p' array is provided by DataTables to contain the paging \n\t\t *         controls (note that this is a 2D array to allow for multiple instances of each \n\t\t *         DataTables DOM element). It is suggested that you add the controls to this element \n\t\t *         as children\n\t\t *       <ul>\n\t     *         <li>\n\t     *           Function input parameters:\n\t     *           <ul>\n\t\t *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t\t *             <li>{node} Container into which the pagination controls must be inserted</li>\n\t\t *             <li>{function} Draw callback function - whenever the controls cause a page\n\t\t *               change, this method must be called to redraw the table.</li>\n\t     *           </ul>\n\t     *         </li>\n\t\t *         <li>\n\t\t *           Function return:\n\t\t *           <ul>\n\t\t *             <li>No return required</li>\n\t\t *           </ul>\n\t\t *         </il>\n\t\t *       </ul>\n\t\t *     </il>\n\t\t *     <li>\n\t\t *       fnInit -  This function is called whenever the paging status of the table changes and is\n\t\t *         typically used to update classes and/or text of the paging controls to reflex the new \n\t\t *         status.\n\t\t *       <ul>\n\t     *         <li>\n\t     *           Function input parameters:\n\t     *           <ul>\n\t\t *             <li>{object} DataTables settings object: see {@link DataTable.models.oSettings}.</li>\n\t\t *             <li>{function} Draw callback function - in case you need to redraw the table again\n\t\t *               or attach new event listeners</li>\n\t     *           </ul>\n\t     *         </li>\n\t\t *         <li>\n\t\t *           Function return:\n\t\t *           <ul>\n\t\t *             <li>No return required</li>\n\t\t *           </ul>\n\t\t *         </il>\n\t\t *       </ul>\n\t\t *     </il>\n\t\t *   </ul>\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTableExt.oPagination.four_button = {\n\t\t *      \"fnInit\": function ( oSettings, nPaging, fnCallbackDraw ) {\n\t\t *        nFirst = document.createElement( 'span' );\n\t\t *        nPrevious = document.createElement( 'span' );\n\t\t *        nNext = document.createElement( 'span' );\n\t\t *        nLast = document.createElement( 'span' );\n\t\t *        \n\t\t *        nFirst.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sFirst ) );\n\t\t *        nPrevious.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sPrevious ) );\n\t\t *        nNext.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sNext ) );\n\t\t *        nLast.appendChild( document.createTextNode( oSettings.oLanguage.oPaginate.sLast ) );\n\t\t *        \n\t\t *        nFirst.className = \"paginate_button first\";\n\t\t *        nPrevious.className = \"paginate_button previous\";\n\t\t *        nNext.className=\"paginate_button next\";\n\t\t *        nLast.className = \"paginate_button last\";\n\t\t *        \n\t\t *        nPaging.appendChild( nFirst );\n\t\t *        nPaging.appendChild( nPrevious );\n\t\t *        nPaging.appendChild( nNext );\n\t\t *        nPaging.appendChild( nLast );\n\t\t *        \n\t\t *        $(nFirst).click( function () {\n\t\t *          oSettings.oApi._fnPageChange( oSettings, \"first\" );\n\t\t *          fnCallbackDraw( oSettings );\n\t\t *        } );\n\t\t *        \n\t\t *        $(nPrevious).click( function() {\n\t\t *          oSettings.oApi._fnPageChange( oSettings, \"previous\" );\n\t\t *          fnCallbackDraw( oSettings );\n\t\t *        } );\n\t\t *        \n\t\t *        $(nNext).click( function() {\n\t\t *          oSettings.oApi._fnPageChange( oSettings, \"next\" );\n\t\t *          fnCallbackDraw( oSettings );\n\t\t *        } );\n\t\t *        \n\t\t *        $(nLast).click( function() {\n\t\t *          oSettings.oApi._fnPageChange( oSettings, \"last\" );\n\t\t *          fnCallbackDraw( oSettings );\n\t\t *        } );\n\t\t *        \n\t\t *        $(nFirst).bind( 'selectstart', function () { return false; } );\n\t\t *        $(nPrevious).bind( 'selectstart', function () { return false; } );\n\t\t *        $(nNext).bind( 'selectstart', function () { return false; } );\n\t\t *        $(nLast).bind( 'selectstart', function () { return false; } );\n\t\t *      },\n\t\t *      \n\t\t *      \"fnUpdate\": function ( oSettings, fnCallbackDraw ) {\n\t\t *        if ( !oSettings.aanFeatures.p ) {\n\t\t *          return;\n\t\t *        }\n\t\t *        \n\t\t *        // Loop over each instance of the pager\n\t\t *        var an = oSettings.aanFeatures.p;\n\t\t *        for ( var i=0, iLen=an.length ; i<iLen ; i++ ) {\n\t\t *          var buttons = an[i].getElementsByTagName('span');\n\t\t *          if ( oSettings._iDisplayStart === 0 ) {\n\t\t *            buttons[0].className = \"paginate_disabled_previous\";\n\t\t *            buttons[1].className = \"paginate_disabled_previous\";\n\t\t *          }\n\t\t *          else {\n\t\t *            buttons[0].className = \"paginate_enabled_previous\";\n\t\t *            buttons[1].className = \"paginate_enabled_previous\";\n\t\t *          }\n\t\t *          \n\t\t *          if ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) {\n\t\t *            buttons[2].className = \"paginate_disabled_next\";\n\t\t *            buttons[3].className = \"paginate_disabled_next\";\n\t\t *          }\n\t\t *          else {\n\t\t *            buttons[2].className = \"paginate_enabled_next\";\n\t\t *            buttons[3].className = \"paginate_enabled_next\";\n\t\t *          }\n\t\t *        }\n\t\t *      }\n\t\t *    };\n\t\t */\n\t\t\"oPagination\": {},\n\t\n\t\n\t\t/**\n\t\t * Sorting plug-in methods - Sorting in DataTables is based on the detected type of the\n\t\t * data column (you can add your own type detection functions, or override automatic \n\t\t * detection using sType). With this specific type given to the column, DataTables will \n\t\t * apply the required sort from the functions in the object. Each sort type must provide\n\t\t * two mandatory methods, one each for ascending and descending sorting, and can optionally\n\t\t * provide a pre-formatting method that will help speed up sorting by allowing DataTables\n\t\t * to pre-format the sort data only once (rather than every time the actual sort functions\n\t\t * are run). The two sorting functions are typical Javascript sort methods:\n\t\t *   <ul>\n\t     *     <li>\n\t     *       Function input parameters:\n\t     *       <ul>\n\t\t *         <li>{*} Data to compare to the second parameter</li>\n\t\t *         <li>{*} Data to compare to the first parameter</li>\n\t     *       </ul>\n\t     *     </li>\n\t\t *     <li>\n\t\t *       Function return:\n\t\t *       <ul>\n\t\t *         <li>{int} Sorting match: <0 if first parameter should be sorted lower than\n\t\t *           the second parameter, ===0 if the two parameters are equal and >0 if\n\t\t *           the first parameter should be sorted height than the second parameter.</li>\n\t\t *       </ul>\n\t\t *     </il>\n\t\t *   </ul>\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string sorting, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTableExt.oSort, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-insensitive string sorting, with pre-formatting\n\t\t *    $.extend( $.fn.dataTableExt.oSort, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        return x.toLowerCase();\n\t\t *      },\n\t\t *      \"string-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"oSort\": {},\n\t\n\t\n\t\t/**\n\t\t * Version string for plug-ins to check compatibility. Allowed format is\n\t\t * a.b.c.d.e where: a:int, b:int, c:int, d:string(dev|beta), e:int. d and\n\t\t * e are optional\n\t\t *  @type string\n\t\t *  @default Version number\n\t\t */\n\t\t\"sVersion\": DataTable.version,\n\t\n\t\n\t\t/**\n\t\t * How should DataTables report an error. Can take the value 'alert' or 'throw'\n\t\t *  @type string\n\t\t *  @default alert\n\t\t */\n\t\t\"sErrMode\": \"alert\",\n\t\n\t\n\t\t/**\n\t\t * Store information for DataTables to access globally about other instances\n\t\t *  @namespace\n\t\t *  @private\n\t\t */\n\t\t\"_oExternConfig\": {\n\t\t\t/* int:iNextUnique - next unique number for an instance */\n\t\t\t\"iNextUnique\": 0\n\t\t}\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * search information for the global filter and individual column filters.\n\t *  @namespace\n\t */\n\tDataTable.models.oSearch = {\n\t\t/**\n\t\t * Flag to indicate if the filtering should be case insensitive or not\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bCaseInsensitive\": true,\n\t\n\t\t/**\n\t\t * Applied search term\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sSearch\": \"\",\n\t\n\t\t/**\n\t\t * Flag to indicate if the search term should be interpreted as a\n\t\t * regular expression (true) or not (false) and therefore and special\n\t\t * regex characters escaped.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bRegex\": false,\n\t\n\t\t/**\n\t\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bSmart\": true\n\t};\n\t\n\t\n\t\n\t\n\t/**\n\t * Template object for the way in which DataTables holds information about\n\t * each individual row. This is the object format used for the settings \n\t * aoData array.\n\t *  @namespace\n\t */\n\tDataTable.models.oRow = {\n\t\t/**\n\t\t * TR element for the row\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTr\": null,\n\t\n\t\t/**\n\t\t * Data object from the original data source for the row. This is either\n\t\t * an array if using the traditional form of DataTables, or an object if\n\t\t * using mData options. The exact type will depend on the passed in\n\t\t * data from the data source, or will be an array if using DOM a data \n\t\t * source.\n\t\t *  @type array|object\n\t\t *  @default []\n\t\t */\n\t\t\"_aData\": [],\n\t\n\t\t/**\n\t\t * Sorting data cache - this array is ostensibly the same length as the\n\t\t * number of columns (although each index is generated only as it is \n\t\t * needed), and holds the data that is used for sorting each column in the\n\t\t * row. We do this cache generation at the start of the sort in order that\n\t\t * the formatting of the sort data need be done only once for each cell\n\t\t * per sort. This array should not be read from or written to by anything\n\t\t * other than the master sorting methods.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *  @private\n\t\t */\n\t\t\"_aSortData\": [],\n\t\n\t\t/**\n\t\t * Array of TD elements that are cached for hidden rows, so they can be\n\t\t * reinserted into the table if a column is made visible again (or to act\n\t\t * as a store if a column is made hidden). Only hidden columns have a \n\t\t * reference in the array. For non-hidden columns the value is either\n\t\t * undefined or null.\n\t\t *  @type array nodes\n\t\t *  @default []\n\t\t *  @private\n\t\t */\n\t\t\"_anHidden\": [],\n\t\n\t\t/**\n\t\t * Cache of the class name that DataTables has applied to the row, so we\n\t\t * can quickly look at this variable rather than needing to do a DOM check\n\t\t * on className for the nTr property.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @private\n\t\t */\n\t\t\"_sRowStripe\": \"\"\n\t};\n\t\n\t\n\t\n\t/**\n\t * Template object for the column information object in DataTables. This object\n\t * is held in the settings aoColumns array and contains all the information that\n\t * DataTables needs about each individual column.\n\t * \n\t * Note that this object is related to {@link DataTable.defaults.columns} \n\t * but this one is the internal data store for DataTables's cache of columns.\n\t * It should NOT be manipulated outside of DataTables. Any configuration should\n\t * be done through the initialisation options.\n\t *  @namespace\n\t */\n\tDataTable.models.oColumn = {\n\t\t/**\n\t\t * A list of the columns that sorting should occur on when this column\n\t\t * is sorted. That this property is an array allows multi-column sorting\n\t\t * to be defined for a column (for example first name / last name columns\n\t\t * would benefit from this). The values are integers pointing to the\n\t\t * columns to be sorted on (typically it will be a single integer pointing\n\t\t * at itself, but that doesn't need to be the case).\n\t\t *  @type array\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\t/**\n\t\t * Define the sorting directions that are applied to the column, in sequence\n\t\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t\t * as the sorting direction when the column if first sorted (clicked on).\n\t\t * Sort it again (click again) and it will move on to the next index.\n\t\t * Repeat until loop.\n\t\t *  @type array\n\t\t */\n\t\t\"asSorting\": null,\n\t\t\n\t\t/**\n\t\t * Flag to indicate if the column is searchable, and thus should be included\n\t\t * in the filtering or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSearchable\": null,\n\t\t\n\t\t/**\n\t\t * Flag to indicate if the column is sortable or not.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortable\": null,\n\t\t\n\t\t/**\n\t\t * <code>Deprecated</code> When using fnRender, you have two options for what \n\t\t * to do with the data, and this property serves as the switch. Firstly, you \n\t\t * can have the sorting and filtering use the rendered value (true - default), \n\t\t * or you can have the sorting and filtering us the original value (false).\n\t\t *\n\t\t * Please note that this option has now been deprecated and will be removed\n\t\t * in the next version of DataTables. Please use mRender / mData rather than\n\t\t * fnRender.\n\t\t *  @type boolean\n\t\t *  @deprecated\n\t\t */\n\t\t\"bUseRendered\": null,\n\t\t\n\t\t/**\n\t\t * Flag to indicate if the column is currently visible in the table or not\n\t\t *  @type boolean\n\t\t */\n\t\t\"bVisible\": null,\n\t\t\n\t\t/**\n\t\t * Flag to indicate to the type detection method if the automatic type\n\t\t * detection should be used, or if a column type (sType) has been specified\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @private\n\t\t */\n\t\t\"_bAutoType\": true,\n\t\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @default null\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\t\n\t\t/**\n\t\t * Function to get data from a cell in a column. You should <b>never</b>\n\t\t * access data directly through _aData internally in DataTables - always use\n\t\t * the method attached to this property. It allows mData to function as\n\t\t * required. This function is automatically assigned by the column \n\t\t * initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array \n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {string} sSpecific The specific data type you want to get - \n\t\t *    'display', 'type' 'filter' 'sort'\n\t\t *  @returns {*} The data for the cell from the given row's data\n\t\t *  @default null\n\t\t */\n\t\t\"fnGetData\": null,\n\t\t\n\t\t/**\n\t\t * <code>Deprecated</code> Custom display function that will be called for the \n\t\t * display of each cell in this column.\n\t\t *\n\t\t * Please note that this option has now been deprecated and will be removed\n\t\t * in the next version of DataTables. Please use mRender / mData rather than\n\t\t * fnRender.\n\t\t *  @type function\n\t\t *  @param {object} o Object with the following parameters:\n\t\t *  @param {int}    o.iDataRow The row in aoData\n\t\t *  @param {int}    o.iDataColumn The column in question\n\t\t *  @param {array}  o.aData The data for the row in question\n\t\t *  @param {object} o.oSettings The settings object for this DataTables instance\n\t\t *  @returns {string} The string you which to use in the display\n\t\t *  @default null\n\t\t *  @deprecated\n\t\t */\n\t\t\"fnRender\": null,\n\t\t\n\t\t/**\n\t\t * Function to set data for a cell in the column. You should <b>never</b> \n\t\t * set the data directly to _aData internally in DataTables - always use\n\t\t * this method. It allows mData to function as required. This function\n\t\t * is automatically assigned by the column initialisation method\n\t\t *  @type function\n\t\t *  @param {array|object} oData The data array/object for the array \n\t\t *    (i.e. aoData[]._aData)\n\t\t *  @param {*} sValue Value to set\n\t\t *  @default null\n\t\t */\n\t\t\"fnSetData\": null,\n\t\t\n\t\t/**\n\t\t * Property to read the value for the cells in the column from the data \n\t\t * source array / object. If null, then the default content is used, if a\n\t\t * function is given then the return from the function is used.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mData\": null,\n\t\t\n\t\t/**\n\t\t * Partner property to mData which is used (only when defined) to get\n\t\t * the data - i.e. it is basically the same as mData, but without the\n\t\t * 'set' option, and also the data fed to it is the result from mData.\n\t\t * This is the rendering method to match the data method of mData.\n\t\t *  @type function|int|string|null\n\t\t *  @default null\n\t\t */\n\t\t\"mRender\": null,\n\t\t\n\t\t/**\n\t\t * Unique header TH/TD element for this column - this is what the sorting\n\t\t * listener is attached to (if sorting is enabled.)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTh\": null,\n\t\t\n\t\t/**\n\t\t * Unique footer TH/TD element for this column (if there is one). Not used \n\t\t * in DataTables as such, but can be used for plug-ins to reference the \n\t\t * footer for each column.\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTf\": null,\n\t\t\n\t\t/**\n\t\t * The class to apply to all TD elements in the table's TBODY for the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sClass\": null,\n\t\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer \n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t *  @type string\n\t\t */\n\t\t\"sContentPadding\": null,\n\t\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\t\n\t\t/**\n\t\t * Name for the column, allowing reference to the column by name as well as\n\t\t * by index (needs a lookup to work by name).\n\t\t *  @type string\n\t\t */\n\t\t\"sName\": null,\n\t\t\n\t\t/**\n\t\t * Custom sorting data type - defines which of the available plug-ins in\n\t\t * afnSortData the custom sorting will use - if any is defined.\n\t\t *  @type string\n\t\t *  @default std\n\t\t */\n\t\t\"sSortDataType\": 'std',\n\t\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClass\": null,\n\t\t\n\t\t/**\n\t\t * Class to be applied to the header element when sorting on this column -\n\t\t * when jQuery UI theming is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sSortingClassJUI\": null,\n\t\t\n\t\t/**\n\t\t * Title of the column - what is seen in the TH element (nTh).\n\t\t *  @type string\n\t\t */\n\t\t\"sTitle\": null,\n\t\t\n\t\t/**\n\t\t * Column sorting and filtering type\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sType\": null,\n\t\t\n\t\t/**\n\t\t * Width of the column\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidth\": null,\n\t\t\n\t\t/**\n\t\t * Width of the column when it was first \"encountered\"\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sWidthOrig\": null\n\t};\n\t\n\t\n\t\n\t/**\n\t * Initialisation options that can be given to DataTables at initialisation \n\t * time.\n\t *  @namespace\n\t */\n\tDataTable.defaults = {\n\t\t/**\n\t\t * An array of data to use for the table, passed in at initialisation which \n\t\t * will be used in preference to any data which is already in the DOM. This is\n\t\t * particularly useful for constructing tables purely in Javascript, for\n\t\t * example with a custom Ajax call.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @dtopt Option\n\t\t * \n\t\t *  @example\n\t\t *    // Using a 2D array data source\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aaData\": [\n\t\t *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],\n\t\t *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],\n\t\t *        ],\n\t\t *        \"aoColumns\": [\n\t\t *          { \"sTitle\": \"Engine\" },\n\t\t *          { \"sTitle\": \"Browser\" },\n\t\t *          { \"sTitle\": \"Platform\" },\n\t\t *          { \"sTitle\": \"Version\" },\n\t\t *          { \"sTitle\": \"Grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using an array of objects as a data source (mData)\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aaData\": [\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 4.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  4,\n\t\t *            \"grade\":    \"X\"\n\t\t *          },\n\t\t *          {\n\t\t *            \"engine\":   \"Trident\",\n\t\t *            \"browser\":  \"Internet Explorer 5.0\",\n\t\t *            \"platform\": \"Win 95+\",\n\t\t *            \"version\":  5,\n\t\t *            \"grade\":    \"C\"\n\t\t *          }\n\t\t *        ],\n\t\t *        \"aoColumns\": [\n\t\t *          { \"sTitle\": \"Engine\",   \"mData\": \"engine\" },\n\t\t *          { \"sTitle\": \"Browser\",  \"mData\": \"browser\" },\n\t\t *          { \"sTitle\": \"Platform\", \"mData\": \"platform\" },\n\t\t *          { \"sTitle\": \"Version\",  \"mData\": \"version\" },\n\t\t *          { \"sTitle\": \"Grade\",    \"mData\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaData\": null,\n\t\n\t\n\t\t/**\n\t\t * If sorting is enabled, then DataTables will perform a first pass sort on \n\t\t * initialisation. You can define which column(s) the sort is performed upon, \n\t\t * and the sorting direction, with this variable. The aaSorting array should \n\t\t * contain an array for each column to be sorted initially containing the \n\t\t * column's index and a direction string ('asc' or 'desc').\n\t\t *  @type array\n\t\t *  @default [[0,'asc']]\n\t\t *  @dtopt Option\n\t\t * \n\t\t *  @example\n\t\t *    // Sort by 3rd column first, and then 4th column\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aaSorting\": [[2,'asc'], [3,'desc']]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *    // No initial sorting\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aaSorting\": []\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aaSorting\": [[0,'asc']],\n\t\n\t\n\t\t/**\n\t\t * This parameter is basically identical to the aaSorting parameter, but \n\t\t * cannot be overridden by user interaction with the table. What this means \n\t\t * is that you could have a column (visible or hidden) which the sorting will \n\t\t * always be forced on first - any sorting after that (from the user) will \n\t\t * then be performed as required. This can be useful for grouping rows \n\t\t * together.\n\t\t *  @type array\n\t\t *  @default null\n\t\t *  @dtopt Option\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aaSortingFixed\": [[0,'asc']]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aaSortingFixed\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to readily specify the entries in the length drop\n\t\t * down menu that DataTables shows when pagination is enabled. It can be \n\t\t * either a 1D array of options which will be used for both the displayed \n\t\t * option and the value, or a 2D array which will use the array in the first \n\t\t * position as the value, and the array in the second position as the \n\t\t * displayed options (useful for language strings such as 'All').\n\t\t *  @type array\n\t\t *  @default [ 10, 25, 50, 100 ]\n\t\t *  @dtopt Option\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aLengthMenu\": [[10, 25, 50, -1], [10, 25, 50, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t *  \n\t\t *  @example\n\t\t *    // Setting the default display length as well as length menu\n\t\t *    // This is likely to be wanted if you remove the '10' option which\n\t\t *    // is the iDisplayLength default.\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"iDisplayLength\": 25,\n\t\t *        \"aLengthMenu\": [[25, 50, 100, -1], [25, 50, 100, \"All\"]]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\t\n\t\n\t\t/**\n\t\t * The aoColumns option in the initialisation parameter allows you to define\n\t\t * details about the way individual columns behave. For a full list of\n\t\t * column options that can be set, please see \n\t\t * {@link DataTable.defaults.columns}. Note that if you use aoColumns to\n\t\t * define your columns, you must have an entry in the array for every single\n\t\t * column that you have in your table (these can be null if you don't which\n\t\t * to specify any options).\n\t\t *  @member\n\t\t */\n\t\t\"aoColumns\": null,\n\t\n\t\t/**\n\t\t * Very similar to aoColumns, aoColumnDefs allows you to target a specific \n\t\t * column, multiple columns, or all columns, using the aTargets property of \n\t\t * each object in the array. This allows great flexibility when creating \n\t\t * tables, as the aoColumnDefs arrays can be of any length, targeting the \n\t\t * columns you specifically want. aoColumnDefs may use any of the column \n\t\t * options available: {@link DataTable.defaults.columns}, but it _must_\n\t\t * have aTargets defined in each object in the array. Values in the aTargets\n\t\t * array may be:\n\t\t *   <ul>\n\t\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t\t *     <li>a negative integer - column index counting from the right</li>\n\t\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t\t *   </ul>\n\t\t *  @member\n\t\t */\n\t\t\"aoColumnDefs\": null,\n\t\n\t\n\t\t/**\n\t\t * Basically the same as oSearch, this parameter defines the individual column\n\t\t * filtering state at initialisation time. The array must be of the same size \n\t\t * as the number of columns, and each element be an object with the parameters\n\t\t * \"sSearch\" and \"bEscapeRegex\" (the latter is optional). 'null' is also\n\t\t * accepted and the default will be used.\n\t\t *  @type array\n\t\t *  @default []\n\t\t *  @dtopt Option\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoSearchCols\": [\n\t\t *          null,\n\t\t *          { \"sSearch\": \"My filter\" },\n\t\t *          null,\n\t\t *          { \"sSearch\": \"^[0-9]\", \"bEscapeRegex\": false }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"aoSearchCols\": [],\n\t\n\t\n\t\t/**\n\t\t * An array of CSS classes that should be applied to displayed rows. This \n\t\t * array may be of any length, and DataTables will apply each class \n\t\t * sequentially, looping when required.\n\t\t *  @type array\n\t\t *  @default null <i>Will take the values determined by the oClasses.sStripe*\n\t\t *    options</i>\n\t\t *  @dtopt Option\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"asStripeClasses\": [ 'strip1', 'strip2', 'strip3' ]\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable automatic column width calculation. This can be disabled\n\t\t * as an optimisation (it takes some time to calculate the widths) if the\n\t\t * tables widths are passed in using aoColumns.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bAutoWidth\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bAutoWidth\": true,\n\t\n\t\n\t\t/**\n\t\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t\t * are using an Ajax or JS data source for the table. This option, when set to\n\t\t * true, will cause DataTables to defer the creation of the table elements for\n\t\t * each row until they are needed for a draw - saving a significant amount of\n\t\t * time.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sAjaxSource\": \"sources/arrays.txt\",\n\t\t *        \"bDeferRender\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDeferRender\": false,\n\t\n\t\n\t\t/**\n\t\t * Replace a DataTable which matches the given selector and replace it with \n\t\t * one which has the properties of the new initialisation object passed. If no\n\t\t * table matches the selector, then the new DataTable will be constructed as\n\t\t * per normal.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *      \n\t\t *      // Some time later....\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bFilter\": false,\n\t\t *        \"bDestroy\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bDestroy\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t\t * that it allows the end user to input multiple words (space separated) and\n\t\t * will match a row containing those words, even if not in the order that was\n\t\t * specified (this allow matching across multiple columns). Note that if you\n\t\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t\t * default filtering input box and retain filtering abilities, please use\n\t\t * {@link DataTable.defaults.sDom}.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bFilter\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bFilter\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the table information display. This shows information \n\t\t * about the data that is currently visible on the page, including information\n\t\t * about filtered data if that action is being performed.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bInfo\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bInfo\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some\n\t\t * slightly different and additional mark-up from what DataTables has\n\t\t * traditionally used).\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bJQueryUI\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bJQueryUI\": false,\n\t\n\t\n\t\t/**\n\t\t * Allows the end user to select the size of a formatted page from a select\n\t\t * menu (sizes are 10, 25, 50 and 100). Requires pagination (bPaginate).\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bLengthChange\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bLengthChange\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable pagination.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bPaginate\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of a 'processing' indicator when the table is\n\t\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t\t * large amounts of data where it can take a noticeable amount of time to sort\n\t\t * the entries.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bProcessing\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bProcessing\": false,\n\t\n\t\n\t\t/**\n\t\t * Retrieve the DataTables object for the given selector. Note that if the\n\t\t * table has already been initialised, this parameter will cause DataTables\n\t\t * to simply return the object that has already been set up - it will not take\n\t\t * account of any changes you might have made to the initialisation object\n\t\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t\t * that you understand this). bDestroy can be used to reinitialise a table if\n\t\t * you need.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      initTable();\n\t\t *      tableActions();\n\t\t *    } );\n\t\t *    \n\t\t *    function initTable ()\n\t\t *    {\n\t\t *      return $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false,\n\t\t *        \"bRetrieve\": true\n\t\t *      } );\n\t\t *    }\n\t\t *    \n\t\t *    function tableActions ()\n\t\t *    {\n\t\t *      var oTable = initTable();\n\t\t *      // perform API operations with oTable \n\t\t *    }\n\t\t */\n\t\t\"bRetrieve\": false,\n\t\n\t\n\t\t/**\n\t\t * Indicate if DataTables should be allowed to set the padding / margin\n\t\t * etc for the scrolling header elements or not. Typically you will want\n\t\t * this.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bScrollAutoCss\": false,\n\t\t *        \"sScrollY\": \"200px\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollAutoCss\": true,\n\t\n\t\n\t\t/**\n\t\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t\t * the table's viewport to the given height at all times (useful for layout).\n\t\t * However, this can look odd when filtering data down to a small data set,\n\t\t * and the footer is left \"floating\" further down. This parameter (when\n\t\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t\t * the result set will fit within the given Y height.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200\",\n\t\t *        \"bScrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollCollapse\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable infinite scrolling for DataTables (to be used in combination with\n\t\t * sScrollY). Infinite scrolling means that DataTables will continually load\n\t\t * data as a user scrolls through a table, which is very useful for large\n\t\t * dataset. This cannot be used with pagination, which is automatically\n\t\t * disabled. Note - the Scroller extra for DataTables is recommended in\n\t\t * in preference to this option.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bScrollInfinite\": true,\n\t\t *        \"bScrollCollapse\": true,\n\t\t *        \"sScrollY\": \"200px\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bScrollInfinite\": false,\n\t\n\t\n\t\t/**\n\t\t * Configure DataTables to use server-side processing. Note that the\n\t\t * sAjaxSource parameter must also be given in order to give DataTables a\n\t\t * source to obtain the required data for each draw.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Features\n\t\t *  @dtopt Server-side\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bServerSide\": true,\n\t\t *        \"sAjaxSource\": \"xhr.php\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bServerSide\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t\t * disabled by the \"bSortable\" option for each column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bSort\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSort\": true,\n\t\n\t\n\t\t/**\n\t\t * Allows control over whether DataTables should use the top (true) unique\n\t\t * cell that is found for a single column, or the bottom (false - default).\n\t\t * This is useful when using complex headers.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bSortCellsTop\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortCellsTop\": false,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the addition of the classes 'sorting_1', 'sorting_2' and\n\t\t * 'sorting_3' to the columns which are currently being sorted on. This is\n\t\t * presented as a feature switch as it can increase processing time (while\n\t\t * classes are removed and added) so for large data sets you might want to\n\t\t * turn this off.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bSortClasses\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortClasses\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable state saving. When enabled a cookie will be used to save\n\t\t * table display information such as pagination information, display length,\n\t\t * filtering and sorting. As such when the end user reloads the page the\n\t\t * display display will match what thy had previously set up.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bStateSave\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"bStateSave\": false,\n\t\n\t\n\t\t/**\n\t\t * Customise the cookie and / or the parameters being stored when using\n\t\t * DataTables with state saving enabled. This function is called whenever\n\t\t * the cookie is modified, and it expects a fully formed cookie string to be\n\t\t * returned. Note that the data object passed in is a Javascript object which\n\t\t * must be converted to a string (JSON.stringify for example).\n\t\t *  @type function\n\t\t *  @param {string} sName Name of the cookie defined by DataTables\n\t\t *  @param {object} oData Data to be stored in the cookie\n\t\t *  @param {string} sExpires Cookie expires string\n\t\t *  @param {string} sPath Path of the cookie to set\n\t\t *  @returns {string} Cookie formatted string (which should be encoded by\n\t\t *    using encodeURIComponent())\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function () {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnCookieCallback\": function (sName, oData, sExpires, sPath) {\n\t\t *          // Customise oData or sName or whatever else here\n\t\t *          return sName + \"=\"+JSON.stringify(oData)+\"; expires=\" + sExpires +\"; path=\" + sPath;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCookieCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called when a TR element is created (and all TD child\n\t\t * elements have been inserted), or registered if using a DOM source, allowing\n\t\t * manipulation of the TR element (adding classes etc).\n\t\t *  @type function\n\t\t *  @param {node} nRow \"TR\" element for the current row\n\t\t *  @param {array} aData Raw data array for this row\n\t\t *  @param {int} iDataIndex The index of this row in aoData\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnCreatedRow\": function( nRow, aData, iDataIndex ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( aData[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', nRow).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedRow\": null,\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify any aspect you want about the created DOM.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnDrawCallback\": function( oSettings ) {\n\t\t *          alert( 'DataTables has redrawn the table' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Identical to fnHeaderCallback() but for the table footer this function\n\t\t * allows you to modify the table footer on every 'draw' even.\n\t\t *  @type function\n\t\t *  @param {node} nFoot \"TR\" element for the footer\n\t\t *  @param {array} aData Full table data (as derived from the original HTML)\n\t\t *  @param {int} iStart Index for the current display starting point in the \n\t\t *    display array\n\t\t *  @param {int} iEnd Index for the current display ending point in the \n\t\t *    display array\n\t\t *  @param {array int} aiDisplay Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnFooterCallback\": function( nFoot, aData, iStart, iEnd, aiDisplay ) {\n\t\t *          nFoot.getElementsByTagName('th')[0].innerHTML = \"Starting index is \"+iStart;\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnFooterCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * When rendering large numbers in the information element for the table\n\t\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t\t * function will override the default method DataTables uses.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {int} iIn number to be formatted\n\t\t *  @returns {string} formatted string for DataTables to show the number\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnFormatNumber\": function ( iIn ) {\n\t\t *          if ( iIn &lt; 1000 ) {\n\t\t *            return iIn;\n\t\t *          } else {\n\t\t *            var \n\t\t *              s=(iIn+\"\"), \n\t\t *              a=s.split(\"\"), out=\"\", \n\t\t *              iLen=s.length;\n\t\t *            \n\t\t *            for ( var i=0 ; i&lt;iLen ; i++ ) {\n\t\t *              if ( i%3 === 0 &amp;&amp; i !== 0 ) {\n\t\t *                out = \"'\"+out;\n\t\t *              }\n\t\t *              out = a[iLen-i-1]+out;\n\t\t *            }\n\t\t *          }\n\t\t *          return out;\n\t\t *        };\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnFormatNumber\": function ( iIn ) {\n\t\t\tif ( iIn < 1000 )\n\t\t\t{\n\t\t\t\t// A small optimisation for what is likely to be the majority of use cases\n\t\t\t\treturn iIn;\n\t\t\t}\n\t\n\t\t\tvar s=(iIn+\"\"), a=s.split(\"\"), out=\"\", iLen=s.length;\n\t\t\t\n\t\t\tfor ( var i=0 ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tif ( i%3 === 0 && i !== 0 )\n\t\t\t\t{\n\t\t\t\t\tout = this.oLanguage.sInfoThousands+out;\n\t\t\t\t}\n\t\t\t\tout = a[iLen-i-1]+out;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This function is called on every 'draw' event, and allows you to\n\t\t * dynamically modify the header row. This can be used to calculate and\n\t\t * display useful information about the table.\n\t\t *  @type function\n\t\t *  @param {node} nHead \"TR\" element for the header\n\t\t *  @param {array} aData Full table data (as derived from the original HTML)\n\t\t *  @param {int} iStart Index for the current display starting point in the\n\t\t *    display array\n\t\t *  @param {int} iEnd Index for the current display ending point in the\n\t\t *    display array\n\t\t *  @param {array int} aiDisplay Index array to translate the visual position\n\t\t *    to the full data array\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnHeaderCallback\": function( nHead, aData, iStart, iEnd, aiDisplay ) {\n\t\t *          nHead.getElementsByTagName('th')[0].innerHTML = \"Displaying \"+(iEnd-iStart)+\" records\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnHeaderCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * The information element can be used to convey information about the current\n\t\t * state of the table. Although the internationalisation options presented by\n\t\t * DataTables are quite capable of dealing with most customisations, there may\n\t\t * be times where you wish to customise the string further. This callback\n\t\t * allows you to do exactly that.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {int} iStart Starting position in data for the draw\n\t\t *  @param {int} iEnd End position in data for the draw\n\t\t *  @param {int} iMax Total number of rows in the table (regardless of\n\t\t *    filtering)\n\t\t *  @param {int} iTotal Total number of rows in the data set, after filtering\n\t\t *  @param {string} sPre The string that DataTables has formatted using it's\n\t\t *    own rules\n\t\t *  @returns {string} The string to be displayed in the information element.\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $('#example').dataTable( {\n\t\t *      \"fnInfoCallback\": function( oSettings, iStart, iEnd, iMax, iTotal, sPre ) {\n\t\t *        return iStart +\" to \"+ iEnd;\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\t\"fnInfoCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * Called when the table has been initialised. Normally DataTables will\n\t\t * initialise sequentially and there will be no need for this function,\n\t\t * however, this does not hold true when using external language information\n\t\t * since that is obtained using an async XHR call.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} json The JSON object request from the server - only\n\t\t *    present if client-side Ajax sourced data is used\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnInitComplete\": function(oSettings, json) {\n\t\t *          alert( 'DataTables has finished its initialisation.' );\n\t\t *        }\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"fnInitComplete\": null,\n\t\n\t\n\t\t/**\n\t\t * Called at the very start of each table draw and can be used to cancel the\n\t\t * draw by returning false, any other return (including undefined) results in\n\t\t * the full draw occurring).\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @returns {boolean} False will cancel the draw, anything else (including no\n\t\t *    return) will allow it to complete.\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnPreDrawCallback\": function( oSettings ) {\n\t\t *          if ( $('#test').val() == 1 ) {\n\t\t *            return false;\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnPreDrawCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This function allows you to 'post process' each row after it have been\n\t\t * generated for each table draw, but before it is rendered on screen. This\n\t\t * function might be used for setting the row class name etc.\n\t\t *  @type function\n\t\t *  @param {node} nRow \"TR\" element for the current row\n\t\t *  @param {array} aData Raw data array for this row\n\t\t *  @param {int} iDisplayIndex The display index for the current table draw\n\t\t *  @param {int} iDisplayIndexFull The index of the data in the full list of\n\t\t *    rows (after filtering)\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"fnRowCallback\": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {\n\t\t *          // Bold the grade for all 'A' grade browsers\n\t\t *          if ( aData[4] == \"A\" )\n\t\t *          {\n\t\t *            $('td:eq(4)', nRow).html( '<b>A</b>' );\n\t\t *          }\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnRowCallback\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to override the default function which obtains\n\t\t * the data from the server ($.getJSON) so something more suitable for your\n\t\t * application. For example you could use POST data, or pull information from\n\t\t * a Gears or AIR database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {string} sSource HTTP source to obtain the data from (sAjaxSource)\n\t\t *  @param {array} aoData A key/value pair object containing the data to send\n\t\t *    to the server\n\t\t *  @param {function} fnCallback to be called on completion of the data get\n\t\t *    process that will draw the data on the page.\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t * \n\t\t *  @example\n\t\t *    // POST data to server\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bProcessing\": true,\n\t\t *        \"bServerSide\": true,\n\t\t *        \"sAjaxSource\": \"xhr.php\",\n\t\t *        \"fnServerData\": function ( sSource, aoData, fnCallback, oSettings ) {\n\t\t *          oSettings.jqXHR = $.ajax( {\n\t\t *            \"dataType\": 'json', \n\t\t *            \"type\": \"POST\", \n\t\t *            \"url\": sSource, \n\t\t *            \"data\": aoData, \n\t\t *            \"success\": fnCallback\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnServerData\": function ( sUrl, aoData, fnCallback, oSettings ) {\n\t\t\toSettings.jqXHR = $.ajax( {\n\t\t\t\t\"url\":  sUrl,\n\t\t\t\t\"data\": aoData,\n\t\t\t\t\"success\": function (json) {\n\t\t\t\t\tif ( json.sError ) {\n\t\t\t\t\t\toSettings.oApi._fnLog( oSettings, 0, json.sError );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$(oSettings.oInstance).trigger('xhr', [oSettings, json]);\n\t\t\t\t\tfnCallback( json );\n\t\t\t\t},\n\t\t\t\t\"dataType\": \"json\",\n\t\t\t\t\"cache\": false,\n\t\t\t\t\"type\": oSettings.sServerMethod,\n\t\t\t\t\"error\": function (xhr, error, thrown) {\n\t\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t\toSettings.oApi._fnLog( oSettings, 0, \"DataTables warning: JSON data from \"+\n\t\t\t\t\t\t\t\"server could not be parsed. This is caused by a JSON formatting error.\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * It is often useful to send extra data to the server when making an Ajax\n\t\t * request - for example custom filtering information, and this callback\n\t\t * function makes it trivial to send extra information to the server. The\n\t\t * passed in parameter is the data set that has been constructed by\n\t\t * DataTables, and you can add to this or modify it as you require.\n\t\t *  @type function\n\t\t *  @param {array} aoData Data array (array of objects which are name/value\n\t\t *    pairs) that has been constructed by DataTables and will be sent to the\n\t\t *    server. In the case of Ajax sourced data with server-side processing\n\t\t *    this will be an empty array, for server-side processing there will be a\n\t\t *    significant number of parameters!\n\t\t *  @returns {undefined} Ensure that you modify the aoData array passed in,\n\t\t *    as this is passed by reference.\n\t\t *  @dtopt Callbacks\n\t\t *  @dtopt Server-side\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bProcessing\": true,\n\t\t *        \"bServerSide\": true,\n\t\t *        \"sAjaxSource\": \"scripts/server_processing.php\",\n\t\t *        \"fnServerParams\": function ( aoData ) {\n\t\t *          aoData.push( { \"name\": \"more_data\", \"value\": \"my_value\" } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnServerParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Load the table state. With this function you can define from where, and how, the\n\t\t * state of a table is loaded. By default DataTables will load from its state saving\n\t\t * cookie, but you might wish to use local storage (HTML5) or a server-side database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @return {object} The DataTables state object to be loaded\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bStateSave\": true,\n\t\t *        \"fnStateLoad\": function (oSettings) {\n\t\t *          var o;\n\t\t *          \n\t\t *          // Send an Ajax request to the server to get the data. Note that\n\t\t *          // this is a synchronous request.\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_load\",\n\t\t *            \"async\": false,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"success\": function (json) {\n\t\t *              o = json;\n\t\t *            }\n\t\t *          } );\n\t\t *          \n\t\t *          return o;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoad\": function ( oSettings ) {\n\t\t\tvar sData = this.oApi._fnReadCookie( oSettings.sCookiePrefix+oSettings.sInstance );\n\t\t\tvar oData;\n\t\n\t\t\ttry {\n\t\t\t\toData = (typeof $.parseJSON === 'function') ? \n\t\t\t\t\t$.parseJSON(sData) : eval( '('+sData+')' );\n\t\t\t} catch (e) {\n\t\t\t\toData = null;\n\t\t\t}\n\t\n\t\t\treturn oData;\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the saved state prior to loading that state.\n\t\t * This callback is called when the table is loading state from the stored data, but\n\t\t * prior to the settings object being modified by the saved state. Note that for \n\t\t * plug-in authors, you should use the 'stateLoadParams' event to load parameters for \n\t\t * a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} oData The state object that is to be loaded\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never loaded\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bStateSave\": true,\n\t\t *        \"fnStateLoadParams\": function (oSettings, oData) {\n\t\t *          oData.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t * \n\t\t *  @example\n\t\t *    // Disallow state loading by returning false\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bStateSave\": true,\n\t\t *        \"fnStateLoadParams\": function (oSettings, oData) {\n\t\t *          return false;\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoadParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Callback that is called when the state has been loaded from the state saving method\n\t\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} oData The state object that was loaded\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    // Show an alert with the filtering value that was saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bStateSave\": true,\n\t\t *        \"fnStateLoaded\": function (oSettings, oData) {\n\t\t *          alert( 'Saved filter was: '+oData.oSearch.sSearch );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateLoaded\": null,\n\t\n\t\n\t\t/**\n\t\t * Save the table state. This function allows you to define where and how the state\n\t\t * information for the table is stored - by default it will use a cookie, but you\n\t\t * might want to use local storage (HTML5) or a server-side database.\n\t\t *  @type function\n\t\t *  @member\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} oData The state object to be saved\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bStateSave\": true,\n\t\t *        \"fnStateSave\": function (oSettings, oData) {\n\t\t *          // Send an Ajax request to the server with the state object\n\t\t *          $.ajax( {\n\t\t *            \"url\": \"/state_save\",\n\t\t *            \"data\": oData,\n\t\t *            \"dataType\": \"json\",\n\t\t *            \"method\": \"POST\"\n\t\t *            \"success\": function () {}\n\t\t *          } );\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSave\": function ( oSettings, oData ) {\n\t\t\tthis.oApi._fnCreateCookie( \n\t\t\t\toSettings.sCookiePrefix+oSettings.sInstance, \n\t\t\t\tthis.oApi._fnJsonString(oData), \n\t\t\t\toSettings.iCookieDuration, \n\t\t\t\toSettings.sCookiePrefix, \n\t\t\t\toSettings.fnCookieCallback\n\t\t\t);\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * Callback which allows modification of the state to be saved. Called when the table \n\t\t * has changed state a new state save is required. This method allows modification of\n\t\t * the state saving object prior to actually doing the save, including addition or \n\t\t * other state properties or modification. Note that for plug-in authors, you should \n\t\t * use the 'stateSaveParams' event to save parameters for a plug-in.\n\t\t *  @type function\n\t\t *  @param {object} oSettings DataTables settings object\n\t\t *  @param {object} oData The state object to be saved\n\t\t *  @dtopt Callbacks\n\t\t * \n\t\t *  @example\n\t\t *    // Remove a saved filter, so filtering is never saved\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bStateSave\": true,\n\t\t *        \"fnStateSaveParams\": function (oSettings, oData) {\n\t\t *          oData.oSearch.sSearch = \"\";\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"fnStateSaveParams\": null,\n\t\n\t\n\t\t/**\n\t\t * Duration of the cookie which is used for storing session information. This\n\t\t * value is given in seconds.\n\t\t *  @type int\n\t\t *  @default 7200 <i>(2 hours)</i>\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"iCookieDuration\": 60*60*24; // 1 day\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iCookieDuration\": 7200,\n\t\n\t\n\t\t/**\n\t\t * When enabled DataTables will not make a request to the server for the first\n\t\t * page draw - rather it will use the data already on the page (no sorting etc\n\t\t * will be applied to it), thus saving on an XHR at load time. iDeferLoading\n\t\t * is used to indicate that deferred loading is required, but it is also used\n\t\t * to tell DataTables how many records there are in the full table (allowing\n\t\t * the information element and pagination to be displayed correctly). In the case\n\t\t * where a filtering is applied to the table on initial load, this can be\n\t\t * indicated by giving the parameter as an array, where the first element is\n\t\t * the number of records available after filtering and the second element is the\n\t\t * number of records without filtering (allowing the table information element\n\t\t * to be shown correctly).\n\t\t *  @type int | array\n\t\t *  @default null\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    // 57 records available in the table, no filtering applied\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bServerSide\": true,\n\t\t *        \"sAjaxSource\": \"scripts/server_processing.php\",\n\t\t *        \"iDeferLoading\": 57\n\t\t *      } );\n\t\t *    } );\n\t\t * \n\t\t *  @example\n\t\t *    // 57 records after filtering, 100 without filtering (an initial filter applied)\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bServerSide\": true,\n\t\t *        \"sAjaxSource\": \"scripts/server_processing.php\",\n\t\t *        \"iDeferLoading\": [ 57, 100 ],\n\t\t *        \"oSearch\": {\n\t\t *          \"sSearch\": \"my_filter\"\n\t\t *        }\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDeferLoading\": null,\n\t\n\t\n\t\t/**\n\t\t * Number of rows to display on a single page when using pagination. If\n\t\t * feature enabled (bLengthChange) then the end user will be able to override\n\t\t * this to a custom setting using a pop-up menu.\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"iDisplayLength\": 50\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayLength\": 10,\n\t\n\t\n\t\t/**\n\t\t * Define the starting point for data display when using DataTables with\n\t\t * pagination. Note that this parameter is the number of records, rather than\n\t\t * the page number, so if you have 10 records per page and want to start on\n\t\t * the third page, it should be \"20\".\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"iDisplayStart\": 20\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"iDisplayStart\": 0,\n\t\n\t\n\t\t/**\n\t\t * The scroll gap is the amount of scrolling that is left to go before\n\t\t * DataTables will load the next 'page' of data automatically. You typically\n\t\t * want a gap which is big enough that the scrolling will be smooth for the\n\t\t * user, while not so large that it will load more data than need.\n\t\t *  @type int\n\t\t *  @default 100\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bScrollInfinite\": true,\n\t\t *        \"bScrollCollapse\": true,\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"iScrollLoadGap\": 50\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iScrollLoadGap\": 100,\n\t\n\t\n\t\t/**\n\t\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t\t * and filtering) by adding a tabindex attribute to the required elements. This\n\t\t * allows you to tab through the controls and press the enter key to activate them.\n\t\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t\t * disable built-in keyboard navigation.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"iTabIndex\": 1\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\n\t\t/**\n\t\t * All strings that DataTables uses in the user interface that it creates\n\t\t * are defined in this object, allowing you to modified them individually or\n\t\t * completely replace them all as required.\n\t\t *  @namespace\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t\t * must be internationalised as well).\n\t\t\t *  @namespace\n\t\t\t */\n\t\t\t\"oAria\": {\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted ascending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *  @dtopt Language\n\t\t\t\t * \n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"oLanguage\": {\n\t\t\t\t *          \"oAria\": {\n\t\t\t\t *            \"sSortAscending\": \" - click/return to sort ascending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortAscending\": \": activate to sort column ascending\",\n\t\n\t\t\t\t/**\n\t\t\t\t * ARIA label that is added to the table headers when the column may be\n\t\t\t\t * sorted descending by activing the column (click or return when focused).\n\t\t\t\t * Note that the column header is prefixed to this string.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default : activate to sort column ascending\n\t\t\t\t *  @dtopt Language\n\t\t\t\t * \n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"oLanguage\": {\n\t\t\t\t *          \"oAria\": {\n\t\t\t\t *            \"sSortDescending\": \" - click/return to sort descending\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sSortDescending\": \": activate to sort column descending\"\n\t\t\t},\n\t\n\t\t\t/**\n\t\t\t * Pagination string used by DataTables for the two built-in pagination\n\t\t\t * control types (\"two_button\" and \"full_numbers\")\n\t\t\t *  @namespace\n\t\t\t */\n\t\t\t\"oPaginate\": {\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the first page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default First\n\t\t\t\t *  @dtopt Language\n\t\t\t\t * \n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"oLanguage\": {\n\t\t\t\t *          \"oPaginate\": {\n\t\t\t\t *            \"sFirst\": \"First page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sFirst\": \"First\",\n\t\t\t\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Text to use when using the 'full_numbers' type of pagination for the\n\t\t\t\t * button to take the user to the last page.\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Last\n\t\t\t\t *  @dtopt Language\n\t\t\t\t * \n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"oLanguage\": {\n\t\t\t\t *          \"oPaginate\": {\n\t\t\t\t *            \"sLast\": \"Last page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sLast\": \"Last\",\n\t\t\t\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'next' pagination button (to take the user to the \n\t\t\t\t * next page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Next\n\t\t\t\t *  @dtopt Language\n\t\t\t\t * \n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"oLanguage\": {\n\t\t\t\t *          \"oPaginate\": {\n\t\t\t\t *            \"sNext\": \"Next page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sNext\": \"Next\",\n\t\t\t\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * Text to use for the 'previous' pagination button (to take the user to  \n\t\t\t\t * the previous page).\n\t\t\t\t *  @type string\n\t\t\t\t *  @default Previous\n\t\t\t\t *  @dtopt Language\n\t\t\t\t * \n\t\t\t\t *  @example\n\t\t\t\t *    $(document).ready( function() {\n\t\t\t\t *      $('#example').dataTable( {\n\t\t\t\t *        \"oLanguage\": {\n\t\t\t\t *          \"oPaginate\": {\n\t\t\t\t *            \"sPrevious\": \"Previous page\"\n\t\t\t\t *          }\n\t\t\t\t *        }\n\t\t\t\t *      } );\n\t\t\t\t *    } );\n\t\t\t\t */\n\t\t\t\t\"sPrevious\": \"Previous\"\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * This string is shown in preference to sZeroRecords when the table is\n\t\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t\t * parameter - if it is not given, the value of sZeroRecords will be used\n\t\t\t * instead (either the default or given value).\n\t\t\t *  @type string\n\t\t\t *  @default No data available in table\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sEmptyTable\": \"No data available in table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sEmptyTable\": \"No data available in table\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * This string gives information to the end user about the information that \n\t\t\t * is current on display on the page. The _START_, _END_ and _TOTAL_ \n\t\t\t * variables are all dynamically replaced as the table display updates, and \n\t\t\t * can be freely moved or removed as the language requirements change.\n\t\t\t *  @type string\n\t\t\t *  @default Showing _START_ to _END_ of _TOTAL_ entries\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sInfo\": \"Got a total of _TOTAL_ entries to show (_START_ to _END_)\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ entries\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Display information string for when the table is empty. Typically the \n\t\t\t * format of this string should match sInfo.\n\t\t\t *  @type string\n\t\t\t *  @default Showing 0 to 0 of 0 entries\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sInfoEmpty\": \"No entries to show\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 entries\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * When a user filters the information in a table, this string is appended \n\t\t\t * to the information (sInfo) to give an idea of how strong the filtering \n\t\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t\t *  @type string\n\t\t\t *  @default (filtered from _MAX_ total entries)\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sInfoFiltered\": \" - filtering from _MAX_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total entries)\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * If can be useful to append extra information to the info string at times,\n\t\t\t * and this variable does exactly that. This information will be appended to\n\t\t\t * the sInfo (sInfoEmpty and sInfoFiltered in whatever combination they are\n\t\t\t * being used) at all times.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string</i>\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sInfoPostFix\": \"All records shown are derived from real information.\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoPostFix\": \"\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * DataTables has a build in number formatter (fnFormatNumber) which is used\n\t\t\t * to format large numbers that are used in the table information. By\n\t\t\t * default a comma is used, but this can be trivially changed to any\n\t\t\t * character you wish with this parameter.\n\t\t\t *  @type string\n\t\t\t *  @default ,\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sInfoThousands\": \"'\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sInfoThousands\": \",\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t\t * with a custom select box if required.\n\t\t\t *  @type string\n\t\t\t *  @default Show _MENU_ entries\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    // Language change only\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sLengthMenu\": \"Display _MENU_ records\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *    \n\t\t\t *  @example\n\t\t\t *    // Language and options change\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sLengthMenu\": 'Display <select>'+\n\t\t\t *            '<option value=\"10\">10</option>'+\n\t\t\t *            '<option value=\"20\">20</option>'+\n\t\t\t *            '<option value=\"30\">30</option>'+\n\t\t\t *            '<option value=\"40\">40</option>'+\n\t\t\t *            '<option value=\"50\">50</option>'+\n\t\t\t *            '<option value=\"-1\">All</option>'+\n\t\t\t *            '</select> records'\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLengthMenu\": \"Show _MENU_ entries\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t\t * parameter is not used when loading data by server-side processing, just\n\t\t\t * Ajax sourced data with client-side processing.\n\t\t\t *  @type string\n\t\t\t *  @default Loading...\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sLoadingRecords\": \"Please wait - loading...\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sLoadingRecords\": \"Loading...\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Text which is displayed when the table is processing a user action\n\t\t\t * (usually a sort command or similar).\n\t\t\t *  @type string\n\t\t\t *  @default Processing...\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sProcessing\": \"DataTables is currently busy\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sProcessing\": \"Processing...\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Details the actions that will be taken when the user types into the\n\t\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t\t * then the input box is appended to the string automatically.\n\t\t\t *  @type string\n\t\t\t *  @default Search:\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    // Input text box will be appended at the end automatically\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sSearch\": \"Filter records:\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t *    \n\t\t\t *  @example\n\t\t\t *    // Specify where the filter should appear\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sSearch\": \"Apply filter _INPUT_ to table\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sSearch\": \"Search:\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * All of the language information can be stored in a file on the\n\t\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t\t * and the object has the same properties as the oLanguage object in the\n\t\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t\t * the example language files to see how this works in action.\n\t\t\t *  @type string\n\t\t\t *  @default <i>Empty string - i.e. disabled</i>\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sUrl\": \"http://www.sprymedia.co.uk/dataTables/lang.txt\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sUrl\": \"\",\n\t\t\n\t\t\n\t\t\t/**\n\t\t\t * Text shown inside the table records when the is no information to be\n\t\t\t * displayed after filtering. sEmptyTable is shown when there is simply no\n\t\t\t * information in the table at all (regardless of filtering).\n\t\t\t *  @type string\n\t\t\t *  @default No matching records found\n\t\t\t *  @dtopt Language\n\t\t\t * \n\t\t\t *  @example\n\t\t\t *    $(document).ready( function() {\n\t\t\t *      $('#example').dataTable( {\n\t\t\t *        \"oLanguage\": {\n\t\t\t *          \"sZeroRecords\": \"No records to display\"\n\t\t\t *        }\n\t\t\t *      } );\n\t\t\t *    } );\n\t\t\t */\n\t\t\t\"sZeroRecords\": \"No matching records found\"\n\t\t},\n\t\n\t\n\t\t/**\n\t\t * This parameter allows you to have define the global filtering state at\n\t\t * initialisation time. As an object the \"sSearch\" parameter must be\n\t\t * defined, but all other parameters are optional. When \"bRegex\" is true,\n\t\t * the search string will be treated as a regular expression, when false\n\t\t * (default) it will be treated as a straight string. When \"bSmart\"\n\t\t * DataTables will use it's smart filtering methods (to word match at\n\t\t * any point in the data), when false this will not be done.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"oSearch\": {\"sSearch\": \"Initial search\"}\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\t\n\t\n\t\t/**\n\t\t * By default DataTables will look for the property 'aaData' when obtaining\n\t\t * data from an Ajax source or for server-side processing - this parameter\n\t\t * allows that property to be changed. You can use Javascript dotted object\n\t\t * notation to get a data source for multiple levels of nesting.\n\t\t *  @type string\n\t\t *  @default aaData\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t * \n\t\t *  @example\n\t\t *    // Get data from { \"data\": [...] }\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sAjaxSource\": \"sources/data.txt\",\n\t\t *        \"sAjaxDataProp\": \"data\"\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Get data from { \"data\": { \"inner\": [...] } }\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sAjaxSource\": \"sources/data.txt\",\n\t\t *        \"sAjaxDataProp\": \"data.inner\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sAjaxDataProp\": \"aaData\",\n\t\n\t\n\t\t/**\n\t\t * You can instruct DataTables to load data from an external source using this\n\t\t * parameter (use aData if you want to pass data in you already have). Simply\n\t\t * provide a url a JSON object can be obtained from. This object must include\n\t\t * the parameter 'aaData' which is the data source for the table.\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sAjaxSource\": \"http://www.sprymedia.co.uk/dataTables/json.php\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter can be used to override the default prefix that DataTables\n\t\t * assigns to a cookie when state saving is enabled.\n\t\t *  @type string\n\t\t *  @default SpryMedia_DataTables_\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sCookiePrefix\": \"my_datatable_\",\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCookiePrefix\": \"SpryMedia_DataTables_\",\n\t\n\t\n\t\t/**\n\t\t * This initialisation variable allows you to specify exactly where in the\n\t\t * DOM you want DataTables to inject the various controls it adds to the page\n\t\t * (for example you might want the pagination controls at the top of the\n\t\t * table). DIV elements (with or without a custom class) can also be added to\n\t\t * aid styling. The follow syntax is used:\n\t\t *   <ul>\n\t\t *     <li>The following options are allowed:\t\n\t\t *       <ul>\n\t\t *         <li>'l' - Length changing</li\n\t\t *         <li>'f' - Filtering input</li>\n\t\t *         <li>'t' - The table!</li>\n\t\t *         <li>'i' - Information</li>\n\t\t *         <li>'p' - Pagination</li>\n\t\t *         <li>'r' - pRocessing</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following constants are allowed:\n\t\t *       <ul>\n\t\t *         <li>'H' - jQueryUI theme \"header\" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>\n\t\t *         <li>'F' - jQueryUI theme \"footer\" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>The following syntax is expected:\n\t\t *       <ul>\n\t\t *         <li>'&lt;' and '&gt;' - div elements</li>\n\t\t *         <li>'&lt;\"class\" and '&gt;' - div with a class</li>\n\t\t *         <li>'&lt;\"#id\" and '&gt;' - div with an ID</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *     <li>Examples:\n\t\t *       <ul>\n\t\t *         <li>'&lt;\"wrapper\"flipt&gt;'</li>\n\t\t *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>\n\t\t *       </ul>\n\t\t *     </li>\n\t\t *   </ul>\n\t\t *  @type string\n\t\t *  @default lfrtip <i>(when bJQueryUI is false)</i> <b>or</b> \n\t\t *    <\"H\"lfr>t<\"F\"ip> <i>(when bJQueryUI is true)</i>\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sDom\": '&lt;\"top\"i&gt;rt&lt;\"bottom\"flp&gt;&lt;\"clear\"&gt;'\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDom\": \"lfrtip\",\n\t\n\t\n\t\t/**\n\t\t * DataTables features two different built-in pagination interaction methods\n\t\t * ('two_button' or 'full_numbers') which present different page controls to\n\t\t * the end user. Further methods can be added using the API (see below).\n\t\t *  @type string\n\t\t *  @default two_button\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sPaginationType\": \"full_numbers\"\n\t\t *      } );\n\t\t *    } )\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\n\t\n\t\t/**\n\t\t * Enable horizontal scrolling. When a table is too wide to fit into a certain\n\t\t * layout, or you have a large number of columns in the table, you can enable\n\t\t * x-scrolling to show the table in a viewport, which can be scrolled. This\n\t\t * property can be any CSS unit, or a number (in which case it will be treated\n\t\t * as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sScrollX\": \"100%\",\n\t\t *        \"bScrollCollapse\": true\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollX\": \"\",\n\t\n\t\n\t\t/**\n\t\t * This property can be used to force a DataTable to use more width than it\n\t\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t\t * table which requires to be well spaced, this parameter is useful for\n\t\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t\t * measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *  @dtopt Options\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sScrollX\": \"100%\",\n\t\t *        \"sScrollXInner\": \"110%\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollXInner\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t\t * to the given height, and enable scrolling for any data which overflows the\n\t\t * current viewport. This can be used as an alternative to paging to display\n\t\t * a lot of data in a small area (although paging and scrolling can both be\n\t\t * enabled at the same time). This property can be any CSS unit, or a number\n\t\t * (in which case it will be treated as a pixel measurement).\n\t\t *  @type string\n\t\t *  @default <i>blank string - i.e. disabled</i>\n\t\t *  @dtopt Features\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"sScrollY\": \"200px\",\n\t\t *        \"bPaginate\": false\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sScrollY\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t\t * processing or Ajax sourced data.\n\t\t *  @type string\n\t\t *  @default GET\n\t\t *  @dtopt Options\n\t\t *  @dtopt Server-side\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"bServerSide\": true,\n\t\t *        \"sAjaxSource\": \"scripts/post.php\",\n\t\t *        \"sServerMethod\": \"POST\"\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sServerMethod\": \"GET\"\n\t};\n\t\n\t\n\t\n\t/**\n\t * Column options that can be given to DataTables at initialisation time.\n\t *  @namespace\n\t */\n\tDataTable.defaults.columns = {\n\t\t/**\n\t\t * Allows a column's sorting to take multiple columns into account when \n\t\t * doing a sort. For example first name / last name columns make sense to \n\t\t * do a multi-column sort over the two columns.\n\t\t *  @type array\n\t\t *  @default null <i>Takes the value of the column index automatically</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [\n\t\t *          { \"aDataSort\": [ 0, 1 ], \"aTargets\": [ 0 ] },\n\t\t *          { \"aDataSort\": [ 1, 0 ], \"aTargets\": [ 1 ] },\n\t\t *          { \"aDataSort\": [ 2, 3, 4 ], \"aTargets\": [ 2 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [\n\t\t *          { \"aDataSort\": [ 0, 1 ] },\n\t\t *          { \"aDataSort\": [ 1, 0 ] },\n\t\t *          { \"aDataSort\": [ 2, 3, 4 ] },\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"aDataSort\": null,\n\t\n\t\n\t\t/**\n\t\t * You can control the default sorting direction, and even alter the behaviour\n\t\t * of the sort handler (i.e. only allow ascending sorting etc) using this\n\t\t * parameter.\n\t\t *  @type array\n\t\t *  @default [ 'asc', 'desc' ]\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [\n\t\t *          { \"asSorting\": [ \"asc\" ], \"aTargets\": [ 1 ] },\n\t\t *          { \"asSorting\": [ \"desc\", \"asc\", \"asc\" ], \"aTargets\": [ 2 ] },\n\t\t *          { \"asSorting\": [ \"desc\" ], \"aTargets\": [ 3 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [\n\t\t *          null,\n\t\t *          { \"asSorting\": [ \"asc\" ] },\n\t\t *          { \"asSorting\": [ \"desc\", \"asc\", \"asc\" ] },\n\t\t *          { \"asSorting\": [ \"desc\" ] },\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"asSorting\": [ 'asc', 'desc' ],\n\t\n\t\n\t\t/**\n\t\t * Enable or disable filtering on the data in this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"bSearchable\": false, \"aTargets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"bSearchable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSearchable\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable sorting on this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"bSortable\": false, \"aTargets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"bSortable\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bSortable\": true,\n\t\n\t\n\t\t/**\n\t\t * <code>Deprecated</code> When using fnRender() for a column, you may wish \n\t\t * to use the original data (before rendering) for sorting and filtering \n\t\t * (the default is to used the rendered data that the user can see). This \n\t\t * may be useful for dates etc.\n\t\t * \n\t\t * Please note that this option has now been deprecated and will be removed\n\t\t * in the next version of DataTables. Please use mRender / mData rather than\n\t\t * fnRender.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Columns\n\t\t *  @deprecated\n\t\t */\n\t\t\"bUseRendered\": true,\n\t\n\t\n\t\t/**\n\t\t * Enable or disable the display of this column.\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"bVisible\": false, \"aTargets\": [ 0 ] }\n\t\t *        ] } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"bVisible\": false },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ] } );\n\t\t *    } );\n\t\t */\n\t\t\"bVisible\": true,\n\t\t\n\t\t\n\t\t/**\n\t\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t\t * allowing you to modify the DOM element (add background colour for example) when the\n\t\t * element is available.\n\t\t *  @type function\n\t\t *  @param {element} nTd The TD node that has been created\n\t\t *  @param {*} sData The Data for the cell\n\t\t *  @param {array|object} oData The data for the whole row\n\t\t *  @param {int} iRow The row index for the aoData data store\n\t\t *  @param {int} iCol The column index for aoColumns\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ {\n\t\t *          \"aTargets\": [3],\n\t\t *          \"fnCreatedCell\": function (nTd, sData, oData, iRow, iCol) {\n\t\t *            if ( sData == \"1.7\" ) {\n\t\t *              $(nTd).css('color', 'blue')\n\t\t *            }\n\t\t *          }\n\t\t *        } ]\n\t\t *      });\n\t\t *    } );\n\t\t */\n\t\t\"fnCreatedCell\": null,\n\t\n\t\n\t\t/**\n\t\t * <code>Deprecated</code> Custom display function that will be called for the \n\t\t * display of each cell in this column.\n\t\t *\n\t\t * Please note that this option has now been deprecated and will be removed\n\t\t * in the next version of DataTables. Please use mRender / mData rather than\n\t\t * fnRender.\n\t\t *  @type function\n\t\t *  @param {object} o Object with the following parameters:\n\t\t *  @param {int}    o.iDataRow The row in aoData\n\t\t *  @param {int}    o.iDataColumn The column in question\n\t\t *  @param {array}  o.aData The data for the row in question\n\t\t *  @param {object} o.oSettings The settings object for this DataTables instance\n\t\t *  @param {object} o.mDataProp The data property used for this column\n\t\t *  @param {*}      val The current cell value\n\t\t *  @returns {string} The string you which to use in the display\n\t\t *  @dtopt Columns\n\t\t *  @deprecated\n\t\t */\n\t\t\"fnRender\": null,\n\t\n\t\n\t\t/**\n\t\t * The column index (starting from 0!) that you wish a sort to be performed\n\t\t * upon when this column is selected for sorting. This can be used for sorting\n\t\t * on hidden columns for example.\n\t\t *  @type int\n\t\t *  @default -1 <i>Use automatically calculated column index</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"iDataSort\": 1, \"aTargets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"iDataSort\": 1 },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"iDataSort\": -1,\n\t\n\t\n\t\t/**\n\t\t * This parameter has been replaced by mData in DataTables to ensure naming\n\t\t * consistency. mDataProp can still be used, as there is backwards compatibility\n\t\t * in DataTables for this option, but it is strongly recommended that you use\n\t\t * mData in preference to mDataProp.\n\t\t *  @name DataTable.defaults.columns.mDataProp\n\t\t */\n\t\n\t\n\t\t/**\n\t\t * This property can be used to read data from any JSON data source property,\n\t\t * including deeply nested objects / properties. mData can be given in a\n\t\t * number of different ways which effect its behaviour:\n\t\t *   <ul>\n\t\t *     <li>integer - treated as an array index for the data source. This is the\n\t\t *       default that DataTables uses (incrementally increased for each column).</li>\n\t\t *     <li>string - read an object property from the data source. Note that you can\n\t\t *       use Javascript dotted notation to read deep properties / arrays from the\n\t\t *       data source.</li>\n\t\t *     <li>null - the sDefaultContent option will be used for the cell (null\n\t\t *       by default, so you will need to specify the default content you want -\n\t\t *       typically an empty string). This can be useful on generated columns such \n\t\t *       as edit / delete action columns.</li>\n\t\t *     <li>function - the function given will be executed whenever DataTables \n\t\t *       needs to set or get the data for a cell in the column. The function \n\t\t *       takes three parameters:\n\t\t *       <ul>\n\t\t *         <li>{array|object} The data source for the row</li>\n\t\t *         <li>{string} The type call data requested - this will be 'set' when\n\t\t *           setting data or 'filter', 'display', 'type', 'sort' or undefined when \n\t\t *           gathering data. Note that when <i>undefined</i> is given for the type\n\t\t *           DataTables expects to get the raw data for the object back</li>\n\t\t *         <li>{*} Data to set when the second parameter is 'set'.</li>\n\t\t *       </ul>\n\t\t *       The return value from the function is not required when 'set' is the type\n\t\t *       of call, but otherwise the return is what will be used for the data\n\t\t *       requested.</li>\n\t\t *    </ul>\n\t\t *\n\t\t * Note that prior to DataTables 1.9.2 mData was called mDataProp. The name change\n\t\t * reflects the flexibility of this property and is consistent with the naming of\n\t\t * mRender. If 'mDataProp' is given, then it will still be used by DataTables, as\n\t\t * it automatically maps the old name to the new if required.\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use automatically calculated column index</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Read table data from objects\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sAjaxSource\": \"sources/deep.txt\",\n\t\t *        \"aoColumns\": [\n\t\t *          { \"mData\": \"engine\" },\n\t\t *          { \"mData\": \"browser\" },\n\t\t *          { \"mData\": \"platform.inner\" },\n\t\t *          { \"mData\": \"platform.details.0\" },\n\t\t *          { \"mData\": \"platform.details.1\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t * \n\t\t *  @example\n\t\t *    // Using mData as a function to provide different information for\n\t\t *    // sorting, filtering and display. In this case, currency (price)\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ {\n\t\t *          \"aTargets\": [ 0 ],\n\t\t *          \"mData\": function ( source, type, val ) {\n\t\t *            if (type === 'set') {\n\t\t *              source.price = val;\n\t\t *              // Store the computed dislay and filter values for efficiency\n\t\t *              source.price_display = val==\"\" ? \"\" : \"$\"+numberFormat(val);\n\t\t *              source.price_filter  = val==\"\" ? \"\" : \"$\"+numberFormat(val)+\" \"+val;\n\t\t *              return;\n\t\t *            }\n\t\t *            else if (type === 'display') {\n\t\t *              return source.price_display;\n\t\t *            }\n\t\t *            else if (type === 'filter') {\n\t\t *              return source.price_filter;\n\t\t *            }\n\t\t *            // 'sort', 'type' and undefined all just use the integer\n\t\t *            return source.price;\n\t\t *          }\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mData\": null,\n\t\n\t\n\t\t/**\n\t\t * This property is the rendering partner to mData and it is suggested that\n\t\t * when you want to manipulate data for display (including filtering, sorting etc)\n\t\t * but not altering the underlying data for the table, use this property. mData\n\t\t * can actually do everything this property can and more, but this parameter is\n\t\t * easier to use since there is no 'set' option. Like mData is can be given\n\t\t * in a number of different ways to effect its behaviour, with the addition of \n\t\t * supporting array syntax for easy outputting of arrays (including arrays of\n\t\t * objects):\n\t\t *   <ul>\n\t\t *     <li>integer - treated as an array index for the data source. This is the\n\t\t *       default that DataTables uses (incrementally increased for each column).</li>\n\t\t *     <li>string - read an object property from the data source. Note that you can\n\t\t *       use Javascript dotted notation to read deep properties / arrays from the\n\t\t *       data source and also array brackets to indicate that the data reader should\n\t\t *       loop over the data source array. When characters are given between the array\n\t\t *       brackets, these characters are used to join the data source array together.\n\t\t *       For example: \"accounts[, ].name\" would result in a comma separated list with\n\t\t *       the 'name' value from the 'accounts' array of objects.</li>\n\t\t *     <li>function - the function given will be executed whenever DataTables \n\t\t *       needs to set or get the data for a cell in the column. The function \n\t\t *       takes three parameters:\n\t\t *       <ul>\n\t\t *         <li>{array|object} The data source for the row (based on mData)</li>\n\t\t *         <li>{string} The type call data requested - this will be 'filter', 'display', \n\t\t *           'type' or 'sort'.</li>\n\t\t *         <li>{array|object} The full data source for the row (not based on mData)</li>\n\t\t *       </ul>\n\t\t *       The return value from the function is what will be used for the data\n\t\t *       requested.</li>\n\t\t *    </ul>\n\t\t *  @type string|int|function|null\n\t\t *  @default null <i>Use mData</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Create a comma separated list from an array of objects\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"sAjaxSource\": \"sources/deep.txt\",\n\t\t *        \"aoColumns\": [\n\t\t *          { \"mData\": \"engine\" },\n\t\t *          { \"mData\": \"browser\" },\n\t\t *          {\n\t\t *            \"mData\": \"platform\",\n\t\t *            \"mRender\": \"[, ].name\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t * \n\t\t *  @example\n\t\t *    // Use as a function to create a link from the data source\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [\n\t\t *        {\n\t\t *          \"aTargets\": [ 0 ],\n\t\t *          \"mData\": \"download_link\",\n\t\t *          \"mRender\": function ( data, type, full ) {\n\t\t *            return '<a href=\"'+data+'\">Download</a>';\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"mRender\": null,\n\t\n\t\n\t\t/**\n\t\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t\t *  @type string\n\t\t *  @default td\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Make the first column use TH cells\n\t\t *    $(document).ready( function() {\n\t\t *      var oTable = $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ {\n\t\t *          \"aTargets\": [ 0 ],\n\t\t *          \"sCellType\": \"th\"\n\t\t *        } ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sCellType\": \"td\",\n\t\n\t\n\t\t/**\n\t\t * Class to give to each cell in this column.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"sClass\": \"my_class\", \"aTargets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"sClass\": \"my_class\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sClass\": \"\",\n\t\t\n\t\t/**\n\t\t * When DataTables calculates the column widths to assign to each column,\n\t\t * it finds the longest string in each column and then constructs a\n\t\t * temporary table and reads the widths from that. The problem with this\n\t\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer \n\t\t * string - thus the calculation can go wrong (doing it properly and putting\n\t\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t\t * a \"work around\" we provide this option. It will append its value to the\n\t\t * text that is found to be the longest string for the column - i.e. padding.\n\t\t * Generally you shouldn't need this, and it is not documented on the \n\t\t * general DataTables.net documentation\n\t\t *  @type string\n\t\t *  @default <i>Empty string<i>\n\t\t *  @dtopt Columns\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"sContentPadding\": \"mmm\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sContentPadding\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Allows a default value to be given for a column's data, and will be used\n\t\t * whenever a null data source is encountered (this can be because mData\n\t\t * is set to null, or because the data source itself is null).\n\t\t *  @type string\n\t\t *  @default null\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          {\n\t\t *            \"mData\": null,\n\t\t *            \"sDefaultContent\": \"Edit\",\n\t\t *            \"aTargets\": [ -1 ]\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          {\n\t\t *            \"mData\": null,\n\t\t *            \"sDefaultContent\": \"Edit\"\n\t\t *          }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sDefaultContent\": null,\n\t\n\t\n\t\t/**\n\t\t * This parameter is only used in DataTables' server-side processing. It can\n\t\t * be exceptionally useful to know what columns are being displayed on the\n\t\t * client side, and to map these to database fields. When defined, the names\n\t\t * also allow DataTables to reorder information from the server if it comes\n\t\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t\t * client-side, your server-side code does not also need updating).\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"sName\": \"engine\", \"aTargets\": [ 0 ] },\n\t\t *          { \"sName\": \"browser\", \"aTargets\": [ 1 ] },\n\t\t *          { \"sName\": \"platform\", \"aTargets\": [ 2 ] },\n\t\t *          { \"sName\": \"version\", \"aTargets\": [ 3 ] },\n\t\t *          { \"sName\": \"grade\", \"aTargets\": [ 4 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"sName\": \"engine\" },\n\t\t *          { \"sName\": \"browser\" },\n\t\t *          { \"sName\": \"platform\" },\n\t\t *          { \"sName\": \"version\" },\n\t\t *          { \"sName\": \"grade\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sName\": \"\",\n\t\n\t\n\t\t/**\n\t\t * Defines a data source type for the sorting which can be used to read\n\t\t * real-time information from the table (updating the internally cached\n\t\t * version) prior to sorting. This allows sorting to occur on user editable\n\t\t * elements such as form inputs.\n\t\t *  @type string\n\t\t *  @default std\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [\n\t\t *          { \"sSortDataType\": \"dom-text\", \"aTargets\": [ 2, 3 ] },\n\t\t *          { \"sType\": \"numeric\", \"aTargets\": [ 3 ] },\n\t\t *          { \"sSortDataType\": \"dom-select\", \"aTargets\": [ 4 ] },\n\t\t *          { \"sSortDataType\": \"dom-checkbox\", \"aTargets\": [ 5 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [\n\t\t *          null,\n\t\t *          null,\n\t\t *          { \"sSortDataType\": \"dom-text\" },\n\t\t *          { \"sSortDataType\": \"dom-text\", \"sType\": \"numeric\" },\n\t\t *          { \"sSortDataType\": \"dom-select\" },\n\t\t *          { \"sSortDataType\": \"dom-checkbox\" }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sSortDataType\": \"std\",\n\t\n\t\n\t\t/**\n\t\t * The title of this column.\n\t\t *  @type string\n\t\t *  @default null <i>Derived from the 'TH' value for this column in the \n\t\t *    original HTML table.</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"sTitle\": \"My column title\", \"aTargets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"sTitle\": \"My column title\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sTitle\": null,\n\t\n\t\n\t\t/**\n\t\t * The type allows you to specify how the data for this column will be sorted.\n\t\t * Four types (string, numeric, date and html (which will strip HTML tags\n\t\t * before sorting)) are currently available. Note that only date formats\n\t\t * understood by Javascript's Date() object will be accepted as type date. For\n\t\t * example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string', 'numeric',\n\t\t * 'date' or 'html' (by default). Further types can be adding through\n\t\t * plug-ins.\n\t\t *  @type string\n\t\t *  @default null <i>Auto-detected from raw data</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"sType\": \"html\", \"aTargets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"sType\": \"html\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sType\": null,\n\t\n\t\n\t\t/**\n\t\t * Defining the width of the column, this parameter may take any CSS value\n\t\t * (3em, 20px etc). DataTables apples 'smart' widths to columns which have not\n\t\t * been given a specific width through this interface ensuring that the table\n\t\t * remains readable.\n\t\t *  @type string\n\t\t *  @default null <i>Automatic</i>\n\t\t *  @dtopt Columns\n\t\t * \n\t\t *  @example\n\t\t *    // Using aoColumnDefs\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumnDefs\": [ \n\t\t *          { \"sWidth\": \"20%\", \"aTargets\": [ 0 ] }\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t *    \n\t\t *  @example\n\t\t *    // Using aoColumns\n\t\t *    $(document).ready( function() {\n\t\t *      $('#example').dataTable( {\n\t\t *        \"aoColumns\": [ \n\t\t *          { \"sWidth\": \"20%\" },\n\t\t *          null,\n\t\t *          null,\n\t\t *          null,\n\t\t *          null\n\t\t *        ]\n\t\t *      } );\n\t\t *    } );\n\t\t */\n\t\t\"sWidth\": null\n\t};\n\t\n\t\n\t\n\t/**\n\t * DataTables settings object - this holds all the information needed for a\n\t * given table, including configuration, data and current application of the\n\t * table options. DataTables does not have a single instance for each DataTable\n\t * with the settings attached to that instance, but rather instances of the\n\t * DataTable \"class\" are created on-the-fly as needed (typically by a \n\t * $().dataTable() call) and the settings object is then applied to that\n\t * instance.\n\t * \n\t * Note that this object is related to {@link DataTable.defaults} but this \n\t * one is the internal data store for DataTables's cache of columns. It should\n\t * NOT be manipulated outside of DataTables. Any configuration should be done\n\t * through the initialisation options.\n\t *  @namespace\n\t *  @todo Really should attach the settings object to individual instances so we\n\t *    don't need to create new instances on each $().dataTable() call (if the\n\t *    table already exists). It would also save passing oSettings around and\n\t *    into every single function. However, this is a very significant \n\t *    architecture change for DataTables and will almost certainly break\n\t *    backwards compatibility with older installations. This is something that\n\t *    will be done in 2.0.\n\t */\n\tDataTable.models.oSettings = {\n\t\t/**\n\t\t * Primary features of DataTables and their enablement state.\n\t\t *  @namespace\n\t\t */\n\t\t\"oFeatures\": {\n\t\t\t\n\t\t\t/**\n\t\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t\t * optimum table and columns widths (true) or not (false).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoWidth\": null,\n\t\n\t\t\t/**\n\t\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t\t * needed by a driven page draw. This can give a significant speed\n\t\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t\t * difference at all fro DOM and server-side processing tables.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bDeferRender\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bFilter\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Table information element (the 'Showing x of y records' div) enable\n\t\t\t * flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfo\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Present a user control allowing the end user to change the page size\n\t\t\t * when pagination is enabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bLengthChange\": null,\n\t\n\t\t\t/**\n\t\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t\t * changing must also be disabled.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bPaginate\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t\t * user request - typically an Ajax request for server-side processing.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bProcessing\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t\t * get all data from the server for every draw - there is no filtering,\n\t\t\t * sorting or paging done on the client-side.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bServerSide\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Sorting enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSort\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t\t * there is a lot of DOM interaction.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bSortClasses\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * State saving enablement flag.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bStateSave\": null\n\t\t},\n\t\t\n\t\n\t\t/**\n\t\t * Scrolling settings for a table.\n\t\t *  @namespace\n\t\t */\n\t\t\"oScroll\": {\n\t\t\t/**\n\t\t\t * Indicate if DataTables should be allowed to set the padding / margin\n\t\t\t * etc for the scrolling header elements or not. Typically you will want\n\t\t\t * this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bAutoCss\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t\t * table container down to the height of the table (when true).\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bCollapse\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Infinite scrolling enablement flag. Now deprecated in favour of\n\t\t\t * using the Scroller plug-in.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type boolean\n\t\t\t */\n\t\t\t\"bInfinite\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t\t * during table initialisation.\n\t\t\t *  @type int\n\t\t\t *  @default 0\n\t\t\t */\n\t\t\t\"iBarWidth\": 0,\n\t\t\t\n\t\t\t/**\n\t\t\t * Space (in pixels) between the bottom of the scrolling container and \n\t\t\t * the bottom of the scrolling viewport before the next page is loaded\n\t\t\t * when using infinite scrolling.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type int\n\t\t\t */\n\t\t\t\"iLoadGap\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is \n\t\t\t * disabled if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sX\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t\t * should not need to use this.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t *  @deprecated\n\t\t\t */\n\t\t\t\"sXInner\": null,\n\t\t\t\n\t\t\t/**\n\t\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t\t * if an empty string.\n\t\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t\t * set a default use {@link DataTable.defaults}.\n\t\t\t *  @type string\n\t\t\t */\n\t\t\t\"sY\": null\n\t\t},\n\t\t\n\t\t/**\n\t\t * Language information for the table.\n\t\t *  @namespace\n\t\t *  @extends DataTable.defaults.oLanguage\n\t\t */\n\t\t\"oLanguage\": {\n\t\t\t/**\n\t\t\t * Information callback function. See \n\t\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t\t *  @type function\n\t\t\t *  @default null\n\t\t\t */\n\t\t\t\"fnInfoCallback\": null\n\t\t},\n\t\t\n\t\t/**\n\t\t * Browser support parameters\n\t\t *  @namespace\n\t\t */\n\t\t\"oBrowser\": {\n\t\t\t/**\n\t\t\t * Indicate if the browser incorrectly calculates width:100% inside a\n\t\t\t * scrolling element (IE6/7)\n\t\t\t *  @type boolean\n\t\t\t *  @default false\n\t\t\t */\n\t\t\t\"bScrollOversize\": false\n\t\t},\n\t\t\n\t\t/**\n\t\t * Array referencing the nodes which are used for the features. The \n\t\t * parameters of this object match what is allowed by sDom - i.e.\n\t\t *   <ul>\n\t\t *     <li>'l' - Length changing</li>\n\t\t *     <li>'f' - Filtering input</li>\n\t\t *     <li>'t' - The table!</li>\n\t\t *     <li>'i' - Information</li>\n\t\t *     <li>'p' - Pagination</li>\n\t\t *     <li>'r' - pRocessing</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aanFeatures\": [],\n\t\t\n\t\t/**\n\t\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t\t * information.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoData\": [],\n\t\t\n\t\t/**\n\t\t * Array of indexes which are in the current display (after filtering etc)\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplay\": [],\n\t\t\n\t\t/**\n\t\t * Array of indexes for display - no filtering\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aiDisplayMaster\": [],\n\t\t\n\t\t/**\n\t\t * Store information about each column that is in use\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoColumns\": [],\n\t\t\n\t\t/**\n\t\t * Store information about the table's header\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeader\": [],\n\t\t\n\t\t/**\n\t\t * Store information about the table's footer\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooter\": [],\n\t\t\n\t\t/**\n\t\t * Search data array for regular expression searching\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDataSearch\": [],\n\t\t\n\t\t/**\n\t\t * Store the applied global search information in case we want to force a \n\t\t * research or compare the old search to a new one.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @namespace\n\t\t *  @extends DataTable.models.oSearch\n\t\t */\n\t\t\"oPreviousSearch\": {},\n\t\t\n\t\t/**\n\t\t * Store the applied search for each column - see \n\t\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t\t * filtering information for each column.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreSearchCols\": [],\n\t\t\n\t\t/**\n\t\t * Sorting that is applied to the table. Note that the inner arrays are\n\t\t * used in the following manner:\n\t\t * <ul>\n\t\t *   <li>Index 0 - column number</li>\n\t\t *   <li>Index 1 - current sorting direction</li>\n\t\t *   <li>Index 2 - index of asSorting for this column</li>\n\t\t * </ul>\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @todo These inner arrays should really be objects\n\t\t */\n\t\t\"aaSorting\": null,\n\t\t\n\t\t/**\n\t\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t\t * aaSorting).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array|null\n\t\t *  @default null\n\t\t */\n\t\t\"aaSortingFixed\": null,\n\t\t\n\t\t/**\n\t\t * Classes to use for the striping of a table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asStripeClasses\": null,\n\t\t\n\t\t/**\n\t\t * If restoring a table - we should restore its striping classes as well\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"asDestroyStripes\": [],\n\t\t\n\t\t/**\n\t\t * If restoring a table - we should restore its width \n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"sDestroyWidth\": 0,\n\t\t\n\t\t/**\n\t\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCallback\": [],\n\t\t\n\t\t/**\n\t\t * Callback functions for the header on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoHeaderCallback\": [],\n\t\t\n\t\t/**\n\t\t * Callback function for the footer on each draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoFooterCallback\": [],\n\t\t\n\t\t/**\n\t\t * Array of callback functions for draw callback functions\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDrawCallback\": [],\n\t\t\n\t\t/**\n\t\t * Array of callback functions for row created function\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoRowCreatedCallback\": [],\n\t\t\n\t\t/**\n\t\t * Callback functions for just before the table is redrawn. A return of \n\t\t * false will be used to cancel the draw.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoPreDrawCallback\": [],\n\t\t\n\t\t/**\n\t\t * Callback functions for when the table has been initialised.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoInitComplete\": [],\n\t\n\t\t\n\t\t/**\n\t\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t\t * saving state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSaveParams\": [],\n\t\t\n\t\t/**\n\t\t * Callbacks for modifying the settings that have been stored for state saving\n\t\t * prior to using the stored values to restore the state.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoadParams\": [],\n\t\t\n\t\t/**\n\t\t * Callbacks for operating on the settings object once the saved state has been\n\t\t * loaded\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoaded\": [],\n\t\t\n\t\t/**\n\t\t * Cache the table ID for quick access\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sTableId\": \"\",\n\t\t\n\t\t/**\n\t\t * The TABLE node for the main table\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTable\": null,\n\t\t\n\t\t/**\n\t\t * Permanent ref to the thead element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTHead\": null,\n\t\t\n\t\t/**\n\t\t * Permanent ref to the tfoot element - if it exists\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTFoot\": null,\n\t\t\n\t\t/**\n\t\t * Permanent ref to the tbody element\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTBody\": null,\n\t\t\n\t\t/**\n\t\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t\t *  @type node\n\t\t *  @default null\n\t\t */\n\t\t\"nTableWrapper\": null,\n\t\t\n\t\t/**\n\t\t * Indicate if when using server-side processing the loading of data \n\t\t * should be deferred until the second draw.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDeferLoading\": false,\n\t\t\n\t\t/**\n\t\t * Indicate if all required information has been read in\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bInitialised\": false,\n\t\t\n\t\t/**\n\t\t * Information about open rows. Each object in the array has the parameters\n\t\t * 'nTr' and 'nParent'\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoOpenRows\": [],\n\t\t\n\t\t/**\n\t\t * Dictate the positioning of DataTables' control elements - see\n\t\t * {@link DataTable.model.oInit.sDom}.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sDom\": null,\n\t\t\n\t\t/**\n\t\t * Which type of pagination should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string \n\t\t *  @default two_button\n\t\t */\n\t\t\"sPaginationType\": \"two_button\",\n\t\t\n\t\t/**\n\t\t * The cookie duration (for bStateSave) in seconds.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iCookieDuration\": 0,\n\t\t\n\t\t/**\n\t\t * The cookie name prefix.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default <i>Empty string</i>\n\t\t */\n\t\t\"sCookiePrefix\": \"\",\n\t\t\n\t\t/**\n\t\t * Callback function for cookie creation.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t *  @default null\n\t\t */\n\t\t\"fnCookieCallback\": null,\n\t\t\n\t\t/**\n\t\t * Array of callback functions for state saving. Each array element is an \n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t\t *       and the JSON string to save that has been thus far created. Returns\n\t\t *       a JSON string to be inserted into a json object \n\t\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateSave\": [],\n\t\t\n\t\t/**\n\t\t * Array of callback functions for state loading. Each array element is an \n\t\t * object with the following parameters:\n\t\t *   <ul>\n\t\t *     <li>function:fn - function to call. Takes two parameters, oSettings \n\t\t *       and the object stored. May return false to cancel state loading</li>\n\t\t *     <li>string:sName - name of callback</li>\n\t\t *   </ul>\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoStateLoad\": [],\n\t\t\n\t\t/**\n\t\t * State that was loaded from the cookie. Useful for back reference\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oLoadedState\": null,\n\t\t\n\t\t/**\n\t\t * Source url for AJAX data for the table.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sAjaxSource\": null,\n\t\t\n\t\t/**\n\t\t * Property from a given object from which to read the table data from. This\n\t\t * can be an empty string (when not server-side processing), in which case \n\t\t * it is  assumed an an array is given directly.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sAjaxDataProp\": null,\n\t\t\n\t\t/**\n\t\t * Note if draw should be blocked while getting data\n\t\t *  @type boolean\n\t\t *  @default true\n\t\t */\n\t\t\"bAjaxDataGet\": true,\n\t\t\n\t\t/**\n\t\t * The last jQuery XHR object that was used for server-side data gathering. \n\t\t * This can be used for working with the XHR information in one of the \n\t\t * callbacks\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"jqXHR\": null,\n\t\t\n\t\t/**\n\t\t * Function to get the server-side data.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnServerData\": null,\n\t\t\n\t\t/**\n\t\t * Functions which are called prior to sending an Ajax request so extra \n\t\t * parameters can easily be sent to the server\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoServerParams\": [],\n\t\t\n\t\t/**\n\t\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if \n\t\t * required).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type string\n\t\t */\n\t\t\"sServerMethod\": null,\n\t\t\n\t\t/**\n\t\t * Format numbers for display.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type function\n\t\t */\n\t\t\"fnFormatNumber\": null,\n\t\t\n\t\t/**\n\t\t * List of options that can be used for the user selectable length menu.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aLengthMenu\": null,\n\t\t\n\t\t/**\n\t\t * Counter for the draws that the table does. Also used as a tracker for\n\t\t * server-side processing\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"iDraw\": 0,\n\t\t\n\t\t/**\n\t\t * Indicate if a redraw is being done - useful for Ajax\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t */\n\t\t\"bDrawing\": false,\n\t\t\n\t\t/**\n\t\t * Draw index (iDraw) of the last error when parsing the returned data\n\t\t *  @type int\n\t\t *  @default -1\n\t\t */\n\t\t\"iDrawError\": -1,\n\t\t\n\t\t/**\n\t\t * Paging display length\n\t\t *  @type int\n\t\t *  @default 10\n\t\t */\n\t\t\"_iDisplayLength\": 10,\n\t\n\t\t/**\n\t\t * Paging start point - aiDisplay index\n\t\t *  @type int\n\t\t *  @default 0\n\t\t */\n\t\t\"_iDisplayStart\": 0,\n\t\n\t\t/**\n\t\t * Paging end point - aiDisplay index. Use fnDisplayEnd rather than\n\t\t * this property to get the end point\n\t\t *  @type int\n\t\t *  @default 10\n\t\t *  @private\n\t\t */\n\t\t\"_iDisplayEnd\": 10,\n\t\t\n\t\t/**\n\t\t * Server-side processing - number of records in the result set\n\t\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type int\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsTotal\": 0,\n\t\n\t\t/**\n\t\t * Server-side processing - number of records in the current display set\n\t\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t\t * this property to get the value of the number of records, regardless of\n\t\t * the server-side processing setting.\n\t\t *  @type boolean\n\t\t *  @default 0\n\t\t *  @private\n\t\t */\n\t\t\"_iRecordsDisplay\": 0,\n\t\t\n\t\t/**\n\t\t * Flag to indicate if jQuery UI marking and classes should be used.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bJUI\": null,\n\t\t\n\t\t/**\n\t\t * The classes to use for the table\n\t\t *  @type object\n\t\t *  @default {}\n\t\t */\n\t\t\"oClasses\": {},\n\t\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw \n\t\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bFiltered\": false,\n\t\t\n\t\t/**\n\t\t * Flag attached to the settings object so you can check in the draw \n\t\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t\t * events.\n\t\t *  @type boolean\n\t\t *  @default false\n\t\t *  @deprecated\n\t\t */\n\t\t\"bSorted\": false,\n\t\t\n\t\t/**\n\t\t * Indicate that if multiple rows are in the header and there is more than \n\t\t * one unique cell per column, if the top one (true) or bottom one (false) \n\t\t * should be used for sorting / title by DataTables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @type boolean\n\t\t */\n\t\t\"bSortCellsTop\": null,\n\t\t\n\t\t/**\n\t\t * Initialisation object that is used for the table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInit\": null,\n\t\t\n\t\t/**\n\t\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t\t * destroy so they can clean up markup and events.\n\t\t *  @type array\n\t\t *  @default []\n\t\t */\n\t\t\"aoDestroyCallback\": [],\n\t\n\t\t\n\t\t/**\n\t\t * Get the number of records in the current record set, before filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsTotal\": function ()\n\t\t{\n\t\t\tif ( this.oFeatures.bServerSide ) {\n\t\t\t\treturn parseInt(this._iRecordsTotal, 10);\n\t\t\t} else {\n\t\t\t\treturn this.aiDisplayMaster.length;\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Get the number of records in the current record set, after filtering\n\t\t *  @type function\n\t\t */\n\t\t\"fnRecordsDisplay\": function ()\n\t\t{\n\t\t\tif ( this.oFeatures.bServerSide ) {\n\t\t\t\treturn parseInt(this._iRecordsDisplay, 10);\n\t\t\t} else {\n\t\t\t\treturn this.aiDisplay.length;\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Set the display end point - aiDisplay index\n\t\t *  @type function\n\t\t *  @todo Should do away with _iDisplayEnd and calculate it on-the-fly here\n\t\t */\n\t\t\"fnDisplayEnd\": function ()\n\t\t{\n\t\t\tif ( this.oFeatures.bServerSide ) {\n\t\t\t\tif ( this.oFeatures.bPaginate === false || this._iDisplayLength == -1 ) {\n\t\t\t\t\treturn this._iDisplayStart+this.aiDisplay.length;\n\t\t\t\t} else {\n\t\t\t\t\treturn Math.min( this._iDisplayStart+this._iDisplayLength, \n\t\t\t\t\t\tthis._iRecordsDisplay );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this._iDisplayEnd;\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * The DataTables object for this table\n\t\t *  @type object\n\t\t *  @default null\n\t\t */\n\t\t\"oInstance\": null,\n\t\t\n\t\t/**\n\t\t * Unique identifier for each instance of the DataTables object. If there\n\t\t * is an ID on the table node, then it takes that value, otherwise an\n\t\t * incrementing internal counter is used.\n\t\t *  @type string\n\t\t *  @default null\n\t\t */\n\t\t\"sInstance\": null,\n\t\n\t\t/**\n\t\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t\t * keyboard navigation of the table and its controls.\n\t\t */\n\t\t\"iTabIndex\": 0,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollHead\": null,\n\t\n\t\t/**\n\t\t * DIV container for the footer scrolling table if scrolling\n\t\t */\n\t\t\"nScrollFoot\": null\n\t};\n\n\t/**\n\t * Extension object for DataTables that is used to provide all extension options.\n\t * \n\t * Note that the <i>DataTable.ext</i> object is available through\n\t * <i>jQuery.fn.dataTable.ext</i> where it may be accessed and manipulated. It is\n\t * also aliased to <i>jQuery.fn.dataTableExt</i> for historic reasons.\n\t *  @namespace\n\t *  @extends DataTable.models.ext\n\t */\n\tDataTable.ext = $.extend( true, {}, DataTable.models.ext );\n\t\n\t$.extend( DataTable.ext.oStdClasses, {\n\t\t\"sTable\": \"dataTable\",\n\t\n\t\t/* Two buttons buttons */\n\t\t\"sPagePrevEnabled\": \"paginate_enabled_previous\",\n\t\t\"sPagePrevDisabled\": \"paginate_disabled_previous\",\n\t\t\"sPageNextEnabled\": \"paginate_enabled_next\",\n\t\t\"sPageNextDisabled\": \"paginate_disabled_next\",\n\t\t\"sPageJUINext\": \"\",\n\t\t\"sPageJUIPrev\": \"\",\n\t\t\n\t\t/* Full numbers paging buttons */\n\t\t\"sPageButton\": \"paginate_button\",\n\t\t\"sPageButtonActive\": \"paginate_active\",\n\t\t\"sPageButtonStaticDisabled\": \"paginate_button paginate_button_disabled\",\n\t\t\"sPageFirst\": \"first\",\n\t\t\"sPagePrevious\": \"previous\",\n\t\t\"sPageNext\": \"next\",\n\t\t\"sPageLast\": \"last\",\n\t\t\n\t\t/* Striping classes */\n\t\t\"sStripeOdd\": \"odd\",\n\t\t\"sStripeEven\": \"even\",\n\t\t\n\t\t/* Empty row */\n\t\t\"sRowEmpty\": \"dataTables_empty\",\n\t\t\n\t\t/* Features */\n\t\t\"sWrapper\": \"dataTables_wrapper\",\n\t\t\"sFilter\": \"dataTables_filter\",\n\t\t\"sInfo\": \"dataTables_info\",\n\t\t\"sPaging\": \"dataTables_paginate paging_\", /* Note that the type is postfixed */\n\t\t\"sLength\": \"dataTables_length\",\n\t\t\"sProcessing\": \"dataTables_processing\",\n\t\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"sorting_asc\",\n\t\t\"sSortDesc\": \"sorting_desc\",\n\t\t\"sSortable\": \"sorting\", /* Sortable in both directions */\n\t\t\"sSortableAsc\": \"sorting_asc_disabled\",\n\t\t\"sSortableDesc\": \"sorting_desc_disabled\",\n\t\t\"sSortableNone\": \"sorting_disabled\",\n\t\t\"sSortColumn\": \"sorting_\", /* Note that an int is postfixed for the sorting order */\n\t\t\"sSortJUIAsc\": \"\",\n\t\t\"sSortJUIDesc\": \"\",\n\t\t\"sSortJUI\": \"\",\n\t\t\"sSortJUIAscAllowed\": \"\",\n\t\t\"sSortJUIDescAllowed\": \"\",\n\t\t\"sSortJUIWrapper\": \"\",\n\t\t\"sSortIcon\": \"\",\n\t\t\n\t\t/* Scrolling */\n\t\t\"sScrollWrapper\": \"dataTables_scroll\",\n\t\t\"sScrollHead\": \"dataTables_scrollHead\",\n\t\t\"sScrollHeadInner\": \"dataTables_scrollHeadInner\",\n\t\t\"sScrollBody\": \"dataTables_scrollBody\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot\",\n\t\t\"sScrollFootInner\": \"dataTables_scrollFootInner\",\n\t\t\n\t\t/* Misc */\n\t\t\"sFooterTH\": \"\",\n\t\t\"sJUIHeader\": \"\",\n\t\t\"sJUIFooter\": \"\"\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.oJUIClasses, DataTable.ext.oStdClasses, {\n\t\t/* Two buttons buttons */\n\t\t\"sPagePrevEnabled\": \"fg-button ui-button ui-state-default ui-corner-left\",\n\t\t\"sPagePrevDisabled\": \"fg-button ui-button ui-state-default ui-corner-left ui-state-disabled\",\n\t\t\"sPageNextEnabled\": \"fg-button ui-button ui-state-default ui-corner-right\",\n\t\t\"sPageNextDisabled\": \"fg-button ui-button ui-state-default ui-corner-right ui-state-disabled\",\n\t\t\"sPageJUINext\": \"ui-icon ui-icon-circle-arrow-e\",\n\t\t\"sPageJUIPrev\": \"ui-icon ui-icon-circle-arrow-w\",\n\t\t\n\t\t/* Full numbers paging buttons */\n\t\t\"sPageButton\": \"fg-button ui-button ui-state-default\",\n\t\t\"sPageButtonActive\": \"fg-button ui-button ui-state-default ui-state-disabled\",\n\t\t\"sPageButtonStaticDisabled\": \"fg-button ui-button ui-state-default ui-state-disabled\",\n\t\t\"sPageFirst\": \"first ui-corner-tl ui-corner-bl\",\n\t\t\"sPageLast\": \"last ui-corner-tr ui-corner-br\",\n\t\t\n\t\t/* Features */\n\t\t\"sPaging\": \"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi \"+\n\t\t\t\"ui-buttonset-multi paging_\", /* Note that the type is postfixed */\n\t\t\n\t\t/* Sorting */\n\t\t\"sSortAsc\": \"ui-state-default\",\n\t\t\"sSortDesc\": \"ui-state-default\",\n\t\t\"sSortable\": \"ui-state-default\",\n\t\t\"sSortableAsc\": \"ui-state-default\",\n\t\t\"sSortableDesc\": \"ui-state-default\",\n\t\t\"sSortableNone\": \"ui-state-default\",\n\t\t\"sSortJUIAsc\": \"css_right ui-icon ui-icon-triangle-1-n\",\n\t\t\"sSortJUIDesc\": \"css_right ui-icon ui-icon-triangle-1-s\",\n\t\t\"sSortJUI\": \"css_right ui-icon ui-icon-carat-2-n-s\",\n\t\t\"sSortJUIAscAllowed\": \"css_right ui-icon ui-icon-carat-1-n\",\n\t\t\"sSortJUIDescAllowed\": \"css_right ui-icon ui-icon-carat-1-s\",\n\t\t\"sSortJUIWrapper\": \"DataTables_sort_wrapper\",\n\t\t\"sSortIcon\": \"DataTables_sort_icon\",\n\t\t\n\t\t/* Scrolling */\n\t\t\"sScrollHead\": \"dataTables_scrollHead ui-state-default\",\n\t\t\"sScrollFoot\": \"dataTables_scrollFoot ui-state-default\",\n\t\t\n\t\t/* Misc */\n\t\t\"sFooterTH\": \"ui-state-default\",\n\t\t\"sJUIHeader\": \"fg-toolbar ui-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix\",\n\t\t\"sJUIFooter\": \"fg-toolbar ui-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix\"\n\t} );\n\t\n\t/*\n\t * Variable: oPagination\n\t * Purpose:  \n\t * Scope:    jQuery.fn.dataTableExt\n\t */\n\t$.extend( DataTable.ext.oPagination, {\n\t\t/*\n\t\t * Variable: two_button\n\t\t * Purpose:  Standard two button (forward/back) pagination\n\t\t * Scope:    jQuery.fn.dataTableExt.oPagination\n\t\t */\n\t\t\"two_button\": {\n\t\t\t/*\n\t\t\t * Function: oPagination.two_button.fnInit\n\t\t\t * Purpose:  Initialise dom elements required for pagination with forward/back buttons only\n\t\t\t * Returns:  -\n\t\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t\t *           node:nPaging - the DIV which contains this pagination control\n\t\t\t *           function:fnCallbackDraw - draw function which must be called on update\n\t\t\t */\n\t\t\t\"fnInit\": function ( oSettings, nPaging, fnCallbackDraw )\n\t\t\t{\n\t\t\t\tvar oLang = oSettings.oLanguage.oPaginate;\n\t\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\tvar fnClickHandler = function ( e ) {\n\t\t\t\t\tif ( oSettings.oApi._fnPageChange( oSettings, e.data.action ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tfnCallbackDraw( oSettings );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\tvar sAppend = (!oSettings.bJUI) ?\n\t\t\t\t\t'<a class=\"'+oSettings.oClasses.sPagePrevDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\">'+oLang.sPrevious+'</a>'+\n\t\t\t\t\t'<a class=\"'+oSettings.oClasses.sPageNextDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\">'+oLang.sNext+'</a>'\n\t\t\t\t\t:\n\t\t\t\t\t'<a class=\"'+oSettings.oClasses.sPagePrevDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\"><span class=\"'+oSettings.oClasses.sPageJUIPrev+'\"></span></a>'+\n\t\t\t\t\t'<a class=\"'+oSettings.oClasses.sPageNextDisabled+'\" tabindex=\"'+oSettings.iTabIndex+'\" role=\"button\"><span class=\"'+oSettings.oClasses.sPageJUINext+'\"></span></a>';\n\t\t\t\t$(nPaging).append( sAppend );\n\t\t\t\t\n\t\t\t\tvar els = $('a', nPaging);\n\t\t\t\tvar nPrevious = els[0],\n\t\t\t\t\tnNext = els[1];\n\t\t\t\t\n\t\t\t\toSettings.oApi._fnBindAction( nPrevious, {action: \"previous\"}, fnClickHandler );\n\t\t\t\toSettings.oApi._fnBindAction( nNext,     {action: \"next\"},     fnClickHandler );\n\t\t\t\t\n\t\t\t\t/* ID the first elements only */\n\t\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t\t{\n\t\t\t\t\tnPaging.id = oSettings.sTableId+'_paginate';\n\t\t\t\t\tnPrevious.id = oSettings.sTableId+'_previous';\n\t\t\t\t\tnNext.id = oSettings.sTableId+'_next';\n\t\n\t\t\t\t\tnPrevious.setAttribute('aria-controls', oSettings.sTableId);\n\t\t\t\t\tnNext.setAttribute('aria-controls', oSettings.sTableId);\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/*\n\t\t\t * Function: oPagination.two_button.fnUpdate\n\t\t\t * Purpose:  Update the two button pagination at the end of the draw\n\t\t\t * Returns:  -\n\t\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t\t *           function:fnCallbackDraw - draw function to call on page change\n\t\t\t */\n\t\t\t\"fnUpdate\": function ( oSettings, fnCallbackDraw )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\tvar an = oSettings.aanFeatures.p;\n\t\t\t\tvar nNode;\n\t\n\t\t\t\t/* Loop over each instance of the pager */\n\t\t\t\tfor ( var i=0, iLen=an.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tnNode = an[i].firstChild;\n\t\t\t\t\tif ( nNode )\n\t\t\t\t\t{\n\t\t\t\t\t\t/* Previous page */\n\t\t\t\t\t\tnNode.className = ( oSettings._iDisplayStart === 0 ) ?\n\t\t\t\t\t\t    oClasses.sPagePrevDisabled : oClasses.sPagePrevEnabled;\n\t\t\t\t\t\t    \n\t\t\t\t\t\t/* Next page */\n\t\t\t\t\t\tnNode = nNode.nextSibling;\n\t\t\t\t\t\tnNode.className = ( oSettings.fnDisplayEnd() == oSettings.fnRecordsDisplay() ) ?\n\t\t\t\t\t\t    oClasses.sPageNextDisabled : oClasses.sPageNextEnabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\n\t\t\n\t\t/*\n\t\t * Variable: iFullNumbersShowPages\n\t\t * Purpose:  Change the number of pages which can be seen\n\t\t * Scope:    jQuery.fn.dataTableExt.oPagination\n\t\t */\n\t\t\"iFullNumbersShowPages\": 5,\n\t\t\n\t\t/*\n\t\t * Variable: full_numbers\n\t\t * Purpose:  Full numbers pagination\n\t\t * Scope:    jQuery.fn.dataTableExt.oPagination\n\t\t */\n\t\t\"full_numbers\": {\n\t\t\t/*\n\t\t\t * Function: oPagination.full_numbers.fnInit\n\t\t\t * Purpose:  Initialise dom elements required for pagination with a list of the pages\n\t\t\t * Returns:  -\n\t\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t\t *           node:nPaging - the DIV which contains this pagination control\n\t\t\t *           function:fnCallbackDraw - draw function which must be called on update\n\t\t\t */\n\t\t\t\"fnInit\": function ( oSettings, nPaging, fnCallbackDraw )\n\t\t\t{\n\t\t\t\tvar oLang = oSettings.oLanguage.oPaginate;\n\t\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\tvar fnClickHandler = function ( e ) {\n\t\t\t\t\tif ( oSettings.oApi._fnPageChange( oSettings, e.data.action ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tfnCallbackDraw( oSettings );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t$(nPaging).append(\n\t\t\t\t\t'<a  tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPageFirst+'\">'+oLang.sFirst+'</a>'+\n\t\t\t\t\t'<a  tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPagePrevious+'\">'+oLang.sPrevious+'</a>'+\n\t\t\t\t\t'<span></span>'+\n\t\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPageNext+'\">'+oLang.sNext+'</a>'+\n\t\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+\" \"+oClasses.sPageLast+'\">'+oLang.sLast+'</a>'\n\t\t\t\t);\n\t\t\t\tvar els = $('a', nPaging);\n\t\t\t\tvar nFirst = els[0],\n\t\t\t\t\tnPrev = els[1],\n\t\t\t\t\tnNext = els[2],\n\t\t\t\t\tnLast = els[3];\n\t\t\t\t\n\t\t\t\toSettings.oApi._fnBindAction( nFirst, {action: \"first\"},    fnClickHandler );\n\t\t\t\toSettings.oApi._fnBindAction( nPrev,  {action: \"previous\"}, fnClickHandler );\n\t\t\t\toSettings.oApi._fnBindAction( nNext,  {action: \"next\"},     fnClickHandler );\n\t\t\t\toSettings.oApi._fnBindAction( nLast,  {action: \"last\"},     fnClickHandler );\n\t\t\t\t\n\t\t\t\t/* ID the first elements only */\n\t\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t\t{\n\t\t\t\t\tnPaging.id = oSettings.sTableId+'_paginate';\n\t\t\t\t\tnFirst.id =oSettings.sTableId+'_first';\n\t\t\t\t\tnPrev.id =oSettings.sTableId+'_previous';\n\t\t\t\t\tnNext.id =oSettings.sTableId+'_next';\n\t\t\t\t\tnLast.id =oSettings.sTableId+'_last';\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t/*\n\t\t\t * Function: oPagination.full_numbers.fnUpdate\n\t\t\t * Purpose:  Update the list of page buttons shows\n\t\t\t * Returns:  -\n\t\t\t * Inputs:   object:oSettings - dataTables settings object\n\t\t\t *           function:fnCallbackDraw - draw function to call on page change\n\t\t\t */\n\t\t\t\"fnUpdate\": function ( oSettings, fnCallbackDraw )\n\t\t\t{\n\t\t\t\tif ( !oSettings.aanFeatures.p )\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar iPageCount = DataTable.ext.oPagination.iFullNumbersShowPages;\n\t\t\t\tvar iPageCountHalf = Math.floor(iPageCount / 2);\n\t\t\t\tvar iPages = Math.ceil((oSettings.fnRecordsDisplay()) / oSettings._iDisplayLength);\n\t\t\t\tvar iCurrentPage = Math.ceil(oSettings._iDisplayStart / oSettings._iDisplayLength) + 1;\n\t\t\t\tvar sList = \"\";\n\t\t\t\tvar iStartButton, iEndButton, i, iLen;\n\t\t\t\tvar oClasses = oSettings.oClasses;\n\t\t\t\tvar anButtons, anStatic, nPaginateList, nNode;\n\t\t\t\tvar an = oSettings.aanFeatures.p;\n\t\t\t\tvar fnBind = function (j) {\n\t\t\t\t\toSettings.oApi._fnBindAction( this, {\"page\": j+iStartButton-1}, function(e) {\n\t\t\t\t\t\t/* Use the information in the element to jump to the required page */\n\t\t\t\t\t\toSettings.oApi._fnPageChange( oSettings, e.data.page );\n\t\t\t\t\t\tfnCallbackDraw( oSettings );\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} );\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t/* Pages calculation */\n\t\t\t\tif ( oSettings._iDisplayLength === -1 )\n\t\t\t\t{\n\t\t\t\t\tiStartButton = 1;\n\t\t\t\t\tiEndButton = 1;\n\t\t\t\t\tiCurrentPage = 1;\n\t\t\t\t}\n\t\t\t\telse if (iPages < iPageCount)\n\t\t\t\t{\n\t\t\t\t\tiStartButton = 1;\n\t\t\t\t\tiEndButton = iPages;\n\t\t\t\t}\n\t\t\t\telse if (iCurrentPage <= iPageCountHalf)\n\t\t\t\t{\n\t\t\t\t\tiStartButton = 1;\n\t\t\t\t\tiEndButton = iPageCount;\n\t\t\t\t}\n\t\t\t\telse if (iCurrentPage >= (iPages - iPageCountHalf))\n\t\t\t\t{\n\t\t\t\t\tiStartButton = iPages - iPageCount + 1;\n\t\t\t\t\tiEndButton = iPages;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tiStartButton = iCurrentPage - Math.ceil(iPageCount / 2) + 1;\n\t\t\t\t\tiEndButton = iStartButton + iPageCount - 1;\n\t\t\t\t}\n\t\n\t\t\t\t\n\t\t\t\t/* Build the dynamic list */\n\t\t\t\tfor ( i=iStartButton ; i<=iEndButton ; i++ )\n\t\t\t\t{\n\t\t\t\t\tsList += (iCurrentPage !== i) ?\n\t\t\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButton+'\">'+oSettings.fnFormatNumber(i)+'</a>' :\n\t\t\t\t\t\t'<a tabindex=\"'+oSettings.iTabIndex+'\" class=\"'+oClasses.sPageButtonActive+'\">'+oSettings.fnFormatNumber(i)+'</a>';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Loop over each instance of the pager */\n\t\t\t\tfor ( i=0, iLen=an.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tnNode = an[i];\n\t\t\t\t\tif ( !nNode.hasChildNodes() )\n\t\t\t\t\t{\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t/* Build up the dynamic list first - html and listeners */\n\t\t\t\t\t$('span:eq(0)', nNode)\n\t\t\t\t\t\t.html( sList )\n\t\t\t\t\t\t.children('a').each( fnBind );\n\t\t\t\t\t\n\t\t\t\t\t/* Update the permanent button's classes */\n\t\t\t\t\tanButtons = nNode.getElementsByTagName('a');\n\t\t\t\t\tanStatic = [\n\t\t\t\t\t\tanButtons[0], anButtons[1], \n\t\t\t\t\t\tanButtons[anButtons.length-2], anButtons[anButtons.length-1]\n\t\t\t\t\t];\n\t\n\t\t\t\t\t$(anStatic).removeClass( oClasses.sPageButton+\" \"+oClasses.sPageButtonActive+\" \"+oClasses.sPageButtonStaticDisabled );\n\t\t\t\t\t$([anStatic[0], anStatic[1]]).addClass( \n\t\t\t\t\t\t(iCurrentPage==1) ?\n\t\t\t\t\t\t\toClasses.sPageButtonStaticDisabled :\n\t\t\t\t\t\t\toClasses.sPageButton\n\t\t\t\t\t);\n\t\t\t\t\t$([anStatic[2], anStatic[3]]).addClass(\n\t\t\t\t\t\t(iPages===0 || iCurrentPage===iPages || oSettings._iDisplayLength===-1) ?\n\t\t\t\t\t\t\toClasses.sPageButtonStaticDisabled :\n\t\t\t\t\t\t\toClasses.sPageButton\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\t\n\t$.extend( DataTable.ext.oSort, {\n\t\t/*\n\t\t * text sorting\n\t\t */\n\t\t\"string-pre\": function ( a )\n\t\t{\n\t\t\tif ( typeof a != 'string' ) {\n\t\t\t\ta = (a !== null && a.toString) ? a.toString() : '';\n\t\t\t}\n\t\t\treturn a.toLowerCase();\n\t\t},\n\t\n\t\t\"string-asc\": function ( x, y )\n\t\t{\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\t\n\t\t\"string-desc\": function ( x, y )\n\t\t{\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t},\n\t\t\n\t\t\n\t\t/*\n\t\t * html sorting (ignore html tags)\n\t\t */\n\t\t\"html-pre\": function ( a )\n\t\t{\n\t\t\treturn a.replace( /<.*?>/g, \"\" ).toLowerCase();\n\t\t},\n\t\t\n\t\t\"html-asc\": function ( x, y )\n\t\t{\n\t\t\treturn ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t},\n\t\t\n\t\t\"html-desc\": function ( x, y )\n\t\t{\n\t\t\treturn ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t},\n\t\t\n\t\t\n\t\t/*\n\t\t * date sorting\n\t\t */\n\t\t\"date-pre\": function ( a )\n\t\t{\n\t\t\tvar x = Date.parse( a );\n\t\t\t\n\t\t\tif ( isNaN(x) || x===\"\" )\n\t\t\t{\n\t\t\t\tx = Date.parse( \"01/01/1970 00:00:00\" );\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\t\n\t\t\"date-asc\": function ( x, y )\n\t\t{\n\t\t\treturn x - y;\n\t\t},\n\t\t\n\t\t\"date-desc\": function ( x, y )\n\t\t{\n\t\t\treturn y - x;\n\t\t},\n\t\t\n\t\t\n\t\t/*\n\t\t * numerical sorting\n\t\t */\n\t\t\"numeric-pre\": function ( a )\n\t\t{\n\t\t\treturn (a==\"-\" || a===\"\") ? 0 : a*1;\n\t\t},\n\t\n\t\t\"numeric-asc\": function ( x, y )\n\t\t{\n\t\t\treturn x - y;\n\t\t},\n\t\t\n\t\t\"numeric-desc\": function ( x, y )\n\t\t{\n\t\t\treturn y - x;\n\t\t}\n\t} );\n\t\n\t\n\t$.extend( DataTable.ext.aTypes, [\n\t\t/*\n\t\t * Function: -\n\t\t * Purpose:  Check to see if a string is numeric\n\t\t * Returns:  string:'numeric' or null\n\t\t * Inputs:   mixed:sText - string to check\n\t\t */\n\t\tfunction ( sData )\n\t\t{\n\t\t\t/* Allow zero length strings as a number */\n\t\t\tif ( typeof sData === 'number' )\n\t\t\t{\n\t\t\t\treturn 'numeric';\n\t\t\t}\n\t\t\telse if ( typeof sData !== 'string' )\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\tvar sValidFirstChars = \"0123456789-\";\n\t\t\tvar sValidChars = \"0123456789.\";\n\t\t\tvar Char;\n\t\t\tvar bDecimal = false;\n\t\t\t\n\t\t\t/* Check for a valid first char (no period and allow negatives) */\n\t\t\tChar = sData.charAt(0); \n\t\t\tif (sValidFirstChars.indexOf(Char) == -1) \n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\t/* Check all the other characters are valid */\n\t\t\tfor ( var i=1 ; i<sData.length ; i++ ) \n\t\t\t{\n\t\t\t\tChar = sData.charAt(i); \n\t\t\t\tif (sValidChars.indexOf(Char) == -1) \n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t/* Only allowed one decimal place... */\n\t\t\t\tif ( Char == \".\" )\n\t\t\t\t{\n\t\t\t\t\tif ( bDecimal )\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tbDecimal = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn 'numeric';\n\t\t},\n\t\t\n\t\t/*\n\t\t * Function: -\n\t\t * Purpose:  Check to see if a string is actually a formatted date\n\t\t * Returns:  string:'date' or null\n\t\t * Inputs:   string:sText - string to check\n\t\t */\n\t\tfunction ( sData )\n\t\t{\n\t\t\tvar iParse = Date.parse(sData);\n\t\t\tif ( (iParse !== null && !isNaN(iParse)) || (typeof sData === 'string' && sData.length === 0) )\n\t\t\t{\n\t\t\t\treturn 'date';\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t\n\t\t/*\n\t\t * Function: -\n\t\t * Purpose:  Check to see if a string should be treated as an HTML string\n\t\t * Returns:  string:'html' or null\n\t\t * Inputs:   string:sText - string to check\n\t\t */\n\t\tfunction ( sData )\n\t\t{\n\t\t\tif ( typeof sData === 'string' && sData.indexOf('<') != -1 && sData.indexOf('>') != -1 )\n\t\t\t{\n\t\t\t\treturn 'html';\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t] );\n\t\n\n\t// jQuery aliases\n\t$.fn.DataTable = DataTable;\n\t$.fn.dataTable = DataTable;\n\t$.fn.dataTableSettings = DataTable.settings;\n\t$.fn.dataTableExt = DataTable.ext;\n\n\n\t// Information about events fired by DataTables - for documentation.\n\t/**\n\t * Draw event, fired whenever the table is redrawn on the page, at the same point as\n\t * fnDrawCallback. This may be useful for binding events or performing calculations when\n\t * the table is altered at all.\n\t *  @name DataTable#draw\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Filter event, fired when the filtering applied to the table (using the build in global\n\t * global filter, or column filters) is altered.\n\t *  @name DataTable#filter\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Page change event, fired when the paging of the table is altered.\n\t *  @name DataTable#page\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * Sort event, fired when the sorting applied to the table is altered.\n\t *  @name DataTable#sort\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n\n\t/**\n\t * DataTables initialisation complete event, fired when the table is fully drawn,\n\t * including Ajax data loaded, if Ajax data is required.\n\t *  @name DataTable#init\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The JSON object request from the server - only\n\t *    present if client-side Ajax sourced data is used</li></ol>\n\t */\n\n\t/**\n\t * State save event, fired when the table has changed state a new state save is required.\n\t * This method allows modification of the state saving object prior to actually doing the\n\t * save, including addition or other state properties (for plug-ins) or modification\n\t * of a DataTables core property.\n\t *  @name DataTable#stateSaveParams\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The state information to be saved\n\t */\n\n\t/**\n\t * State load event, fired when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state - allowing modification\n\t * of the saved state is required or loading of state for a plug-in.\n\t *  @name DataTable#stateLoadParams\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * State loaded event, fired when state has been loaded from stored data and the settings\n\t * object has been modified by the loaded data.\n\t *  @name DataTable#stateLoaded\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {object} json The saved state information\n\t */\n\n\t/**\n\t * Processing event, fired when DataTables is doing some kind of processing (be it,\n\t * sort, filter or anything else). Can be used to indicate to the end user that\n\t * there is something happening, or that something has finished.\n\t *  @name DataTable#processing\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} oSettings DataTables settings object\n\t *  @param {boolean} bShow Flag for if DataTables is doing processing or not\n\t */\n\n\t/**\n\t * Ajax (XHR) event, fired whenever an Ajax request is completed from a request to \n\t * made to the server for new data (note that this trigger is called in fnServerData,\n\t * if you override fnServerData and which to use this event, you need to trigger it in\n\t * you success function).\n\t *  @name DataTable#xhr\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t *  @param {object} json JSON returned from the server\n\t */\n\n\t/**\n\t * Destroy event, fired when the DataTable is destroyed by calling fnDestroy or passing\n\t * the bDestroy:true parameter in the initialisation object. This can be used to remove\n\t * bound events, added DOM nodes, etc.\n\t *  @name DataTable#destroy\n\t *  @event\n\t *  @param {event} e jQuery event object\n\t *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}\n\t */\n}));\n\n}(window, document));\n\n","//     (c) 2012 Airbnb, Inc.\n//\n//     polyglot.js may be freely distributed under the terms of the BSD\n//     license. For all licensing information, details, and documention:\n//     http://airbnb.github.com/polyglot.js\n//\n//\n// Polyglot.js is an I18n helper library written in JavaScript, made to\n// work both in the browser and in Node. It provides a simple solution for\n// interpolation and pluralization, based off of Airbnb's\n// experience adding I18n functionality to its Backbone.js and Node apps.\n//\n// Polylglot is agnostic to your translation backend. It doesn't perform any\n// translation; it simply gives you a way to manage translated phrases from\n// your client- or server-side JavaScript application.\n//\n\n!function(root) {\n  'use strict';\n\n  // ### Polyglot class constructor\n  function Polyglot(options) {\n    options = options || {};\n    this.phrases = options.phrases || {};\n    this.currentLocale = options.locale || 'en';\n  }\n\n  // ### Version\n  Polyglot.VERSION = '0.2.0';\n\n  // ### polyglot.locale([locale])\n  //\n  // Get or set locale. Internally, Polyglot only uses locale for pluralization.\n  Polyglot.prototype.locale = function(newLocale) {\n    if (newLocale) this.currentLocale = newLocale;\n    return this.currentLocale;\n  };\n\n  // ### polyglot.extend(phrases)\n  //\n  // Use `extend` to tell Polyglot how to translate a given key.\n  //\n  //     polyglot.extend({\n  //       \"hello\": \"Hello\",\n  //       \"hello_name\": \"Hello, %{name}\"\n  //     });\n  //\n  // The key can be any string.  Feel free to call `extend` multiple times;\n  // it will override any phrases with the same key, but leave existing phrases\n  // untouched.\n  Polyglot.prototype.extend = function(morePhrases) {\n    for (var key in morePhrases) {\n      if (morePhrases.hasOwnProperty(key)) {\n        this.phrases[key] = morePhrases[key];\n      }\n    }\n  };\n\n  // ### polyglot.clear()\n  //\n  // Clears all phrases. Useful for special cases, such as freeing\n  // up memory if you have lots of phrases but no longer need to\n  // perform any translation. Also used internally by `replace`.\n  Polyglot.prototype.clear = function() {\n    this.phrases = {};\n  };\n\n  // ### polyglot.replace(phrases)\n  //\n  // Completely replace the existing phrases with a new set of phrases.\n  // Normally, just use `extend` to add more phrases, but under certain\n  // circumstances, you may want to make sure no old phrases are lying around.\n  Polyglot.prototype.replace = function(newPhrases) {\n    this.clear();\n    this.extend(newPhrases);\n  };\n\n\n  // ### polyglot.t(key, options)\n  //\n  // The most-used method. Provide a key, and `t` will return the\n  // phrase.\n  //\n  //     polyglot.t(\"hello\");\n  //     => \"Hello\"\n  //\n  // The phrase value is provided first by a call to `polyglot.extend()` or\n  // `polyglot.replace()`.\n  //\n  // Pass in an object as the second argument to perform interpolation.\n  //\n  //     polyglot.t(\"hello_name\", {name: \"Spike\"});\n  //     => \"Hello, Spike\"\n  //\n  // If you like, you can provide a default value in case the phrase is missing.\n  // Use the special option key \"_\" to specify a default.\n  //\n  //     polyglot.t(\"i_like_to_write_in_language\", {\n  //       _: \"I like to write in %{language}.\",\n  //       language: \"JavaScript\"\n  //     });\n  //     => \"I like to write in JavaScript.\"\n  //\n  Polyglot.prototype.t = function(key, options) {\n    var result;\n    options = options || {};\n    var phrase = this.phrases[key] || options._ || '';\n    if (phrase === '') {\n      warn('Missing translation for key: \"'+key+'\"');\n      result = key;\n    } else {\n      options = clone(options);\n      // This allows you to pass an Array, Backbone.Collection, or anything\n      // with a `length` property as the `smart_count` parameter for pluralization.\n      if (options.smart_count != null && options.smart_count.length != null) {\n        options.smart_count = options.smart_count.length;\n      }\n      result = choosePluralForm(phrase, this.currentLocale, options.smart_count);\n      result = interpolate(result, options);\n    }\n    return result;\n  };\n\n\n  // ### polylglot.pluralize(noun, count)\n  //\n  // A shortcut for calling `polyglot.t()` with a special `||||`-delimeted phrase.\n  // Works well for the simple case, like \"1 car\".\n  Polyglot.prototype.pluralize = function(noun, count) {\n    if (count != null && count.length != null) {\n      count = count.length;\n    }\n    var key = pluralizeKey(noun);\n    return this.t(key, {smart_count: count});\n  };\n\n  function pluralizeKey(noun) {\n    return 'shared.pluralize.' + noun;\n  }\n\n  // #### Pluralization methods\n  // The string that separates the different phrase possibilities.\n  var delimeter = '||||';\n\n  // Mapping from pluralization group plural logic.\n  var pluralTypes = {\n    chinese:   function(n) { return 0; },\n    german:    function(n) { return n !== 1 ? 1 : 0; },\n    french:    function(n) { return n > 1 ? 1 : 0; },\n    russian:   function(n) { return n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2; },\n    czech:     function(n) { return (n === 1) ? 0 : (n >= 2 && n <= 4) ? 1 : 2; },\n    polish:    function(n) { return (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2); },\n    icelandic: function(n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; }\n  };\n\n  // Mapping from pluralization group to individual locales.\n  var pluralTypeToLanguages = {\n    chinese:   ['id', 'ja', 'ko', 'ms', 'th', 'tr', 'zh'],\n    german:    ['da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hu', 'it', 'nl', 'no', 'pt', 'sv'],\n    french:    ['fr', 'tl'],\n    russian:   ['hr', 'ru'],\n    czech:     ['cs'],\n    polish:    ['pl'],\n    icelandic: ['is']\n  };\n\n  function langToTypeMap(mapping) {\n    var type, langs, l, ret = {};\n    for (type in mapping) {\n      if (mapping.hasOwnProperty(type)) {\n        langs = mapping[type];\n        for (l in langs) {\n          ret[langs[l]] = type;\n        }\n      }\n    }\n    return ret;\n  }\n\n    // Trim a string.\n  function trim(str){\n    var trimRe = /^\\s+|\\s+$/g;\n    return str.replace(trimRe, '');\n  }\n\n  // Based on a phrase text that contains `n` plural forms separated\n  // by `delimeter`, a `locale`, and a `count`, choose the correct\n  // plural form, or none if `count` is `null`.\n  function choosePluralForm(text, locale, count){\n    var ret, texts, chosenText;\n    if (count != null && text) {\n      texts = text.split(delimeter);\n      chosenText = texts[pluralTypeIndex(locale, count)] || texts[0];\n      ret = trim(chosenText);\n    } else {\n      ret = text;\n    }\n    return ret;\n  }\n\n  function pluralTypeName(locale) {\n    var langToPluralType = langToTypeMap(pluralTypeToLanguages);\n    return langToPluralType[locale] || langToPluralType.en;\n  }\n\n  function pluralTypeIndex(locale, count) {\n    return pluralTypes[pluralTypeName(locale)](count);\n  }\n\n  // ### interpolate\n  //\n  // Does the dirty work. Creates a `RegExp` object for each\n  // interpolation placeholder.\n  function interpolate(phrase, options) {\n    for (var arg in options) {\n      if (arg !== '_' && options.hasOwnProperty(arg)) {\n        // We create a new `RegExp` each time instead of using a more-efficient\n        // string replace so that the same argument can be replaced multiple times\n        // in the same phrase.\n        phrase = phrase.replace(new RegExp('%\\\\{'+arg+'\\\\}', 'g'), options[arg]);\n      }\n    }\n    return phrase;\n  }\n\n  // ### warn\n  //\n  // Provides a warning in the console if a phrase key is missing.\n  function warn(message) {\n    root.console && root.console.warn && root.console.warn('WARNING: ' + message);\n  }\n\n  // ### clone\n  //\n  // Clone an object.\n  function clone(source) {\n    var ret = {};\n    for (var prop in source) {\n      ret[prop] = source[prop];\n    }\n    return ret;\n  }\n\n\n  // Export for Node, attach to `window` for browser.\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Polyglot;\n  } else {\n    root.Polyglot = Polyglot;\n  }\n\n}(this);\n\n"]}