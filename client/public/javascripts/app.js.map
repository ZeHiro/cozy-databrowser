{"version":3,"file":"public/javascripts/app.js","sources":["app/application.coffee","app/collections/doctype_collection.coffee","app/collections/result_collection.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/base_view.coffee","app/lib/view.coffee","app/lib/view_collection.coffee","app/models/doctype_model.coffee","app/models/result_model.coffee","app/router.coffee","app/views/doctype_collection_view.coffee","app/views/doctype_view.coffee","app/views/doctypes_view.coffee","app/views/nav_view.coffee","app/views/result_collection_view.coffee","app/views/result_view.coffee","app/views/search_view.coffee","app/views/templates/doctype.jade","app/views/templates/doctypes.jade","app/views/templates/result.jade","app/views/templates/search.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvjBA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5CA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnDA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzCA;;A,CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A","sourcesContent":["module.exports =\n\n    initialize: ->\n        # Used in inter-app communication\n        #SocketListener = require '../lib/socket_listener'\n\n        # Routing management\n        Router = require 'router'\n        @router = new Router()\n        Backbone.history.start()\n\n        # Makes this object immuable.\n        Object.freeze this if typeof Object.freeze is 'function'","module.exports = class DoctypeCollection extends Backbone.Collection\n\tmodel: require '../models/doctype_model'\n\turl: 'doctypes'","module.exports = class ResultCollection extends Backbone.Collection\n\tmodel: require '../models/result_model'\n\turl: 'search'","app = require 'application'\n\n# The function called from index.html\n$ ->\n    require 'lib/app_helpers'\n\n    app.initialize()","(() ->\n    # IIFE to avoid collisions with other variables\n    (->\n        # Make it safe to do console.log() always.\n        console = window.console = window.console or {}\n        method = undefined\n        dummy = ->\n        methods = ('assert,count,debug,dir,dirxml,error,exception,\n                   group,groupCollapsed,groupEnd,info,log,markTimeline,\n                   profile,profileEnd,time,timeEnd,trace,warn').split ','\n\n        console[method] = console[method] or dummy while method = methods.pop()\n    )()\n)()\n","module.exports = class BaseView extends Backbone.View\n\n    template: ->\n\n    initialize: ->\n\n    getRenderData: ->\n        model: @model?.toJSON()\n\n    render: ->\n        @beforeRender()\n        @$el.html @template(@getRenderData())\n        @afterRender()\n        @\n\n    beforeRender: ->\n\n    afterRender: ->\n\n    destroy: ->\n        @undelegateEvents()\n        @$el.removeData().unbind()\n        @remove()\n        Backbone.View::remove.call @\n","module.exports = class View extends Backbone.View\n\n    template: ->\n\n    initialize: ->\n\n    render: (templateOptions) ->\n        @beforeRender()\n        render =  @template().call null, templateOptions\n        @$el.html render\n        @afterRender()\n\n        @\n\n    beforeRender: ->\n\n    afterRender: ->\n\n    destroy: ->\n        @undelegateEvents()\n        @$el.removeData().unbind()\n        @remove()\n        Backbone.View::remove.call @","BaseView = require 'lib/base_view'\n\n# View that display a collection of subitems\n# used to DRY views\n# Usage : new ViewCollection(collection:collection)\n# Automatically populate itself by creating a itemView for each item\n# in its collection\n\n# can use a template that will be displayed alongside the itemViews\n\n# itemView       : the Backbone.View to be used for items\n# itemViewOptions : the options that will be passed to itemViews\n# collectionEl : the DOM element's selector where the itemViews will\n#                be displayed. Automatically falls back to el if null\n\nmodule.exports = class ViewCollection extends BaseView\n\n    itemview: null\n\n    views: {}\n\n    template: -> ''\n\n    itemViewOptions: ->\n\n    collectionEl: null\n\n\n    # add 'empty' class to view when there is no subview\n    onChange: ->\n        @$el.toggleClass 'empty', _.size(@views) is 0\n\n    # can be overriden if we want to place the subviews somewhere else\n    appendView: (view) ->\n        @$collectionEl.append view.el\n\n    # bind listeners to the collection\n    initialize: ->\n        @count = 0\n        super\n        @views = {}\n        @listenTo @collection, \"reset\",   @onReset\n        @listenTo @collection, \"add\",     @addItem\n        @listenTo @collection, \"remove\",  @removeItem\n\n        if not @collectionEl?\n            collectionEl = el\n\n    # if we have views before a render call, we detach them\n    render: ->\n        view.$el.detach() for id, view of @views\n        super\n\n    # after render, we reattach the views\n    afterRender: ->\n        @$collectionEl = $(@collectionEl)\n        @appendView view.$el for id, view of @views\n        @onReset @collection\n        @onChange @views\n\n    # destroy all sub views before remove\n    remove: ->\n        @onReset []\n        super\n\n    # event listener for reset\n    onReset: (newcollection) ->\n        view.remove() for id, view of @views\n        newcollection.forEach @addItem\n\n    # event listeners for add\n    addItem: (model) =>\n        @count++\n        model.set(\"count\", @count)\n        options = _.extend {}, {model: model}, @itemViewOptions(model)\n        view = new @itemview(options)\n        @views[model.cid] = view.render()\n        @appendView view\n        @onChange @views\n\n    # event listeners for remove\n    removeItem: (model) =>\n        @views[model.cid].remove()\n        delete @views[model.cid]\n\n        @onChange @views","module.exports = class DoctypeModel extends Backbone.Model\n\trootUrl: \"doctypes\"","module.exports = class ResultModel extends Backbone.Model\n\trootUrl: \"search\"\n","NavView = require 'views/nav_view'\nDoctypesView = require 'views/doctypes_view'\nDoctypeCollectionView = require 'views/doctype_collection_view'\nSearchView = require 'views/search_view'\nResultCollectionView = require 'views/result_collection_view'\n\nmodule.exports = class Router extends Backbone.Router\n    \n    routes:\n        '': 'doctypes'\n        'doctypes' : 'doctypes'\n        'search' : 'search'\n        'search/all/:doctype' : 'searchAllByDoctype'\n\n    redirectToDoctypes: ->\n        this.navigate(\"/doctypes\", true)\n\n    doctypes: ->\n        navView = new NavView()\n        doctypesView = new DoctypesView()\n        doctypesView.render()\t\n        dcView = new DoctypeCollectionView()\n        dcView.render()\n\n    search: ->\n        navView = new NavView()\n        searchView = new SearchView()\n        searchView.render()\n        rcView = new ResultCollectionView()\n        rcView.render()\n\n    searchAllByDoctype : (doctype) ->\n        navView = new NavView()\n        options = {}\n        if doctype?\n            options['range'] = 'all'\n            options['docType'] = doctype\n        searchView = new SearchView()\n        searchView.render()\n        rcView = new ResultCollectionView(options)\n        rcView.render()","ViewCollection = require '../lib/view_collection'\nDoctypeCollection = require '../collections/doctype_collection'\nDoctypeView = require './doctype_view'\n\nmodule.exports = class DoctypeCollectionView extends ViewCollection\n\t\n\titemview: DoctypeView\n\tcollection: new DoctypeCollection()\n\n\tinitialize: ->\n\t\t@collectionEl = '#doctypes-list'\n\t\tsuper\n\t\t@collection.fetch()\t\t\n\t\t@views = {}\n\t\t@listenTo @collection, \"reset\",   @onReset","View = require './../lib/view'\n\nmodule.exports = class DoctypeView extends View\n\n    tagName: 'tr'\n    className: 'doctype-list-item'\n\n    render: ->\n        super \n            name: @model.get(\"name\")\n            metadoctype : @model.get(\"metadoctype\")\n            sum : @model.get(\"sum\")\n            app : @model.get(\"app\")\n\n    template: ->\n        require './templates/doctype'\n\n    events : {\n        'click .more-info' : 'showDescription'\n    }\n\n\n    showDescription: (e) ->\n        jqObj = $(e.currentTarget)\n\n        #show description\n        if (jqObj.hasClass('label-primary'))  \n\n            #prepare elements          \n            descWrapper = jqObj.parent().children('.md-desc-wrapper')\n            newTd = $(document.createElement('td')).attr('colspan', '3')\n            newTr = $(document.createElement('tr')).addClass('bg-gray')\n\n            #tranform elements\n            descWrapper.appendTo(newTd).show()\n            newTd.appendTo(newTr)\n            jqObj.closest(\".\" + @className).after(newTr)\n\n            #change button\n            jqObj.removeClass('label-primary').addClass('label-danger').empty().append(' Hide info <i class=\"icon-minus-sign\"></i> ')\n        \n        #hide description\n        else \n            #prepare elements  \n            descWrapper = jqObj.closest(\".\" + @className).next(\"tr\").find('.md-desc-wrapper').hide()\n\n            #tranform elements\n            jqObj.parent().append(descWrapper)\n            jqObj.closest(\".\" + @className).next(\"tr\").remove()\n\n            #change button\n            jqObj.removeClass('label-danger').addClass('label-primary').empty().append(' More info <i class=\"icon-plus-sign\"></i> ')","BaseView = require '../lib/base_view'\n\nmodule.exports = class DoctypesView extends BaseView\n\n    el: '#content'    \n    template: require('./templates/doctypes')\n\n    \t","BaseView = require '../lib/base_view'\n\nmodule.exports = class NavView extends BaseView\n\n\tel: 'body.application'  \n\ttitles : {\n\t\t'' : '#doctypes'\n\t\t'doctypes' : '#doctypes'\n\t\t'search' : '#search'\n\t\t'searchAllByDoctype' : '#search'\n\t}\n\n\tinitialize:-> \n\t\tBackbone.history.on('route', (source, path) ->\n\t\t\t@render(path)\n\t\t, @)\n\n\trender : (path) ->\n\t\tthat = this\n\t\t$('.nav > li').each () ->\n\t\t\t$(this).removeClass('active')\n\t\t\t$(this).children('a').blur()\n\t\t\tif $(this).children('a').attr('href') is that.titles[path]\n\t\t\t\t$(this).addClass('active')\n\n","ViewCollection = require '../lib/view_collection'\nResultCollection = require '../collections/result_collection'\nResultView = require './result_view'\n\nmodule.exports = class ResultCollectionView extends ViewCollection\n\t\n\titemview: ResultView\n\tcollection: new ResultCollection()\n\n\t\n\tinitialize: ->\t\t\n\t\t@count = @count++\n\t\t@collectionEl = '#basic-accordion'\n\t\tsuper\n\t\t@collection.fetch( {data: $.param(@options)})","View = require './../lib/view'\n\nmodule.exports = class ResultView extends View\n\n\ttagName: 'div'\n\tclassName: 'accordion-group'\n\n\trender: ->\n\t\tsuper\n\t\t\tno_result : @model.get(\"no_result\")\n\t\t\toptions : @model.attributes\n\t\t\tcount : @model.get(\"count\")\n\n\ttemplate: ->\n\t\trequire './templates/result'\n\n\tevents : {\n\t\t'click .accordion-toggle' : 'blurIt'\n\t}\n\tblurIt : (e) ->\n\t\t$(e.currentTarget).blur()\n\n","BaseView = require '../lib/base_view'\n\nmodule.exports = class SearchView extends BaseView\n\n\tel: '#content'    \n\ttemplate: require('./templates/search')    ","td.full.firstLetterUp\n\ta(href='#search/all/#{name}') #{name}\ntd\n\t- if (typeof(sum) === 'number'){\n\t\tspan #{sum}\n\t- }\ntd \n\t- if (typeof(metadoctype) === 'object' || app.length > 0){\n\t\tspan.label.label-primary.more-info  More info \n\t\t\ti.icon-plus-sign \n\t\tdiv.md-desc-wrapper\n\t\t\th5 \n\t\t\t\ti.icon-question-sign \n\t\t\t\t|&nbsp;&nbsp;About #{name}\n\t\t\t- if (app.length > 0) {\n\t\t\t\tdiv.md-desc-container\n\t\t\t\t\tstrong Applications using it :\n\t\t\t\t\tul.sober-list\n\t\t\t\t\t\t- for (var index in app) {\n\t\t\t\t\t\t\tli.firstLetterUp\n\t\t\t\t\t\t\t\ti.icon-download-alt\n\t\t\t\t\t\t\t\tspan #{app[index]}\n\t\t\t\t\t\t- }\n\t\t\t-}\n\t\t\t- if (typeof(metadoctype) === 'object') {\n\t\t\t\tdiv.md-desc-container\n\t\t\t\t\tstrong Fields informations :\n\t\t\t\t\tul.sober-list\n\t\t\t\t\t\t- var fields = metadoctype.fields[0];\n\t\t\t\t\t\t- for (var obj in fields) {\n\t\t\t\t\t\t\tli\n\t\t\t\t\t\t\t\ti.icon-tag\n\t\t\t\t\t\t\t\tspan #{fields[obj].displayName} - \n\t\t\t\t\t\t\t\t\ti #{fields[obj].description} \n\t\t\t\t\t\t- }\n\t\t\t- }\n\t- }\n\t- else {\n\t\ti No information available\n\t- }\n\n","#masthead\n\t.container\n\t\t.masthead-pad            \n\t\t\t.masthead-text\n\t\t\t\th2 Doctypes\n\t\t\t\tp Here you can find the full list of document types present on your cozy\n.container\n\t.row\n\t\t.span12\n\t\t\th3.title My current doctype list\t\n\t\t.span11.offset1\t\n\t\t\t#doctypes-container\n\t\t\t\ttable.table\n\t\t\t\t\tthead\t\t\t\t\t\t\n\t\t\t\t\t\tth Name\n\t\t\t\t\t\tth Number of documents\n\t\t\t\t\t\tth About that doctype\n\t\t\t\t\ttbody#doctypes-list\n","- if (no_result) {\t\ndiv #{no_result}\n- }\n- else if (options) {\n-\tvar content = options.idField ? options[options.idField] : options._id;\n.accordion-heading\n\ta.accordion-toggle(data-toggle=\"collapse\", data-parent=\"#basic-accordion\", href=\"#collapse#{count}\")\n\t\ti.icon-plus-sign\n\t\t|&nbsp;&nbsp;#{content}\n.accordion-body.collapse(style=\"height: 0px;\", id=\"collapse#{count}\")\n\t.accordion-inner\n\t\t- for (var field in options) {\n\t\t- if (field !== 'idField' && field !== 'count') {\n\t\t- if  (typeof options[field] === \"string\" || typeof options[field] === \"number\" || typeof options[field] === \"boolean\") {\n\t\tdiv #{field} : \n\t\t\ti #{options[field]}\n\t\t- }\n\t\t- else if (typeof options[field] === \"object\" && options[field] !== null) {\n\t\tdiv \n\t\t\tstrong #{field} \n\t\t\tul.sober-list\n\t\t\t\t- var withoutFields = true\n\t\t\t\t- for (var obj in options[field]) {\n\t\t\t\t- withoutFields = false\n\t\t\t\t- if (typeof options[field][obj] === 'object') {\n\t\t\t\t- options[field][obj] = $.stringify(options[field][obj])\n\t\t\t\t- }\n\t\t\t\tli #{obj} - \n\t\t\t\t\ti #{options[field][obj]}\n\t\t\t\t- }\n\t\t\t\t- if (withoutFields) {\n\t\t\t\tli \n\t\t\t\t\ti empty\n\t\t\t\t-}\n\t\t- }\n\t\t- }\n\t\t- }\n- }","#masthead\n\t.container\n\t\t.masthead-pad            \n\t\t\t.masthead-text\n\t\t\t\th2 Search Engine\n\t\t\t\tp Here you can prepare and launch your search\n.container\n\t.row\n\t\t.span12\n\t\t\th3.title Results of my previous search\n\t\t\t#basic-accordion.accordion"]}